{
  "code" : "Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBvby5tb3ZpZe+8iCBWSVDop4bpopHop6PmnpAgKyDnsr7pgInlnKjnur\/op4LnnIvmupAg77yJCi8vIEBuYW1lOmVuICAgICAgb28ubW92aWUKLy8gQHZlcnNpb24gICAgICAyMC4zLjE0Ci8vIEBkZXNjcmlwdGlvbiAg57K+6YCJVklQ6KeG6aKR6Kej5p6Q5ZKM5Zyo57q\/6KeC55yL5rqQ77yM6KeG6aKR5bm\/5ZGK5bCR77yM5Y6f572R6aG16Kej5p6Q77yM5Lqr5Y+XVklQ55qE5Y6f55S76KeC5b2x5L2T6aqM44CC5pSv5oyB6IW+6K6v6KeG6aKR44CB54ix5aWH6Im644CB5LyY6YW344CB6IqS5p6cVFbjgIHmkJzni5Dop4bpopHjgIFQUFRW44CBMTkwNeOAgeS5kOinhuetiee9keermeOAglZJUOino+aekOivhOWIhuaOkuW6j++8jOS4jeWQjOe9keermeS4jeWQjOaOkuW6j++8jOi2iuWlveeUqOeahOino+aekOi2iumdoOWJjeOAggovLyBAZGVzY3JpcHRpb246ZW4gIE5PIFZJUCBOTyBWSURFTy4gRm9yIHYucXEsIGlxaXlpLCB5b3VrdSwgbWd0diwgdHYuc29odSwgcHB0diwgMTkwNSwgbGV0di4KLy8gQGF1dGhvciAgICAgICAob8uY4pehy5hvKQovLyBAbmFtZXNwYWNlICAgIGh0dHBzOi8vZ2l0ZWUuY29tL2VjcnVvcy9vbwovLyBAdXBkYXRlVVJMICAgIGh0dHBzOi8vZ2l0ZWUuY29tL2VjcnVvcy9vby9yYXcvbWFzdGVyL3NjcmlwdHMvb28ubW92aWUuanMKLy8gQHN1cHBvcnRVUkwgICBodHRwczovL2dpdGVlLmNvbS9lY3J1b3Mvb28KLy8gQGljb24gICAgICAgICBodHRwczovL2d3LmFsaWNkbi5jb20vdGZzL1RCMVp2d1N5Y2JwSzFSalNaRnlYWFhfcUZYYS00OC00OC5pY28KLy8gQGxpY2Vuc2UgICAgICBHUEwgTGljZW5zZQovLyBAcnVuLWF0ICAgICAgIGRvY3VtZW50LXN0YXJ0Ci8vIEBpbmNsdWRlICAgICAgKgovLyA9PS9Vc2VyU2NyaXB0PT0KCiEgZnVuY3Rpb24oKSB7CiAgdmFyIFZJUOino+aekCA9ICIiLAogICAg5pCc57Si5rqQID0gIlxuXG4gIOixhueToyAgaHR0cHM6Ly9zZWFyY2guZG91YmFuLmNvbS9tb3ZpZS9zdWJqZWN0X3NlYXJjaD9zZWFyY2hfdGV4dD0qKiAgaHR0cHM6Ly9tLmRvdWJhbi5jb20vc2VhcmNoLz90eXBlPW1vdmllJnF1ZXJ5PSoqXG5cbiAg6IW+6K6vICBodHRwczovL20udi5xcS5jb20vc2VhcmNoLmh0bWw\/YWN0PTAma2V5V29yZD0qKiAgIGh0dHBzOi8vdi5xcS5jb20veC9zZWFyY2gvP3E9KipcblxuICDniLHlpYfoibogIGh0dHBzOi8vbS5pcWl5aS5jb20vc2VhcmNoLmh0bWw\/c291cmNlPWRlZmF1bHQma2V5PSoqICBodHRwczovL3NvLmlxaXlpLmNvbS9zby9xXyoqXG5cbiAg5LyY6YW3ICBodHRwczovL3d3dy5zb2t1LmNvbS9tL3kvdmlkZW8\/cT0qKiAgaHR0cHM6Ly9zby55b3VrdS5jb20vc2VhcmNoX3ZpZGVvL3FfKipcblxuICDoipLmnpwgIGh0dHBzOi8vbS5tZ3R2LmNvbS9zby8\/az0qKiAgaHR0cHM6Ly9zby5tZ3R2LmNvbS9zby9rLSoqXG5cbiAg5ZOU5ZOp5ZOU5ZOpICBodHRwczovL20uYmlsaWJpbGkuY29tL3NlYXJjaC5odG1sP2tleXdvcmQ9KiogIGh0dHBzOi8vc2VhcmNoLmJpbGliaWxpLmNvbS9hbGw\/a2V5d29yZD0qKlxuXG4gIDEwOTAgIGh0dHBzOi8vMTA5MHlzLmNvbS8\/Yz1zZWFyY2gmc29ydD1hZGR0aW1lJm9yZGVyPWRlc2MmcGFnZT0xJndkPSoqXG5cbiAg5ZOU5ru0ICBodHRwczovL2JkZTQuY29tL3NlYXJjaC8qKlxuXG4gIOS6keaSrSAgaHR0cHM6Ly9tLnl1bmJ0di5jb20vdm9kc2VhcmNoLy0tLS0tLS0tLS0tLS0uaHRtbD93ZD0qKiAgaHR0cHM6Ly93d3cueXVuYnR2LmNvbS92b2RzZWFyY2gvLS0tLS0tLS0tLS0tLS5odG1sP3dkPSoqXG5cbiAg6aOe5p6B6YCfICBodHRwOi8vbS5mZWlqaXN1OC5jb20vc2VhcmNoLyoqICBodHRwOi8vZmVpamlzdTguY29tL3NlYXJjaC8qKlxuXG4gIFBQVFYgaHR0cHM6Ly9zb3UucHB0di5jb20vc192aWRlbz9rdz0qKiAgaHR0cHM6Ly9tc291LnBwdHYuY29tL3NfdmlkZW8vcGdfcmVzdWx0P2tleXdvcmQ9KipcblxuICDmkJzni5AgIGh0dHBzOi8vbS50di5zb2h1LmNvbS91cGxvYWQvaDUvbS9tc28uaHRtbD9rZXk9KiogIGh0dHBzOi8vc28udHYuc29odS5jb20vbXRzP3dkPSoqXG5cbiAgMTkwNSBodHRwczovL3ZpcC4xOTA1LmNvbS9TZWFyY2g\/cT0qKlxuXG4gIOS5kOinhiAgaHR0cHM6Ly9tLmxlLmNvbS9zZWFyY2g\/d2Q9KiogIGh0dHBzOi8vc28ubGUuY29tL3M\/d2Q9KipcblxuICDlroznvo4gIGh0dHBzOi8vd3d3Lndhbm1laWtrLm1lL3NlYXJjaC8tLS0tLS0tLS0tLS0tLmh0bWw\/d2Q9KipcblxuIiwKICAgIEJFVFRFUl9BRERPTlMgPSBbewogICAgICBuYW1lOiAi5ZOU5ZOp5ZOU5ZOpwrfmkJzntKIiLAogICAgICBtYXRjaDogL2JpbGliaWxpLmNvbVwvc2VhcmNofHNlYXJjaC5iaWxpYmlsaS5jb20vLAogICAgICBqdW1wOiAiI2FsbC1saXN0IHwgYXBwZW5kLCAuaW5kZXhfX2JvYXJkX19zcmMtc2VhcmNoLWJvYXJkLSIKICAgIH0sIHsKICAgICAgbmFtZTogIuWTlOWTqeWTlOWTqSAtIG0iLAogICAgICBtYXRjaDogL21cLmJpbGliaWxpXC5jb20vLAogICAgICBzaWduOiAiLm1nLWZvb3Rlci1jb3B5cmlnaHQiLAogICAgICBoaWRlOiAiLmluZGV4X19vcGVuQXBwQnRuX19zcmMtY29tbW9uQ29tcG9uZW50LXRvcEFyZWEtLCAuaW5kZXhfX2NvbnRhaW5lcl9fc3JjLWNvbW1vbkNvbXBvbmVudC1ib3R0b21PcGVuQXBwLSwgLmJpbGktYXBwLCAucmVjb20td3JhcHBlciwgLmItZm9vdGVyLCAub3Blbi1hcHAtYmFyLCAub3Blbi1hcHAtZmxvYXQsIC5tb3JlLXJldmlldy13cmFwcGVyIgogICAgfSwgewogICAgICBuYW1lOiAi6IW+6K6vwrfmkJzntKIiLAogICAgICBtYXRjaDogL3YucXEuY29tXC8oXHcrXC8pP3NlYXJjaC8sCiAgICAgIGp1bXA6ICIjcmVzdWx0LCAud3JhcHBlcl9tYWluID4gLm1vZF9wYWdlcyIsCiAgICAgIHNpZ246ICIuY29weXJpZ2h0IiwKICAgICAgaGlkZTogIi50dnBfYXBwX2JhciIKICAgIH0sIHsKICAgICAgbmFtZTogIuiFvuiur8K35pKt5pS+6aG1IiwKICAgICAgbWF0Y2g6IC92XC5xcVwuY29tXC8oY292ZXJ8cGxheXx4XC9jb3Zlcnx4XC9wYWdlfHhcL3BsYXl8eFwvbVwvY292ZXJ8eFwvbVwvcGFnZXx4XC9tXC9wbGF5KS8sCiAgICAgIHZpcDogIiN2aXBfdGl0bGUsIC5VX2JveF9iZ19hLCAucGxheWVyX2hlYWRsaW5lLCAubW9kX3ZpZGVvX2luZm8iLAogICAgICB0aXRsZTogIi5tb2RfdmlkZW9faW5mbyAudmlkZW9fdGl0bGUsIC5fbWFpbl90aXRsZSwgLnBsYXllcl90aXRsZSIsCiAgICAgIGZpeFVybDogZnVuY3Rpb24obikgewogICAgICAgIGlmIChuLmluY2x1ZGVzKCJjaWQ9IikpIHsKICAgICAgICAgIHZhciBlID0gbi5tYXRjaCgvY2lkPShcdyspLylbMV0sCiAgICAgICAgICAgIHQgPSBuLm1hdGNoKC92aWQ9KFx3KykvKTsKICAgICAgICAgIHJldHVybiB0ID0gdCA\/ICIvIiArIHRbMV0gOiAiIiwgImh0dHBzOi8vdi5xcS5jb20veC9jb3Zlci8iLmNvbmNhdChlKS5jb25jYXQodCwgIi5odG1sIikKICAgICAgICB9CiAgICAgICAgcmV0dXJuIG4uaW5jbHVkZXMoIi94L2NvdmVyIikgPyBuLnJlcGxhY2UoL1wuaHRtbC4qLywgIi5odG1sIikgOiBuCiAgICAgIH0sCiAgICAgIGhpZGU6ICcubW9kX3NvdXJjZSwgLnZpZGVvX2Z1bmN0aW9uLCAubW9kX3Byb21vdGlvbiwgI3ZpcF9wcml2aWxlZ2UsICN2aXBfYWN0aXZpdHksIC5VX2JnX2IsIC5idG5fb3Blbl92LCAuYnRuX29wZW5hcHAsICN2aXBfaGVhZGVyLCAuYnRuX3VzZXJfaGQsIC5tb2Rfc2lkZXNsaXBfcHJpdmlsZWdlcywgLm1vZF9nYW1lX3JlYywgLm1vZF9zb3VyY2UsIC5tb2RfcHJvbW90aW9uLCAubW9kX3NpZGVzbGlwX2gsIC5idG5fb3BlbiwgLmJ0bl9wYXksIC5tb2RfYm94X2xhc3R2aWV3LCAubW9kX3ZpcF9wb3B1cCwgLm1vZF92aXBfcG9wdXAgKyAubWFza19sYXllciwgdHhwZGl2W2RhdGEtcm9sZT0iaGQtYWQtYWRhcHRlci1pbnRlcmFjdGl2ZWxheWVyIl0nLAogICAgICBjc3M6ICJcbmJvZHksICN2aXBfdGl0bGUge1xuICBwYWRkaW5nLWJvdHRvbTogMCAhaW1wb3J0YW50O1xufVxuXG4ubW9kX2VwaXNvZGVzX251bWJlcnMuaXMtdmlwIC5pdGVtIHtcbiAgd2lkdGg6IGF1dG87XG4gIHBhZGRpbmc6IDAgMWVtO1xufVxuXG4uVV9odG1sX2JnIC5jb250YWluZXIge1xuICBwYWRkaW5nLWJvdHRvbTogMzBweDtcbn1cblxuLm1vZF9wbGF5IC5tb2RfcGxheWVyX3ZpcHRpcHMgLmJ0bl90cnkge1xuICBsZWZ0OiAzMCU7XG59IgogICAgfSwgewogICAgICBuYW1lOiAi54ix5aWH6Im6wrfmkJzntKIiLAogICAgICBtYXRjaDogL20uaXFpeWkuY29tXC9zZWFyY2h8c28uaXFpeWkuY29tLywKICAgICAganVtcDogIi0ubS1ib3gsIC5zZWFyY2gtY29uLXBhZ2UiLAogICAgICBzaWduOiAiLm0tZm9vdGVyIiwKICAgICAgaGlkZTogIi5idG4tdGlja2V0LCAuYnRuLXl1eXVlLCAuYnRuLWRvd25sb2FkLCAubS1pcXlEb3duIgogICAgfSwgewogICAgICBuYW1lOiAi54ix5aWH6Im6wrfmkq3mlL7pobUiLAogICAgICBtYXRjaDogL1wuaXFpeWlcLmNvbVwvdl8vLAogICAgICB2aXA6ICdkaXZbbmFtZT0ibS12aWRlb0luZm8iXSwgI2Jsb2NrLUMnLAogICAgICB0aXRsZTogIiN3aWRnZXQtdmlkZW90aXRsZSwgLnZpZGVvLXRpdGxlLCAuYy10aXRsZS1saW5rLCAucGxheWVyLXRpdGxlIGEiLAogICAgICBmaXhVcmw6ICEwLAogICAgICBzaWduOiAiLm0tZm9vdGVyIiwKICAgICAgaGlkZTogJy5tLWlxeURvd24sIC5oZWFkZXItbG9naW4gKyBkaXYsIC5tLXZpZGVvLWFjdGlvbiwgZGl2W25hbWU9Im0tdmlwUmlnaHRzIl0sIGRpdltuYW1lPSJtLWV4dGVuZEJhciJdLCAubS1pcXlsaW5rLWRpdmVyc2lvbiwgLm0taXF5bGluay1ndWlkZSwgLmMtb3BlblZpcCwgLmMtc2NvcmUtYnRuLCAubS12aWRlb1VzZXItc3BhY2luZywgLm0tcHAtZW50cmFuY2UsIC5tLWhvdFdvcmRzLWJvdHRvbSwgZGl2W3RlbXBsYXRlLXR5cGU9IkFMQlVNIl0gLm0tcGxheWVyLXRpcCwgLmlxcC1ib3gtaW50ZWdyYWwnLAogICAgICBjc3M6ICdcbi5wYWdlX3BsYXkge1xuICBwYWRkaW5nLWJvdHRvbTogMDtcbn1cblxuZGl2W25hbWU9Im0tdmlkZW9JbmZvIl0ge1xuICBwYWRkaW5nLXRvcDogMWVtO1xufVxuXG4ubS1ib3gtaXRlbXMgLm9vLWFsYnVtLWl0ZW0ge1xuICBib3JkZXItcmFkaXVzOiAwLjA1ZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNlOWVjZWY7XG4gIGNvbG9yOiAjNDk1MDU3O1xuICBwYWRkaW5nOiAwLjVlbSAxZW07XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luOiAwLjI1ZW07XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4ubS12aWRlby1wbGF5ZXIgI29vLXBsYXllciB7XG4gIHBhZGRpbmctdG9wOiA1Ni4yNSU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG59XG4nCiAgICB9LCB7CiAgICAgIG5hbWU6ICLkvJjphbfCt+aQnOe0oiIsCiAgICAgIG1hdGNoOiAvc29rdS5jb21cL20uK3E9fHNvLnlvdWt1LmNvbVwvc2VhcmNoX3ZpZGVvLywKICAgICAganVtcDogIiNicG1vZHVsZS1tYWluLCAueWtfcmVzdWx0IgogICAgfSwgewogICAgICBuYW1lOiAi5LyY6YW3wrfmkq3mlL7pobUiLAogICAgICBtYXRjaDogL21cLnlvdWt1XC5jb21cL2F8bVwueW91a3VcLmNvbVwvdnx2XC55b3VrdVwuY29tXC92Xy8sCiAgICAgIHZpcDogIi5oNS1kZXRhaWwtaW5mbywgLnBsYXllci10aXRsZSIsCiAgICAgIHRpdGxlOiAiLnBsYXllci10aXRsZSAuc3VidGl0bGUgYSwgLm1vZHVsZS1uYW1lLCAuYW50aG9sb2d5LXRpdGxlLXdyYXAgLnRpdGxlLCAudGl0bGUtbGluayIsCiAgICAgIGZpeFVybDogITAsCiAgICAgIHNpZ246ICIuY29weXJpZ2h0IiwKICAgICAgaGlkZTogIi5oNS1kZXRhaWwtZ3VpZGUsIC5oNS1kZXRhaWwtYWQsIC5icmllZi1idG0sIC5zbWFydEJhbm5lckJ0biwgLmNtdC11c2VyLWFjdGlvbiwgI3JpZ2h0LXRpdGxlLWFkLWJhbm5lciwgLkNvcm5lci1jb250YWluZXIiLAogICAgICBjc3M6ICJcbiNicG1vZHVsZS1wbGF5cFxuLy8gTk9URSBTUExJVEVSYWdlLWxlZnR0aXRsZSB7XG4gIGhlaWdodDogYXV0byAhaW1wb3J0YW50O1xufSIKICAgIH0sIHsKICAgICAgbmFtZTogIuWcn+ixhsK35pKt5pS+6aG1IiwKICAgICAgbWF0Y2g6IC9cLnR1ZG91LmNvbVwvdlwvLywKICAgICAgdmlwOiAiLnBsYXktdmlkZW8tZGVzYywgLnRkLXBsYXlfX2Jhc2VpbmZvIiwKICAgICAgdGl0bGU6ICIudGQtbGlzdGJveF9fdGl0bGUsIC52aWRlby1kZXNjLXRpdGxlIiwKICAgICAgZml4VXJsOiAhMCwKICAgICAgaGlkZTogIi52aWRlby1wbGF5ZXItdG9wYmFyLCAudGQtaDVfX3BsYXllcl9fYXBwZ3VpZGUsICN0dWRvdS1mb290ZXIsIC5kcm9wZG93bl9fcGFuZWxfX2NvbiIKICAgIH0sIHsKICAgICAgbmFtZTogIuiKkuaenMK35pCc57SiIiwKICAgICAgbWF0Y2g6IC9tLm1ndHYuY29tXC9zb1wvfHNvLm1ndHYuY29tXC9zby8sCiAgICAgIGp1bXA6ICIjcGFnaW5hdG9yLCAucmVzdWx0LWJveCAubWVkaWEiLAogICAgICBrZXl3b3JkOiAva1stPV0oW14mXD9cL1wuXSspLwogICAgfSwgewogICAgICBuYW1lOiAi6IqS5p6cwrfmkq3mlL7pobUiLAogICAgICBtYXRjaDogL1wubWd0dlwuY29tXC8oYnxsKVwvLywKICAgICAgdmlwOiBbIi54dWFuamkgfCBiZWZvcmUiLCAiLnYtcGFuZWwtYm94Il0sCiAgICAgIHRpdGxlOiAiLnYtcGFuZWwtdGl0bGUsIC52dC10eHQiLAogICAgICBmaXhVcmw6ICEwLAogICAgICBzaWduOiAiLm1nLWZvb3Rlci1jb3B5cmlnaHQiLAogICAgICBoaWRlOiAiLmFkLWJhbm5lciwgLnZpZGVvLWFyZWEtYmFyLCAudmlkZW8tZXJyb3IgLmJ0biwgLm0tdmlwLWxpc3QsIC5tLXZpcC1saXN0ICsgZGl2Om5vdChbY2xhc3NdKSwgLnRvYXBwLCAudmlkZW8tY29tbWVudCAuZnQsIC5tZy1hcHAtc3dpcCIKICAgIH0sIHsKICAgICAgbmFtZTogIuaQnOeLkMK35pCc57SiIiwKICAgICAgbWF0Y2g6IC9tLnR2LnNvaHUuY29tLitrZXk9fHNvLnR2LnNvaHUuY29tLit3ZD0vLAogICAgICBqdW1wOiAiLnNzTW9yZSB8IGJlZm9yZSwgLnNlbGVjdC1jb250YWluZXIgfCBiZWZvcmUiCiAgICB9LCB7CiAgICAgIG5hbWU6ICLmkJzni5DCt+aSreaUvumhtSIsCiAgICAgIG1hdGNoOiAvZmlsbVwuc29odVwuY29tXC9hbGJ1bVwvfHR2XC5zb2h1XC5jb21cLyh2fHBob25lX3BsYXlfZmlsbSkvLAogICAgICB2aXA6ICIudGl0bGUtd3JhcCwgLnZpZGVvSW5mbywgLnR3LWluZm8sIC5wbGF5ZXItZGV0YWlsLCAubW92aWUtaW5mby1jb250ZW50IiwKICAgICAgdGl0bGU6ICIjdmluZm9ib3ggaDIsIC50LWluZm8sIC5tb3ZpZS10IGgzIiwKICAgICAgZml4VXJsOiBmdW5jdGlvbihuKSB7CiAgICAgICAgaWYgKC9waG9uZV9wbGF5X2ZpbG0uK2NoYW5uZWxlZD0vLnRlc3QobikpIHsKICAgICAgICAgIHZhciBlID0gbi5tYXRjaCgvY2hhbm5lbGVkPShcdyspLylbMV0sCiAgICAgICAgICAgIHQgPSBuLm1hdGNoKC9haWQ9KFx3KykvKVsxXTsKICAgICAgICAgIHJldHVybiAiaHR0cHM6Ly9maWxtLnNvaHUuY29tL2FsYnVtLyIuY29uY2F0KHQsICIuaHRtbD9jaGFubmVsZWQ9IikuY29uY2F0KGUpCiAgICAgICAgfQogICAgICAgIHJldHVybiBuCiAgICAgIH0sCiAgICAgIHNpZ246ICIubGlua3MiLAogICAgICBoaWRlOiAiLmFjdHYtYmFubmVyLCAuYnRuLXh6LWFwcCwgLnR3aW5mb19pY29ud3JhcCwgLmJ0bi1jb21tZW50LWFwcCwgI2FkX2Jhbm5lciwgLmFkdmVydGlzZSwgLm1haW4tYWQtdmlldy1ib3gsIC5mb290LnNvaHUtc3dpcGVyLCAuYXBwLXN0YXItdmJveCwgLmFwcC1ndWVzcy12Ym94LCAubWFpbi1yZWMtdmlldy1ib3gsIC5hcHAtcWlhbmZhbi1ib3gsIC5jb21tZW50LWVtcHR5LWJnLCAuY29weWluZm8sIC5waC12Ym94LCAuYnRuX21fYWN0aW9uLCAuYnRuLXh6LWFwcCwgI2ZpbG1fdG9wX2Jhbm5lciwgLmJ0bi1jb21tZW50LWFwcCIsCiAgICAgIGNzczogIlxuLmNvbW1lbnQtZW1wdHktdHh0IHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLmFwcC12aWV3LWJveCArIGZvb3RlciB7XG4gIHBhZGRpbmc6IDA7XG4gIG9wYWNpdHk6IDAuNTtcbn1cblxuI3NvaHVwbGF5ZXIgI21lbnUge1xuICB6LWluZGV4OiAyMTQ3NDgzNjQ3O1xufSIKICAgIH0sIHsKICAgICAgbmFtZTogIuS5kOinhsK35pCc57SiIiwKICAgICAgbWF0Y2g6IC9tLmxlLmNvbVwvc2VhcmNofHNvLmxlLmNvbVwvcy8sCiAgICAgIGp1bXA6ICIuY29sdW1uX3RpdCB8IGJlZm9yZSwgLlJlbGF0ZSB8IGJlZm9yZSIKICAgIH0sIHsKICAgICAgbmFtZTogIuS5kOinhsK35pKt5pS+6aG1IiwKICAgICAgbWF0Y2g6IC9cLmxlXC5jb21cLyhwdHZcL3ZwbGF5XC98dnBsYXlfKS8sCiAgICAgIHZpcDogIi5pbnRyb2R1Y3Rpb25fYm94LCAuYnJpZWZJbnRyb19sZWZ0IC5pbmZvX2xpc3QiLAogICAgICB0aXRsZTogIi5icmllZkludHJvX2luZm8gLmluZm9fdGl0LCAjai1pbnRyb2R1Y3Rpb24gaDIiLAogICAgICBmaXhVcmw6ICEwLAogICAgICBoaWRlOiAiLmdhbWVQcm9tb3Rpb24sIC5nYW1lUHJvbW90aW9uVHh0LCAjai1sZWFwcE1vcmUsIC5sYnpEYW9saXUsIC5hcmtCb3giCiAgICB9LCB7CiAgICAgIG5hbWU6ICLlkqrlkpUuY27Ct+aQnOe0oiIsCiAgICAgIG1hdGNoOiAvXC5taWd1XC5jblwvc2VhcmNoXC5odG1sLywKICAgICAganVtcDogIi5wYWdpbmF0aW9uLCAuY29weXJpZ2h0IHwgYmVmb3JlIiwKICAgICAga2V5d29yZDogL2NvbnRlbnQ9KFteJlw\/XC9cLl0rKS8sCiAgICAgIGhpZGU6ICIuZG93bi1idG4iCiAgICB9LCB7CiAgICAgIG5hbWU6ICLlkqrlkpXCt+aQnOe0oiIsCiAgICAgIG1hdGNoOiAvXC5taWd1dmlkZW9cLmNvbVwvLipzZWFyY2guaHRtbC8sCiAgICAgIGp1bXA6ICIuc2VhcmNoLXBhZ2luYXRpb24sIC5zZWFyY2gtbWFpbiIsCiAgICAgIGtleXdvcmQ6IC9rZXl3b3Jkcz0oW14mXD9cL1wuXSspfFw\/LiojKFteJlw\/XC9cLl0rKS8KICAgIH0sIHsKICAgICAgbmFtZTogIuWSquWSlcK35pKt5pS+6aG1IiwKICAgICAgbWF0Y2g6IC9taWd1dmlkZW9cLmNvbVwvLitcL2RldGFpbFwuaHRtbC8sCiAgICAgIHZpcDogIi5wbGF5ZXJGb290ZXIsIC5wcm9ncmFtZ3JvdXAiLAogICAgICB0aXRsZTogIi5sZWZ0LWJveCAudGl0bGUsIC5lcGlzb2RlVGl0bGUsIC52aWRlb190aXRsZSIsCiAgICAgIGhpZGU6ICcuZ3JvdXAtaXRlbVtuYW1lKj0i5bm\/5ZGKIl0sIC5vcGVuQ2xpZW50JwogICAgfSwgewogICAgICBuYW1lOiAiUFBUVsK35pCc57SiIiwKICAgICAgbWF0Y2g6IC9zb3UucHB0di5jb21cL3NfdmlkZW8uK2t3PXxtc291LnBwdHYuY29tXC9zX3ZpZGVvXC8uK2tleXdvcmQ9LywKICAgICAganVtcDogIi5wYWdpbmF0aW9uLCAuemhlbmdwaWFuLWJveCB8IGFwcGVuZCIKICAgIH0sIHsKICAgICAgbmFtZTogIlBQVFbCt+aSreaUvumhtSIsCiAgICAgIG1hdGNoOiAvKHZ8bSlcLnBwdHZcLmNvbVwvc2hvd1wvLywKICAgICAgdmlwOiAiLm0gLmNmLCAudm9kLXRpdCwgLnZvZC1pbnRvciIsCiAgICAgIHRpdGxlOiAiI3ZpZGVvLWluZm8gaDEsIC52b2QtdGl0LWluIHNwYW4sIC50aXQiLAogICAgICBmaXhVcmw6ICEwLAogICAgICBoaWRlOiAnLnctdmlkZW8tdmFzdGFkLCAjdmlkZW8tZG93bmxvYWQtZ2FtZSwgZGl2W2NsYXNzKj0ib3BlbmFwcCJdLCBkaXZbY2xhc3MqPSJzaWRlLWFkdiJdLCBkaXZbaWQqPSJhZnBfIl0sIGRpdltpZCo9Ii1hZnAiXSwgaWZyYW1lW3NyYyo9Ii9nYW1lLyJdLCAuYWZwUG9zaXRpb24sIC5kb3dubG9hZC1pY29uYmFyJwogICAgfSwgewogICAgICBuYW1lOiAi5Y2O5pWwwrfmkJzntKIiLAogICAgICBtYXRjaDogL3dhc3VcLmNuXC8uK1NlYXJjaFwvLitrPS8sCiAgICAgIGp1bXA6ICIjdG9wVm9kIgogICAgfSwgewogICAgICBuYW1lOiAi5Y2O5pWwwrfmkq3mlL7pobUiLAogICAgICBtYXRjaDogL3dhc3VcLmNuXC8uKltwUF1sYXlcL3Nob3dcLy8sCiAgICAgIHZpcDogIi5tb3ZpZV90aXRsZSIsCiAgICAgIHRpdGxlOiAiLm1vdmllX3RpdGxlIGgyIiwKICAgICAgZml4VXJsOiAhMCwKICAgICAgaGlkZTogJ2RpdltpZCo9IkJBSURVIl0sIC5wbGF5ZXJfbWVudV9jb24sIGJvZHkgPiBkaXZbc3R5bGUqPSJmaXhlZCJdJwogICAgfSwgewogICAgICBuYW1lOiAiMTkwNcK35pCc57SiIiwKICAgICAgbWF0Y2g6IC9cLjE5MDVcLmNvbVwvKFNlYXJjaHxzZWFyY2gpLywKICAgICAganVtcDogIi5wYWdpbmF0aW9uLCAjbmV3X3BhZ2UiCiAgICB9LCB7CiAgICAgIG5hbWU6ICIxOTA1wrfmkq3mlL7pobUiLAogICAgICBtYXRjaDogLzE5MDUuY29tXC9wbGF5LywKICAgICAgdmlwOiAiLnBsYXllckJveC1pbmZvLCAjbW92aWVfaW5mbywgLnBsYXllci1uYXYiLAogICAgICB0aXRsZTogIiNtb3ZpZV9pbmZvIC5pbmZvSW5uZXIgLnRpdGxlLCAubW92aWUtdGl0bGUsIC50dl90aXRsZSIsCiAgICAgIGZpeFVybDogITAsCiAgICAgIGhpZGU6ICIjYXBwX3N0b3JlLCAub3Blbk1lbWJlcnNoaXBCdG4sIGJvZHkgPiBkaXZbaWRdID4gaWZyYW1lLCAucHYyLWFkdmVydGlzZW1lbnQsIC5vcGVuLWFwcCIsCiAgICAgIGNzczogIlxuI21vdmllX2luZm8ge1xuICBtYXJnaW4tdG9wOiAxZW07XG59IgogICAgfSwgewogICAgICBuYW1lOiAi5a6M576O55yL55yLwrfmkJzntKIiLAogICAgICBtYXRjaDogL3dhbm1laWtrXC5tZVwvc2VhcmNoLywKICAgICAganVtcDogIi5zdHVpLXBhZ2UsIC5zdHVpLXBhbm5lbCIKICAgIH0sIHsKICAgICAgbmFtZTogIuWujOe+jueci+eciyIsCiAgICAgIG1hdGNoOiAvd2FubWVpa2tcLm1lLywKICAgICAgaGlkZTogIi5jb250YWluZXIgfiAqW2lkXSIKICAgIH0sIHsKICAgICAgbmFtZTogIumjnuaegemAn8K35pCc57SiIiwKICAgICAgbWF0Y2g6ICJmZWlqaXN1OC5jb20vc2VhcmNoIiwKICAgICAganVtcDogIiNyZXN1bHQiCiAgICB9LCB7CiAgICAgIG5hbWU6ICLpo57mnoHpgJ8iLAogICAgICBtYXRjaDogL2ZlaWppc3U4XC5jb20vLAogICAgICBoaWRlOiAiLmluZGV4LXRvcCB+IGRpdiwgLnYtdG9wIH4gZGl2LCAuZm9vdGVyIH4gZGl2LCAuZm9vdGVyIH4gYnJkZSwgYm9keSA+IGRpdjpub3QoW2NsYXNzXSkiCiAgICB9LCB7CiAgICAgIG5hbWU6ICIxMDkw5b2x6KeGwrfmkJzntKIiLAogICAgICBtYXRjaDogLzEwOTB5cy5jb21cLy4rYz1zZWFyY2gvLAogICAgICBqdW1wOiAiLnN0dWktcGFnZSwgLnN0dWktcGFubmVsIgogICAgfSwgewogICAgICBuYW1lOiAiMTA5MOW9seinhiIsCiAgICAgIG1hdGNoOiAvMTA5MHlzXC5jb20vLAogICAgICBoaWRlOiAiLmNvbnRhaW5lciB+ICpbaWRdIiwKICAgICAgY3NzOiAiXG5ib2R5IHtcbiAgcGFkZGluZy1ib3R0b206IDAgIWltcG9ydGFudDtcbn0iCiAgICB9LCB7CiAgICAgIG5hbWU6ICLlk5Tmu7TCt+aQnOe0oiIsCiAgICAgIG1hdGNoOiAvYmRlNC5jb21cL3NlYXJjaFwvLywKICAgICAganVtcDogIi5zZWFyY2gtbGlzdCIKICAgIH0sIHsKICAgICAgbmFtZTogIuWTlOa7tCIsCiAgICAgIG1hdGNoOiAvYmRlNFwuY29tLywKICAgICAgaGlkZTogImJvZHkgPiAqW2lkXSIKICAgIH0sIHsKICAgICAgbmFtZTogIuS6keaSrcK35pCc57SiIiwKICAgICAgbWF0Y2g6ICJ5dW5idHYuY29tL3ZvZHNlYXJjaCIsCiAgICAgIGp1bXA6ICIucGFnZXIiLAogICAgICBrZXl3b3JkOiAiLmJyZWFkY3J1bWIgZm9udCIKICAgIH1dLAogICAgUHVyaWZ5S2V5d29yZFJlZ2V4ID0gLy4q44CKfOOAiy4qfFxzKuesrC57MSwzfVvlraPpm4ZdW1xzXGRdKiR8XHMrXGR7MiwzfVxzKiQvZywKICAgIENvbW1vblNlYXJjaEtleXdvcmRSZWdleCA9IC8od2R8a2V5fGtleXdvcmR8a2V5V29yZHxrd3xxKT0oW14mXD9cL1wuLV0rKXwoc2VhcmNoXC98c2VhY2hlci18cV8pKFteJlw\\/IHZpcFNpdGVTaWduWzFdIDogIm9vLm1vdmllIiwgVklQX1VSTFMgPSBWSVBfVVJMUy5tYXAoKGZ1bmN0aW9uKG4pIHsKICAgICAgICB2YXIgZSA9IHBhcnNlT29Vcmwobi5yZXBsYWNlKC89aHR0cC4rL2csICI9IikucmVwbGFjZSgvXHMq4pyULiovZywgIiIpKTsKICAgICAgICBpZiAoZS53ZWlnaHQgPSAwLCBlLm5hbWUuaW5jbHVkZXMoIu+\/pSIpKSB7CiAgICAgICAgICB2YXIgdCA9IGUubmFtZS5zcGxpdCgvXHMq77+lXHMqLyk7CiAgICAgICAgICBpZiAoMSA9PT0gdC5sZW5ndGggPyB0ID0gdFswXSA6IChlLm5hbWUgPSB0WzBdLnJlcGxhY2UoL15ccypbXGRcLl0rXHMqLywgIiIpLCB0ID0gdFsxXSksIHQuaW5jbHVkZXModmlwU2l0ZVNpZ24pKSB7CiAgICAgICAgICAgIHZhciBpID0gdC5zcGxpdCgvXHMqXHxccyovKTsKICAgICAgICAgICAgZS53ZWlnaHQgKz0gLjA1ICogKGkubGVuZ3RoICsgMSksIGkuZm9yRWFjaCgoZnVuY3Rpb24obikgewogICAgICAgICAgICAgIGlmIChuLmluY2x1ZGVzKHZpcFNpdGVTaWduKSkgewogICAgICAgICAgICAgICAgaXNNb2JpbGUgJiYgbi5pbmNsdWRlcygiLG0iKSAmJiAoZS5pc00gPSAhMCk7CiAgICAgICAgICAgICAgICB2YXIgdCA9IG4ubWF0Y2goLywoW1xkXC5dKykvKTsKICAgICAgICAgICAgICAgIHQgJiYgKGUud2VpZ2h0ICs9IE51bWJlcih0WzFdKSkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pKSwgZS51cmwuaW5jbHVkZXMoIm0xOTA3IikgPyBlLndlaWdodCA9IGUud2VpZ2h0ICogKGlzTW9iaWxlID8gLjQ1IDogLjc1KSA6IGUudXJsLmluY2x1ZGVzKCJ5aW5neGlhbmdiYW8iKSA\/IGUud2VpZ2h0ID0gLjcgKiBlLndlaWdodCA6IGUudXJsLmluY2x1ZGVzKCJiZWlqaXhzIikgJiYgKGUud2VpZ2h0ID0gLjY1ICogZS53ZWlnaHQpCiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIGUud2VpZ2h0ID0gLTE7CiAgICAgICAgcmV0dXJuIG1heFZpcFdlaWdodCA9IE1hdGgubWF4KG1heFZpcFdlaWdodCwgZS53ZWlnaHQpLCBlCiAgICAgIH0pKTsKICAgICAgdmFyIGdldFZpcFVybFdlaWdodCA9IGZ1bmN0aW9uKG4pIHsKICAgICAgICByZXR1cm4gbi5pc00gPyBuLndlaWdodCArIDEwMCA6IG4ud2VpZ2h0CiAgICAgIH07CiAgICAgIFZJUF9VUkxTLnNvcnQoKGZ1bmN0aW9uKG4sIGUpIHsKICAgICAgICByZXR1cm4gZ2V0VmlwVXJsV2VpZ2h0KGUpIC0gZ2V0VmlwVXJsV2VpZ2h0KG4pCiAgICAgIH0pKSwgbWF4VmlwV2VpZ2h0ICo9IGlzTW9iaWxlID8gMS4yIDogMS4xOwogICAgICB2YXIgcGxheWVyVGl0bGUgPSAiIiwKICAgICAgICBpc0hpa2VyID0gISF3aW5kb3cuZnlfYnJpZGdlX2FwcCwKICAgICAgICBpc01peGlhID0gISF3aW5kb3cubXhfYnJvd3Nlcl9vYmosCiAgICAgICAgaXNBbGxvd0hpa2VyU25pZmYgPSBpc0hpa2VyICYmICEhd2luZG93LmZ5X2JyaWRnZV9hcHAuZ2V0TmV0d29ya1JlY29yZHMsCiAgICAgICAgaXNBbGxvd01peGlhU25pZmYgPSBpc01peGlhICYmICEhd2luZG93Lm14X2Jyb3dzZXJfb2JqLmdldHdlYmxvZywKICAgICAgICBpc0FsbG93U25pZmYgPSBpc1VzZURlZmF1bHRWaXBVcmxzICYmIChpc0FsbG93SGlrZXJTbmlmZiB8fCBpc0FsbG93TWl4aWFTbmlmZiksCiAgICAgICAgc25pZmZUaW1lc3RhbXAgPSBEYXRlLm5vdygpLAogICAgICAgIHNuaWZmTmFtZSA9IGlzSGlrZXIgPyAi6KeG55WMIiA6IGlzTWl4aWEgPyAi57Gz5L6gIiA6ICLll4XmjqIiLAogICAgICAgIGlzU25pZmZpbmcgPSAhMSwKICAgICAgICBzbmlmZlRpY2sgPSAwOwogICAgICBsb2coIuOAkCIuY29uY2F0KHNuaWZmTmFtZSwgIuOAkWlzQWxsb3dTbmlmZjoiKSwgaXNBbGxvd1NuaWZmKTsKICAgICAgdmFyIGlzSW52YWxpZFNuaWZmVXJsUmVnZXggPSAvYnRyYWNlXC52aWRlb1wucXFcLmNvbS8sCiAgICAgICAgaXNWaWRlb1VybFJlZ2V4ID0gL1wuKG1wNHxtM3U4fDNncHx3bXZ8Zmx2fGF2aXxybXZifG00dnx0cykvLAogICAgICAgIGlzQmFkVmlkZW9VcmxSZWdleCA9IC8oNzFlZGdlfGNvbS1sLXlvdWt1KVwuY29tLywKICAgICAgICBaZXB0byA9IGZ1bmN0aW9uKCkgewogICAgICAgICAgdmFyIG4sIGUsIHQsIGksIG8sIHIgPSBbXSwKICAgICAgICAgICAgYSA9IHIuY29uY2F0LAogICAgICAgICAgICBsID0gci5maWx0ZXIsCiAgICAgICAgICAgIHMgPSByLnNsaWNlLAogICAgICAgICAgICBjID0gd2luZG93LmRvY3VtZW50LAogICAgICAgICAgICBwID0ge30sCiAgICAgICAgICAgIHUgPSB7fSwKICAgICAgICAgICAgZCA9IHsKICAgICAgICAgICAgICAiY29sdW1uLWNvdW50IjogMSwKICAgICAgICAgICAgICBjb2x1bW5zOiAxLAogICAgICAgICAgICAgICJmb250LXdlaWdodCI6IDEsCiAgICAgICAgICAgICAgImxpbmUtaGVpZ2h0IjogMSwKICAgICAgICAgICAgICBvcGFjaXR5OiAxLAogICAgICAgICAgICAgICJ6LWluZGV4IjogMSwKICAgICAgICAgICAgICB6b29tOiAxCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGYgPSAvXlxzKjwoXHcrfCEpW14+XSo+LywKICAgICAgICAgICAgbSA9IC9ePChcdyspXHMqXC8\/Pig\/OjxcL1wxPnwpJC8sCiAgICAgICAgICAgIGggPSAvPCg\/IWFyZWF8YnJ8Y29sfGVtYmVkfGhyfGltZ3xpbnB1dHxsaW5rfG1ldGF8cGFyYW0pKChbXHc6XSspW14+XSopXC8+L2dpLAogICAgICAgICAgICB2ID0gL14oPzpib2R5fGh0bWwpJC9pLAogICAgICAgICAgICBnID0gLyhbQS1aXSkvZywKICAgICAgICAgICAgeSA9IFsidmFsIiwgImNzcyIsICJodG1sIiwgInRleHQiLCAiZGF0YSIsICJ3aWR0aCIsICJoZWlnaHQiLCAib2Zmc2V0Il0sCiAgICAgICAgICAgIGIgPSBjLmNyZWF0ZUVsZW1lbnQoInRhYmxlIiksCiAgICAgICAgICAgIE0gPSBjLmNyZWF0ZUVsZW1lbnQoInRyIiksCiAgICAgICAgICAgIHcgPSB7CiAgICAgICAgICAgICAgdHI6IGMuY3JlYXRlRWxlbWVudCgidGJvZHkiKSwKICAgICAgICAgICAgICB0Ym9keTogYiwKICAgICAgICAgICAgICB0aGVhZDogYiwKICAgICAgICAgICAgICB0Zm9vdDogYiwKICAgICAgICAgICAgICB0ZDogTSwKICAgICAgICAgICAgICB0aDogTSwKICAgICAgICAgICAgICAiKiI6IGMuY3JlYXRlRWxlbWVudCgiZGl2IikKICAgICAgICAgICAgfSwKICAgICAgICAgICAgVCA9IC9jb21wbGV0ZXxsb2FkZWR8aW50ZXJhY3RpdmUvLAogICAgICAgICAgICBVID0gL15bXHctXSokLywKICAgICAgICAgICAgeCA9IHt9LAogICAgICAgICAgICBEID0geC50b1N0cmluZywKICAgICAgICAgICAgSiA9IHt9LAogICAgICAgICAgICBOID0gYy5jcmVhdGVFbGVtZW50KCJkaXYiKSwKICAgICAgICAgICAgayA9IHsKICAgICAgICAgICAgICB0YWJpbmRleDogInRhYkluZGV4IiwKICAgICAgICAgICAgICByZWFkb25seTogInJlYWRPbmx5IiwKICAgICAgICAgICAgICBmb3I6ICJodG1sRm9yIiwKICAgICAgICAgICAgICBjbGFzczogImNsYXNzTmFtZSIsCiAgICAgICAgICAgICAgbWF4bGVuZ3RoOiAibWF4TGVuZ3RoIiwKICAgICAgICAgICAgICBjZWxsc3BhY2luZzogImNlbGxTcGFjaW5nIiwKICAgICAgICAgICAgICBjZWxscGFkZGluZzogImNlbGxQYWRkaW5nIiwKICAgICAgICAgICAgICByb3dzcGFuOiAicm93U3BhbiIsCiAgICAgICAgICAgICAgY29sc3BhbjogImNvbFNwYW4iLAogICAgICAgICAgICAgIHVzZW1hcDogInVzZU1hcCIsCiAgICAgICAgICAgICAgZnJhbWVib3JkZXI6ICJmcmFtZUJvcmRlciIsCiAgICAgICAgICAgICAgY29udGVudGVkaXRhYmxlOiAiY29udGVudEVkaXRhYmxlIgogICAgICAgICAgICB9LAogICAgICAgICAgICBJID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgcmV0dXJuIG4gaW5zdGFuY2VvZiBBcnJheQogICAgICAgICAgICB9OwoKICAgICAgICAgIGZ1bmN0aW9uIF8obikgewogICAgICAgICAgICByZXR1cm4gbnVsbCA9PSBuID8gU3RyaW5nKG4pIDogeFtELmNhbGwobildIHx8ICJvYmplY3QiCiAgICAgICAgICB9CgogICAgICAgICAgZnVuY3Rpb24gUyhuKSB7CiAgICAgICAgICAgIHJldHVybiAiZnVuY3Rpb24iID09IF8obikKICAgICAgICAgIH0KCiAgICAgICAgICBmdW5jdGlvbiBRKG4pIHsKICAgICAgICAgICAgcmV0dXJuIG51bGwgIT0gbiAmJiBuID09IG4ud2luZG93CiAgICAgICAgICB9CgogICAgICAgICAgZnVuY3Rpb24gVihuKSB7CiAgICAgICAgICAgIHJldHVybiBudWxsICE9IG4gJiYgbi5ub2RlVHlwZSA9PSBuLkRPQ1VNRU5UX05PREUKICAgICAgICAgIH0KCiAgICAgICAgICBmdW5jdGlvbiBqKG4pIHsKICAgICAgICAgICAgcmV0dXJuICJvYmplY3QiID09IF8obikKICAgICAgICAgIH0KCiAgICAgICAgICBmdW5jdGlvbiBFKG4pIHsKICAgICAgICAgICAgcmV0dXJuIGoobikgJiYgIVEobikgJiYgT2JqZWN0LmdldFByb3RvdHlwZU9mKG4pID09IE9iamVjdC5wcm90b3R5cGUKICAgICAgICAgIH0KCiAgICAgICAgICBmdW5jdGlvbiBSKG4pIHsKICAgICAgICAgICAgdmFyIHQgPSAhIW4gJiYgImxlbmd0aCIgaW4gbiAmJiBuLmxlbmd0aCwKICAgICAgICAgICAgICBpID0gZS50eXBlKG4pOwogICAgICAgICAgICByZXR1cm4gImZ1bmN0aW9uIiAhPSBpICYmICFRKG4pICYmICgiYXJyYXkiID09IGkgfHwgMCA9PT0gdCB8fCAibnVtYmVyIiA9PSB0eXBlb2YgdCAmJiB0ID4gMCAmJiB0IC0gMSBpbiBuKQogICAgICAgICAgfQoKICAgICAgICAgIGZ1bmN0aW9uIEEobikgewogICAgICAgICAgICByZXR1cm4gbi5yZXBsYWNlKC86Oi9nLCAiLyIpLnJlcGxhY2UoLyhbQS1aXSspKFtBLVpdW2Etel0pL2csICIkMV8kMiIpLnJlcGxhY2UoLyhbYS16XGRdKShbQS1aXSkvZywgIiQxXyQyIikucmVwbGFjZSgvXy9nLCAiLSIpLnRvTG93ZXJDYXNlKCkKICAgICAgICAgIH0KCiAgICAgICAgICBmdW5jdGlvbiBPKG4pIHsKICAgICAgICAgICAgcmV0dXJuIG4gaW4gdSA\/IHVbbl0gOiB1W25dID0gbmV3IFJlZ0V4cCgiKF58XFxzKSIgKyBuICsgIihcXHN8JCkiKQogICAgICAgICAgfQoKICAgICAgICAgIGZ1bmN0aW9uIEMobiwgZSkgewogICAgICAgICAgICByZXR1cm4gIm51bWJlciIgIT0gdHlwZW9mIGUgfHwgZFtBKG4pXSA\/IGUgOiBlICsgInB4IgogICAgICAgICAgfQoKICAgICAgICAgIGZ1bmN0aW9uICQobikgewogICAgICAgICAgICByZXR1cm4gImNoaWxkcmVuIiBpbiBuID8gcy5jYWxsKG4uY2hpbGRyZW4pIDogZS5tYXAobi5jaGlsZE5vZGVzLCAoZnVuY3Rpb24obikgewogICAgICAgICAgICAgIGlmICgxID09IG4ubm9kZVR5cGUpIHJldHVybiBuCiAgICAgICAgICAgIH0pKQogICAgICAgICAgfQoKICAgICAgICAgIGZ1bmN0aW9uIHoobiwgZSkgewogICAgICAgICAgICB2YXIgdCwgaSA9IG4gPyBuLmxlbmd0aCA6IDA7CiAgICAgICAgICAgIGZvciAodCA9IDA7IHQgPCBpOyB0KyspIHRoaXNbdF0gPSBuW3RdOwogICAgICAgICAgICB0aGlzLmxlbmd0aCA9IGksIHRoaXMuc2VsZWN0b3IgPSBlIHx8ICIiCiAgICAgICAgICB9CgogICAgICAgICAgZnVuY3Rpb24gSChlLCB0LCBpKSB7CiAgICAgICAgICAgIGZvciAobiBpbiB0KSBpICYmIChFKHRbbl0pIHx8IEkodFtuXSkpID8gKEUodFtuXSkgJiYgIUUoZVtuXSkgJiYgKGVbbl0gPSB7fSksIEkodFtuXSkgJiYgIUkoZVtuXSkgJiYgKGVbbl0gPSBbXSksIEgoZVtuXSwgdFtuXSwgaSkpIDogdm9pZCAwICE9PSB0W25dICYmIChlW25dID0gdFtuXSkKICAgICAgICAgIH0KCiAgICAgICAgICBmdW5jdGlvbiBCKG4sIHQpIHsKICAgICAgICAgICAgcmV0dXJuIG51bGwgPT0gdCA\/IGUobikgOiBlKG4pLmZpbHRlcih0KQogICAgICAgICAgfQoKICAgICAgICAgIGZ1bmN0aW9uIFAobiwgZSwgdCwgaSkgewogICAgICAgICAgICByZXR1cm4gUyhlKSA\/IGUuY2FsbChuLCB0LCBpKSA6IGUKICAgICAgICAgIH0KCiAgICAgICAgICBmdW5jdGlvbiBGKG4sIGUsIHQpIHsKICAgICAgICAgICAgbnVsbCA9PSB0ID8gbi5yZW1vdmVBdHRyaWJ1dGUoZSkgOiBuLnNldEF0dHJpYnV0ZShlLCB0KQogICAgICAgICAgfQoKICAgICAgICAgIGZ1bmN0aW9uIEwobiwgZSkgewogICAgICAgICAgICB2YXIgdCA9IG4uY2xhc3NOYW1lIHx8ICIiLAogICAgICAgICAgICAgIGkgPSB0ICYmIHZvaWQgMCAhPT0gdC5iYXNlVmFsOwogICAgICAgICAgICBpZiAodm9pZCAwID09PSBlKSByZXR1cm4gaSA\/IHQuYmFzZVZhbCA6IHQ7CiAgICAgICAgICAgIGkgPyB0LmJhc2VWYWwgPSBlIDogbi5jbGFzc05hbWUgPSBlCiAgICAgICAgICB9CgogICAgICAgICAgZnVuY3Rpb24gcShuKSB7CiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgcmV0dXJuIG4gPyAidHJ1ZSIgPT0gbiB8fCAiZmFsc2UiICE9IG4gJiYgKCJudWxsIiA9PSBuID8gbnVsbCA6ICtuICsgIiIgPT0gbiA\/ICtuIDogL15bXFtce10vLnRlc3QobikgPyBlLnBhcnNlSlNPTihuKSA6IG4pIDogbgogICAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgICAgcmV0dXJuIG4KICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIGZ1bmN0aW9uIFgobiwgZSkgewogICAgICAgICAgICBlKG4pOwogICAgICAgICAgICBmb3IgKHZhciB0ID0gMCwgaSA9IG4uY2hpbGROb2Rlcy5sZW5ndGg7IHQgPCBpOyB0KyspIFgobi5jaGlsZE5vZGVzW3RdLCBlKQogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuIEoubWF0Y2hlcyA9IGZ1bmN0aW9uKG4sIGUpIHsKICAgICAgICAgICAgaWYgKCFlIHx8ICFuIHx8IDEgIT09IG4ubm9kZVR5cGUpIHJldHVybiAhMTsKICAgICAgICAgICAgdmFyIHQgPSBuLm1hdGNoZXMgfHwgbi53ZWJraXRNYXRjaGVzU2VsZWN0b3IgfHwgbi5tb3pNYXRjaGVzU2VsZWN0b3IgfHwgbi5vTWF0Y2hlc1NlbGVjdG9yIHx8IG4ubWF0Y2hlc1NlbGVjdG9yOwogICAgICAgICAgICBpZiAodCkgcmV0dXJuIHQuY2FsbChuLCBlKTsKICAgICAgICAgICAgdmFyIGksIG8gPSBuLnBhcmVudE5vZGUsCiAgICAgICAgICAgICAgciA9ICFvOwogICAgICAgICAgICByZXR1cm4gciAmJiAobyA9IE4pLmFwcGVuZENoaWxkKG4pLCBpID0gfkoucXNhKG8sIGUpLmluZGV4T2YobiksIHIgJiYgTi5yZW1vdmVDaGlsZChuKSwgaQogICAgICAgICAgfSwgaSA9IGZ1bmN0aW9uKG4pIHsKICAgICAgICAgICAgcmV0dXJuIG4ucmVwbGFjZSgvLSsoLik\/L2csIChmdW5jdGlvbihuLCBlKSB7CiAgICAgICAgICAgICAgcmV0dXJuIGUgPyBlLnRvVXBwZXJDYXNlKCkgOiAiIgogICAgICAgICAgICB9KSkKICAgICAgICAgIH0sIG8gPSBmdW5jdGlvbihuKSB7CiAgICAgICAgICAgIHJldHVybiBsLmNhbGwobiwgKGZ1bmN0aW9uKGUsIHQpIHsKICAgICAgICAgICAgICByZXR1cm4gbi5pbmRleE9mKGUpID09IHQKICAgICAgICAgICAgfSkpCiAgICAgICAgICB9LCBKLmZyYWdtZW50ID0gZnVuY3Rpb24obiwgdCwgaSkgewogICAgICAgICAgICB2YXIgbywgciwgYTsKICAgICAgICAgICAgcmV0dXJuIG0udGVzdChuKSAmJiAobyA9IGUoYy5jcmVhdGVFbGVtZW50KFJlZ0V4cC4kMSkpKSwgbyB8fCAobi5yZXBsYWNlICYmIChuID0gbi5yZXBsYWNlKGgsICI8JDE+PC8kMj4iKSksIHZvaWQgMCA9PT0gdCAmJiAodCA9IGYudGVzdChuKSAmJiBSZWdFeHAuJDEpLCB0IGluIHcgfHwgKHQgPSAiKiIpLCAoYSA9IHdbdF0pLmlubmVySFRNTCA9ICIiICsgbiwgbyA9IGUuZWFjaChzLmNhbGwoYS5jaGlsZE5vZGVzKSwgKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgIGEucmVtb3ZlQ2hpbGQodGhpcykKICAgICAgICAgICAgfSkpKSwgRShpKSAmJiAociA9IGUobyksIGUuZWFjaChpLCAoZnVuY3Rpb24obiwgZSkgewogICAgICAgICAgICAgIHkuaW5kZXhPZihuKSA+IC0xID8gcltuXShlKSA6IHIuYXR0cihuLCBlKQogICAgICAgICAgICB9KSkpLCBvCiAgICAgICAgICB9LCBKLlogPSBmdW5jdGlvbihuLCBlKSB7CiAgICAgICAgICAgIHJldHVybiBuZXcgeihuLCBlKQogICAgICAgICAgfSwgSi5pc1ogPSBmdW5jdGlvbihuKSB7CiAgICAgICAgICAgIHJldHVybiBuIGluc3RhbmNlb2YgSi5aCiAgICAgICAgICB9LCBKLmluaXQgPSBmdW5jdGlvbihuLCB0KSB7CiAgICAgICAgICAgIHZhciBpLCBvOwogICAgICAgICAgICBpZiAoIW4pIHJldHVybiBKLlooKTsKICAgICAgICAgICAgaWYgKCJzdHJpbmciID09IHR5cGVvZiBuKQogICAgICAgICAgICAgIGlmICgiPCIgPT0gKG4gPSBuLnRyaW0oKSlbMF0gJiYgZi50ZXN0KG4pKSBpID0gSi5mcmFnbWVudChuLCBSZWdFeHAuJDEsIHQpLCBuID0gbnVsbDsKICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIGlmICh2b2lkIDAgIT09IHQpIHJldHVybiBlKHQpLmZpbmQobik7CiAgICAgICAgICAgICAgICBpID0gSi5xc2EoYywgbikKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgIGlmIChTKG4pKSByZXR1cm4gZShjKS5yZWFkeShuKTsKICAgICAgICAgICAgICBpZiAoSi5pc1oobikpIHJldHVybiBuOwogICAgICAgICAgICAgIGlmIChJKG4pKSBvID0gbiwgaSA9IGwuY2FsbChvLCAoZnVuY3Rpb24obikgewogICAgICAgICAgICAgICAgcmV0dXJuIG51bGwgIT0gbgogICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgICBlbHNlIGlmIChqKG4pKSBpID0gW25dLCBuID0gbnVsbDsKICAgICAgICAgICAgICBlbHNlIGlmIChmLnRlc3QobikpIGkgPSBKLmZyYWdtZW50KG4udHJpbSgpLCBSZWdFeHAuJDEsIHQpLCBuID0gbnVsbDsKICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIGlmICh2b2lkIDAgIT09IHQpIHJldHVybiBlKHQpLmZpbmQobik7CiAgICAgICAgICAgICAgICBpID0gSi5xc2EoYywgbikKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIEouWihpLCBuKQogICAgICAgICAgfSwgKGUgPSBmdW5jdGlvbihuLCBlKSB7CiAgICAgICAgICAgIHJldHVybiBKLmluaXQobiwgZSkKICAgICAgICAgIH0pLmV4dGVuZCA9IGZ1bmN0aW9uKG4pIHsKICAgICAgICAgICAgdmFyIGUsIHQgPSBzLmNhbGwoYXJndW1lbnRzLCAxKTsKICAgICAgICAgICAgcmV0dXJuICJib29sZWFuIiA9PSB0eXBlb2YgbiAmJiAoZSA9IG4sIG4gPSB0LnNoaWZ0KCkpLCB0LmZvckVhY2goKGZ1bmN0aW9uKHQpIHsKICAgICAgICAgICAgICBIKG4sIHQsIGUpCiAgICAgICAgICAgIH0pKSwgbgogICAgICAgICAgfSwgSi5xc2EgPSBmdW5jdGlvbihuLCBlKSB7CiAgICAgICAgICAgIHZhciB0LCBpID0gIiMiID09IGVbMF0sCiAgICAgICAgICAgICAgbyA9ICFpICYmICIuIiA9PSBlWzBdLAogICAgICAgICAgICAgIHIgPSBpIHx8IG8gPyBlLnNsaWNlKDEpIDogZSwKICAgICAgICAgICAgICBhID0gVS50ZXN0KHIpOwogICAgICAgICAgICByZXR1cm4gbi5nZXRFbGVtZW50QnlJZCAmJiBhICYmIGkgPyAodCA9IG4uZ2V0RWxlbWVudEJ5SWQocikpID8gW3RdIDogW10gOiAxICE9PSBuLm5vZGVUeXBlICYmIDkgIT09IG4ubm9kZVR5cGUgJiYgMTEgIT09IG4ubm9kZVR5cGUgPyBbXSA6IHMuY2FsbChhICYmICFpICYmIG4uZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSA\/IG8gPyBuLmdldEVsZW1lbnRzQnlDbGFzc05hbWUocikgOiBuLmdldEVsZW1lbnRzQnlUYWdOYW1lKGUpIDogbi5xdWVyeVNlbGVjdG9yQWxsKGUpKQogICAgICAgICAgfSwgZS5jb250YWlucyA9IGMuZG9jdW1lbnRFbGVtZW50LmNvbnRhaW5zID8gZnVuY3Rpb24obiwgZSkgewogICAgICAgICAgICByZXR1cm4gbiAhPT0gZSAmJiBuLmNvbnRhaW5zKGUpCiAgICAgICAgICB9IDogZnVuY3Rpb24obiwgZSkgewogICAgICAgICAgICBmb3IgKDsgZSAmJiAoZSA9IGUucGFyZW50Tm9kZSk7KQogICAgICAgICAgICAgIGlmIChlID09PSBuKSByZXR1cm4gITA7CiAgICAgICAgICAgIHJldHVybiAhMQogICAgICAgICAgfSwgZS50eXBlID0gXywgZS5pc0Z1bmN0aW9uID0gUywgZS5pc1dpbmRvdyA9IFEsIGUuaXNBcnJheSA9IEksIGUuaXNQbGFpbk9iamVjdCA9IEUsIGUuaXNFbXB0eU9iamVjdCA9IGZ1bmN0aW9uKG4pIHsKICAgICAgICAgICAgdmFyIGU7CiAgICAgICAgICAgIGZvciAoZSBpbiBuKSByZXR1cm4gITE7CiAgICAgICAgICAgIHJldHVybiAhMAogICAgICAgICAgfSwgZS5pc051bWVyaWMgPSBmdW5jdGlvbihuKSB7CiAgICAgICAgICAgIHZhciBlID0gTnVtYmVyKG4pLAogICAgICAgICAgICAgIHQgPSB0eXBlb2YgbjsKICAgICAgICAgICAgcmV0dXJuIG51bGwgIT0gbiAmJiAiYm9vbGVhbiIgIT0gdCAmJiAoInN0cmluZyIgIT0gdCB8fCBuLmxlbmd0aCkgJiYgIWlzTmFOKGUpICYmIGlzRmluaXRlKGUpIHx8ICExCiAgICAgICAgICB9LCBlLmluQXJyYXkgPSBmdW5jdGlvbihuLCBlLCB0KSB7CiAgICAgICAgICAgIHJldHVybiByLmluZGV4T2YuY2FsbChlLCBuLCB0KQogICAgICAgICAgfSwgZS5jYW1lbENhc2UgPSBpLCBlLnRyaW0gPSBmdW5jdGlvbihuKSB7CiAgICAgICAgICAgIHJldHVybiBudWxsID09IG4gPyAiIiA6IFN0cmluZy5wcm90b3R5cGUudHJpbS5jYWxsKG4pCiAgICAgICAgICB9LCBlLnV1aWQgPSAwLCBlLnN1cHBvcnQgPSB7fSwgZS5leHByID0ge30sIGUubm9vcCA9IGZ1bmN0aW9uKCkge30sIGUubWFwID0gZnVuY3Rpb24obiwgdCkgewogICAgICAgICAgICB2YXIgaSwgbywgciwgYSwgbCA9IFtdOwogICAgICAgICAgICBpZiAoUihuKSkKICAgICAgICAgICAgICBmb3IgKG8gPSAwOyBvIDwgbi5sZW5ndGg7IG8rKykgbnVsbCAhPSAoaSA9IHQobltvXSwgbykpICYmIGwucHVzaChpKTsKICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgIGZvciAociBpbiBuKSBudWxsICE9IChpID0gdChuW3JdLCByKSkgJiYgbC5wdXNoKGkpOwogICAgICAgICAgICByZXR1cm4gKGEgPSBsKS5sZW5ndGggPiAwID8gZS5mbi5jb25jYXQuYXBwbHkoW10sIGEpIDogYQogICAgICAgICAgfSwgZS5lYWNoID0gZnVuY3Rpb24obiwgZSkgewogICAgICAgICAgICB2YXIgdCwgaTsKICAgICAgICAgICAgaWYgKFIobikpIHsKICAgICAgICAgICAgICBmb3IgKHQgPSAwOyB0IDwgbi5sZW5ndGg7IHQrKykKICAgICAgICAgICAgICAgIGlmICghMSA9PT0gZS5jYWxsKG5bdF0sIHQsIG5bdF0pKSByZXR1cm4gbgogICAgICAgICAgICB9IGVsc2UKICAgICAgICAgICAgICBmb3IgKGkgaW4gbikKICAgICAgICAgICAgICAgIGlmICghMSA9PT0gZS5jYWxsKG5baV0sIGksIG5baV0pKSByZXR1cm4gbjsKICAgICAgICAgICAgcmV0dXJuIG4KICAgICAgICAgIH0sIGUuZ3JlcCA9IGZ1bmN0aW9uKG4sIGUpIHsKICAgICAgICAgICAgcmV0dXJuIGwuY2FsbChuLCBlKQogICAgICAgICAgfSwgd2luZG93LkpTT04gJiYgKGUucGFyc2VKU09OID0gSlNPTi5wYXJzZSksIGUuZWFjaCgiQm9vbGVhbiBOdW1iZXIgU3RyaW5nIEZ1bmN0aW9uIEFycmF5IERhdGUgUmVnRXhwIE9iamVjdCBFcnJvciIuc3BsaXQoIiAiKSwgKGZ1bmN0aW9uKG4sIGUpIHsKICAgICAgICAgICAgeFsiW29iamVjdCAiICsgZSArICJdIl0gPSBlLnRvTG93ZXJDYXNlKCkKICAgICAgICAgIH0pKSwgZS5mbiA9IHsKICAgICAgICAgICAgY29uc3RydWN0b3I6IEouWiwKICAgICAgICAgICAgbGVuZ3RoOiAwLAogICAgICAgICAgICBmb3JFYWNoOiByLmZvckVhY2gsCiAgICAgICAgICAgIHJlZHVjZTogci5yZWR1Y2UsCiAgICAgICAgICAgIHB1c2g6IHIucHVzaCwKICAgICAgICAgICAgc29ydDogci5zb3J0LAogICAgICAgICAgICBzcGxpY2U6IHIuc3BsaWNlLAogICAgICAgICAgICBpbmRleE9mOiByLmluZGV4T2YsCiAgICAgICAgICAgIGNvbmNhdDogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgdmFyIG4sIGUsIHQgPSBbXTsKICAgICAgICAgICAgICBmb3IgKG4gPSAwOyBuIDwgYXJndW1lbnRzLmxlbmd0aDsgbisrKSBlID0gYXJndW1lbnRzW25dLCB0W25dID0gSi5pc1ooZSkgPyBlLnRvQXJyYXkoKSA6IGU7CiAgICAgICAgICAgICAgcmV0dXJuIGEuYXBwbHkoSi5pc1oodGhpcykgPyB0aGlzLnRvQXJyYXkoKSA6IHRoaXMsIHQpCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG1hcDogZnVuY3Rpb24obikgewogICAgICAgICAgICAgIHJldHVybiBlKGUubWFwKHRoaXMsIChmdW5jdGlvbihlLCB0KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gbi5jYWxsKGUsIHQsIGUpCiAgICAgICAgICAgICAgfSkpKQogICAgICAgICAgICB9LAogICAgICAgICAgICBzbGljZTogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgcmV0dXJuIGUocy5hcHBseSh0aGlzLCBhcmd1bWVudHMpKQogICAgICAgICAgICB9LAogICAgICAgICAgICByZWFkeTogZnVuY3Rpb24obikgewogICAgICAgICAgICAgIHJldHVybiBULnRlc3QoYy5yZWFkeVN0YXRlKSAmJiBjLmJvZHkgPyBuKGUpIDogYy5hZGRFdmVudExpc3RlbmVyKCJET01Db250ZW50TG9hZGVkIiwgKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgbihlKQogICAgICAgICAgICAgIH0pLCAhMSksIHRoaXMKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHZvaWQgMCA9PT0gbiA\/IHMuY2FsbCh0aGlzKSA6IHRoaXNbbiA+PSAwID8gbiA6IG4gKyB0aGlzLmxlbmd0aF0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgdG9BcnJheTogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0KCkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2l6ZTogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubGVuZ3RoCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHJlbW92ZTogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZWFjaCgoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICBudWxsICE9IHRoaXMucGFyZW50Tm9kZSAmJiB0aGlzLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcykKICAgICAgICAgICAgICB9KSkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZWFjaDogZnVuY3Rpb24obikgewogICAgICAgICAgICAgIHJldHVybiByLmV2ZXJ5LmNhbGwodGhpcywgKGZ1bmN0aW9uKGUsIHQpIHsKICAgICAgICAgICAgICAgIHJldHVybiAhMSAhPT0gbi5jYWxsKGUsIHQsIGUpCiAgICAgICAgICAgICAgfSkpLCB0aGlzCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGZpbHRlcjogZnVuY3Rpb24obikgewogICAgICAgICAgICAgIHJldHVybiBTKG4pID8gdGhpcy5ub3QodGhpcy5ub3QobikpIDogZShsLmNhbGwodGhpcywgKGZ1bmN0aW9uKGUpIHsKICAgICAgICAgICAgICAgIHJldHVybiBKLm1hdGNoZXMoZSwgbikKICAgICAgICAgICAgICB9KSkpCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGFkZDogZnVuY3Rpb24obiwgdCkgewogICAgICAgICAgICAgIHJldHVybiBlKG8odGhpcy5jb25jYXQoZShuLCB0KSkpKQogICAgICAgICAgICB9LAogICAgICAgICAgICBpczogZnVuY3Rpb24obikgewogICAgICAgICAgICAgIHJldHVybiB0aGlzLmxlbmd0aCA+IDAgJiYgSi5tYXRjaGVzKHRoaXNbMF0sIG4pCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG5vdDogZnVuY3Rpb24obikgewogICAgICAgICAgICAgIHZhciB0ID0gW107CiAgICAgICAgICAgICAgaWYgKFMobikgJiYgdm9pZCAwICE9PSBuLmNhbGwpIHRoaXMuZWFjaCgoZnVuY3Rpb24oZSkgewogICAgICAgICAgICAgICAgbi5jYWxsKHRoaXMsIGUpIHx8IHQucHVzaCh0aGlzKQogICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIHZhciBpID0gInN0cmluZyIgPT0gdHlwZW9mIG4gPyB0aGlzLmZpbHRlcihuKSA6IFIobikgJiYgUyhuLml0ZW0pID8gcy5jYWxsKG4pIDogZShuKTsKICAgICAgICAgICAgICAgIHRoaXMuZm9yRWFjaCgoZnVuY3Rpb24obikgewogICAgICAgICAgICAgICAgICBpLmluZGV4T2YobikgPCAwICYmIHQucHVzaChuKQogICAgICAgICAgICAgICAgfSkpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIHJldHVybiBlKHQpCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGhhczogZnVuY3Rpb24obikgewogICAgICAgICAgICAgIHJldHVybiB0aGlzLmZpbHRlcigoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gaihuKSA\/IGUuY29udGFpbnModGhpcywgbikgOiBlKHRoaXMpLmZpbmQobikuc2l6ZSgpCiAgICAgICAgICAgICAgfSkpCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGVxOiBmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgcmV0dXJuIC0xID09PSBuID8gdGhpcy5zbGljZShuKSA6IHRoaXMuc2xpY2UobiwgK24gKyAxKQogICAgICAgICAgICB9LAogICAgICAgICAgICBmaXJzdDogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgdmFyIG4gPSB0aGlzWzBdOwogICAgICAgICAgICAgIHJldHVybiBuICYmICFqKG4pID8gbiA6IGUobikKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbGFzdDogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgdmFyIG4gPSB0aGlzW3RoaXMubGVuZ3RoIC0gMV07CiAgICAgICAgICAgICAgcmV0dXJuIG4gJiYgIWoobikgPyBuIDogZShuKQogICAgICAgICAgICB9LAogICAgICAgICAgICBmaW5kOiBmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgdmFyIHQgPSB0aGlzOwogICAgICAgICAgICAgIHJldHVybiBuID8gIm9iamVjdCIgPT0gdHlwZW9mIG4gPyBlKG4pLmZpbHRlcigoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICB2YXIgbiA9IHRoaXM7CiAgICAgICAgICAgICAgICByZXR1cm4gci5zb21lLmNhbGwodCwgKGZ1bmN0aW9uKHQpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGUuY29udGFpbnModCwgbikKICAgICAgICAgICAgICAgIH0pKQogICAgICAgICAgICAgIH0pKSA6IDEgPT0gdGhpcy5sZW5ndGggPyBlKEoucXNhKHRoaXNbMF0sIG4pKSA6IHRoaXMubWFwKChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIHJldHVybiBKLnFzYSh0aGlzLCBuKQogICAgICAgICAgICAgIH0pKSA6IGUoKQogICAgICAgICAgICB9LAogICAgICAgICAgICBjbG9zZXN0OiBmdW5jdGlvbihuLCB0KSB7CiAgICAgICAgICAgICAgdmFyIGkgPSBbXSwKICAgICAgICAgICAgICAgIG8gPSAib2JqZWN0IiA9PSB0eXBlb2YgbiAmJiBlKG4pOwogICAgICAgICAgICAgIHJldHVybiB0aGlzLmVhY2goKGZ1bmN0aW9uKGUsIHIpIHsKICAgICAgICAgICAgICAgIGZvciAoOyByICYmICEobyA\/IG8uaW5kZXhPZihyKSA+PSAwIDogSi5tYXRjaGVzKHIsIG4pKTspIHIgPSByICE9PSB0ICYmICFWKHIpICYmIHIucGFyZW50Tm9kZTsKICAgICAgICAgICAgICAgIHIgJiYgaS5pbmRleE9mKHIpIDwgMCAmJiBpLnB1c2gocikKICAgICAgICAgICAgICB9KSksIGUoaSkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcGFyZW50czogZnVuY3Rpb24obikgewogICAgICAgICAgICAgIGZvciAodmFyIHQgPSBbXSwgaSA9IHRoaXM7IGkubGVuZ3RoID4gMDspIGkgPSBlLm1hcChpLCAoZnVuY3Rpb24obikgewogICAgICAgICAgICAgICAgaWYgKChuID0gbi5wYXJlbnROb2RlKSAmJiAhVihuKSAmJiB0LmluZGV4T2YobikgPCAwKSByZXR1cm4gdC5wdXNoKG4pLCBuCiAgICAgICAgICAgICAgfSkpOwogICAgICAgICAgICAgIHJldHVybiBCKHQsIG4pCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHBhcmVudDogZnVuY3Rpb24obikgewogICAgICAgICAgICAgIHJldHVybiBCKG8odGhpcy5wbHVjaygicGFyZW50Tm9kZSIpKSwgbikKICAgICAgICAgICAgfSwKICAgICAgICAgICAgY2hpbGRyZW46IGZ1bmN0aW9uKG4pIHsKICAgICAgICAgICAgICByZXR1cm4gQih0aGlzLm1hcCgoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJCh0aGlzKQogICAgICAgICAgICAgIH0pKSwgbikKICAgICAgICAgICAgfSwKICAgICAgICAgICAgY29udGVudHM6IGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgIHJldHVybiB0aGlzLm1hcCgoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jb250ZW50RG9jdW1lbnQgfHwgcy5jYWxsKHRoaXMuY2hpbGROb2RlcykKICAgICAgICAgICAgICB9KSkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2libGluZ3M6IGZ1bmN0aW9uKG4pIHsKICAgICAgICAgICAgICByZXR1cm4gQih0aGlzLm1hcCgoZnVuY3Rpb24obiwgZSkgewogICAgICAgICAgICAgICAgcmV0dXJuIGwuY2FsbCgkKGUucGFyZW50Tm9kZSksIChmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBuICE9PSBlCiAgICAgICAgICAgICAgICB9KSkKICAgICAgICAgICAgICB9KSksIG4pCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGVtcHR5OiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICByZXR1cm4gdGhpcy5lYWNoKChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIHRoaXMuaW5uZXJIVE1MID0gIiIKICAgICAgICAgICAgICB9KSkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcGx1Y2s6IGZ1bmN0aW9uKG4pIHsKICAgICAgICAgICAgICByZXR1cm4gZS5tYXAodGhpcywgKGZ1bmN0aW9uKGUpIHsKICAgICAgICAgICAgICAgIHJldHVybiBlW25dCiAgICAgICAgICAgICAgfSkpCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNob3c6IGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgIHJldHVybiB0aGlzLmVhY2goKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgdmFyIG4sIGUsIHQ7CiAgICAgICAgICAgICAgICAibm9uZSIgPT0gdGhpcy5zdHlsZS5kaXNwbGF5ICYmICh0aGlzLnN0eWxlLmRpc3BsYXkgPSAiIiksICJub25lIiA9PSBnZXRDb21wdXRlZFN0eWxlKHRoaXMsICIiKS5nZXRQcm9wZXJ0eVZhbHVlKCJkaXNwbGF5IikgJiYgKHRoaXMuc3R5bGUuZGlzcGxheSA9IChuID0gdGhpcy5ub2RlTmFtZSwgcFtuXSB8fCAoZSA9IGMuY3JlYXRlRWxlbWVudChuKSwgYy5ib2R5LmFwcGVuZENoaWxkKGUpLCB0ID0gZ2V0Q29tcHV0ZWRTdHlsZShlLCAiIikuZ2V0UHJvcGVydHlWYWx1ZSgiZGlzcGxheSIpLCBlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZSksICJub25lIiA9PSB0ICYmICh0ID0gImJsb2NrIiksIHBbbl0gPSB0KSwgcFtuXSkpCiAgICAgICAgICAgICAgfSkpCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHJlcGxhY2VXaXRoOiBmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuYmVmb3JlKG4pLnJlbW92ZSgpCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHdyYXA6IGZ1bmN0aW9uKG4pIHsKICAgICAgICAgICAgICB2YXIgdCA9IFMobik7CiAgICAgICAgICAgICAgaWYgKHRoaXNbMF0gJiYgIXQpIHZhciBpID0gZShuKS5nZXQoMCksCiAgICAgICAgICAgICAgICBvID0gaS5wYXJlbnROb2RlIHx8IHRoaXMubGVuZ3RoID4gMTsKICAgICAgICAgICAgICByZXR1cm4gdGhpcy5lYWNoKChmdW5jdGlvbihyKSB7CiAgICAgICAgICAgICAgICBlKHRoaXMpLndyYXBBbGwodCA\/IG4uY2FsbCh0aGlzLCByKSA6IG8gPyBpLmNsb25lTm9kZSghMCkgOiBpKQogICAgICAgICAgICAgIH0pKQogICAgICAgICAgICB9LAogICAgICAgICAgICB3cmFwQWxsOiBmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgaWYgKHRoaXNbMF0pIHsKICAgICAgICAgICAgICAgIHZhciB0OwogICAgICAgICAgICAgICAgZm9yIChlKHRoaXNbMF0pLmJlZm9yZShuID0gZShuKSk7CiAgICAgICAgICAgICAgICAgICh0ID0gbi5jaGlsZHJlbigpKS5sZW5ndGg7KSBuID0gdC5maXJzdCgpOwogICAgICAgICAgICAgICAgZShuKS5hcHBlbmQodGhpcykKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMKICAgICAgICAgICAgfSwKICAgICAgICAgICAgd3JhcElubmVyOiBmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgdmFyIHQgPSBTKG4pOwogICAgICAgICAgICAgIHJldHVybiB0aGlzLmVhY2goKGZ1bmN0aW9uKGkpIHsKICAgICAgICAgICAgICAgIHZhciBvID0gZSh0aGlzKSwKICAgICAgICAgICAgICAgICAgciA9IG8uY29udGVudHMoKSwKICAgICAgICAgICAgICAgICAgYSA9IHQgPyBuLmNhbGwodGhpcywgaSkgOiBuOwogICAgICAgICAgICAgICAgci5sZW5ndGggPyByLndyYXBBbGwoYSkgOiBvLmFwcGVuZChhKQogICAgICAgICAgICAgIH0pKQogICAgICAgICAgICB9LAogICAgICAgICAgICB1bndyYXA6IGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgIHJldHVybiB0aGlzLnBhcmVudCgpLmVhY2goKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgZSh0aGlzKS5yZXBsYWNlV2l0aChlKHRoaXMpLmNoaWxkcmVuKCkpCiAgICAgICAgICAgICAgfSkpLCB0aGlzCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGNsb25lOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICByZXR1cm4gdGhpcy5tYXAoKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY2xvbmVOb2RlKCEwKQogICAgICAgICAgICAgIH0pKQogICAgICAgICAgICB9LAogICAgICAgICAgICBoaWRlOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jc3MoImRpc3BsYXkiLCAibm9uZSIpCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHRvZ2dsZTogZnVuY3Rpb24obikgewogICAgICAgICAgICAgIHJldHVybiB0aGlzLmVhY2goKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgdmFyIHQgPSBlKHRoaXMpOwogICAgICAgICAgICAgICAgKHZvaWQgMCA9PT0gbiA\/ICJub25lIiA9PSB0LmNzcygiZGlzcGxheSIpIDogbikgPyB0LnNob3coKTogdC5oaWRlKCkKICAgICAgICAgICAgICB9KSkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcHJldjogZnVuY3Rpb24obikgewogICAgICAgICAgICAgIHJldHVybiBlKHRoaXMucGx1Y2soInByZXZpb3VzRWxlbWVudFNpYmxpbmciKSkuZmlsdGVyKG4gfHwgIioiKQogICAgICAgICAgICB9LAogICAgICAgICAgICBuZXh0OiBmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgcmV0dXJuIGUodGhpcy5wbHVjaygibmV4dEVsZW1lbnRTaWJsaW5nIikpLmZpbHRlcihuIHx8ICIqIikKICAgICAgICAgICAgfSwKICAgICAgICAgICAgaHRtbDogZnVuY3Rpb24obikgewogICAgICAgICAgICAgIHJldHVybiAwIGluIGFyZ3VtZW50cyA\/IHRoaXMuZWFjaCgoZnVuY3Rpb24odCkgewogICAgICAgICAgICAgICAgdmFyIGkgPSB0aGlzLmlubmVySFRNTDsKICAgICAgICAgICAgICAgIGUodGhpcykuZW1wdHkoKS5hcHBlbmQoUCh0aGlzLCBuLCB0LCBpKSkKICAgICAgICAgICAgICB9KSkgOiAwIGluIHRoaXMgPyB0aGlzWzBdLmlubmVySFRNTCA6IG51bGwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgdGV4dDogZnVuY3Rpb24obikgewogICAgICAgICAgICAgIHJldHVybiAwIGluIGFyZ3VtZW50cyA\/IHRoaXMuZWFjaCgoZnVuY3Rpb24oZSkgewogICAgICAgICAgICAgICAgdmFyIHQgPSBQKHRoaXMsIG4sIGUsIHRoaXMudGV4dENvbnRlbnQpOwogICAgICAgICAgICAgICAgdGhpcy50ZXh0Q29udGVudCA9IG51bGwgPT0gdCA\/ICIiIDogIiIgKyB0CiAgICAgICAgICAgICAgfSkpIDogMCBpbiB0aGlzID8gdGhpcy5wbHVjaygidGV4dENvbnRlbnQiKS5qb2luKCIiKSA6IG51bGwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgYXR0cjogZnVuY3Rpb24oZSwgdCkgewogICAgICAgICAgICAgIHZhciBpOwogICAgICAgICAgICAgIHJldHVybiAic3RyaW5nIiAhPSB0eXBlb2YgZSB8fCAxIGluIGFyZ3VtZW50cyA\/IHRoaXMuZWFjaCgoZnVuY3Rpb24oaSkgewogICAgICAgICAgICAgICAgaWYgKDEgPT09IHRoaXMubm9kZVR5cGUpCiAgICAgICAgICAgICAgICAgIGlmIChqKGUpKQogICAgICAgICAgICAgICAgICAgIGZvciAobiBpbiBlKSBGKHRoaXMsIG4sIGVbbl0pOwogICAgICAgICAgICAgICAgICBlbHNlIEYodGhpcywgZSwgUCh0aGlzLCB0LCBpLCB0aGlzLmdldEF0dHJpYnV0ZShlKSkpCiAgICAgICAgICAgICAgfSkpIDogMCBpbiB0aGlzICYmIDEgPT0gdGhpc1swXS5ub2RlVHlwZSAmJiBudWxsICE9IChpID0gdGhpc1swXS5nZXRBdHRyaWJ1dGUoZSkpID8gaSA6IHZvaWQgMAogICAgICAgICAgICB9LAogICAgICAgICAgICByZW1vdmVBdHRyOiBmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZWFjaCgoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAxID09PSB0aGlzLm5vZGVUeXBlICYmIG4uc3BsaXQoIiAiKS5mb3JFYWNoKChmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgICAgIEYodGhpcywgbikKICAgICAgICAgICAgICAgIH0pLCB0aGlzKQogICAgICAgICAgICAgIH0pKQogICAgICAgICAgICB9LAogICAgICAgICAgICBwcm9wOiBmdW5jdGlvbihuLCBlKSB7CiAgICAgICAgICAgICAgcmV0dXJuIG4gPSBrW25dIHx8IG4sIDEgaW4gYXJndW1lbnRzID8gdGhpcy5lYWNoKChmdW5jdGlvbih0KSB7CiAgICAgICAgICAgICAgICB0aGlzW25dID0gUCh0aGlzLCBlLCB0LCB0aGlzW25dKQogICAgICAgICAgICAgIH0pKSA6IHRoaXNbMF0gJiYgdGhpc1swXVtuXQogICAgICAgICAgICB9LAogICAgICAgICAgICByZW1vdmVQcm9wOiBmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgcmV0dXJuIG4gPSBrW25dIHx8IG4sIHRoaXMuZWFjaCgoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICBkZWxldGUgdGhpc1tuXQogICAgICAgICAgICAgIH0pKQogICAgICAgICAgICB9LAogICAgICAgICAgICBkYXRhOiBmdW5jdGlvbihuLCBlKSB7CiAgICAgICAgICAgICAgdmFyIHQgPSAiZGF0YS0iICsgbi5yZXBsYWNlKGcsICItJDEiKS50b0xvd2VyQ2FzZSgpLAogICAgICAgICAgICAgICAgaSA9IDEgaW4gYXJndW1lbnRzID8gdGhpcy5hdHRyKHQsIGUpIDogdGhpcy5hdHRyKHQpOwogICAgICAgICAgICAgIHJldHVybiBudWxsICE9PSBpID8gcShpKSA6IHZvaWQgMAogICAgICAgICAgICB9LAogICAgICAgICAgICB2YWw6IGZ1bmN0aW9uKG4pIHsKICAgICAgICAgICAgICByZXR1cm4gMCBpbiBhcmd1bWVudHMgPyAobnVsbCA9PSBuICYmIChuID0gIiIpLCB0aGlzLmVhY2goKGZ1bmN0aW9uKGUpIHsKICAgICAgICAgICAgICAgIHRoaXMudmFsdWUgPSBQKHRoaXMsIG4sIGUsIHRoaXMudmFsdWUpCiAgICAgICAgICAgICAgfSkpKSA6IHRoaXNbMF0gJiYgKHRoaXNbMF0ubXVsdGlwbGUgPyBlKHRoaXNbMF0pLmZpbmQoIm9wdGlvbiIpLmZpbHRlcigoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zZWxlY3RlZAogICAgICAgICAgICAgIH0pKS5wbHVjaygidmFsdWUiKSA6IHRoaXNbMF0udmFsdWUpCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG9mZnNldDogZnVuY3Rpb24obikgewogICAgICAgICAgICAgIGlmIChuKSByZXR1cm4gdGhpcy5lYWNoKChmdW5jdGlvbih0KSB7CiAgICAgICAgICAgICAgICB2YXIgaSA9IGUodGhpcyksCiAgICAgICAgICAgICAgICAgIG8gPSBQKHRoaXMsIG4sIHQsIGkub2Zmc2V0KCkpLAogICAgICAgICAgICAgICAgICByID0gaS5vZmZzZXRQYXJlbnQoKS5vZmZzZXQoKSwKICAgICAgICAgICAgICAgICAgYSA9IHsKICAgICAgICAgICAgICAgICAgICB0b3A6IG8udG9wIC0gci50b3AsCiAgICAgICAgICAgICAgICAgICAgbGVmdDogby5sZWZ0IC0gci5sZWZ0CiAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAic3RhdGljIiA9PSBpLmNzcygicG9zaXRpb24iKSAmJiAoYS5wb3NpdGlvbiA9ICJyZWxhdGl2ZSIpLCBpLmNzcyhhKQogICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgICBpZiAoIXRoaXMubGVuZ3RoKSByZXR1cm4gbnVsbDsKICAgICAgICAgICAgICBpZiAoYy5kb2N1bWVudEVsZW1lbnQgIT09IHRoaXNbMF0gJiYgIWUuY29udGFpbnMoYy5kb2N1bWVudEVsZW1lbnQsIHRoaXNbMF0pKSByZXR1cm4gewogICAgICAgICAgICAgICAgdG9wOiAwLAogICAgICAgICAgICAgICAgbGVmdDogMAogICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgdmFyIHQgPSB0aGlzWzBdLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOwogICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICBsZWZ0OiB0LmxlZnQgKyB3aW5kb3cucGFnZVhPZmZzZXQsCiAgICAgICAgICAgICAgICB0b3A6IHQudG9wICsgd2luZG93LnBhZ2VZT2Zmc2V0LAogICAgICAgICAgICAgICAgd2lkdGg6IE1hdGgucm91bmQodC53aWR0aCksCiAgICAgICAgICAgICAgICBoZWlnaHQ6IE1hdGgucm91bmQodC5oZWlnaHQpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBjc3M6IGZ1bmN0aW9uKHQsIG8pIHsKICAgICAgICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHsKICAgICAgICAgICAgICAgIHZhciByID0gdGhpc1swXTsKICAgICAgICAgICAgICAgIGlmICgic3RyaW5nIiA9PSB0eXBlb2YgdCkgewogICAgICAgICAgICAgICAgICBpZiAoIXIpIHJldHVybjsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHIuc3R5bGVbaSh0KV0gfHwgZ2V0Q29tcHV0ZWRTdHlsZShyLCAiIikuZ2V0UHJvcGVydHlWYWx1ZSh0KQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaWYgKEkodCkpIHsKICAgICAgICAgICAgICAgICAgaWYgKCFyKSByZXR1cm47CiAgICAgICAgICAgICAgICAgIHZhciBhID0ge30sCiAgICAgICAgICAgICAgICAgICAgbCA9IGdldENvbXB1dGVkU3R5bGUociwgIiIpOwogICAgICAgICAgICAgICAgICByZXR1cm4gZS5lYWNoKHQsIChmdW5jdGlvbihuLCBlKSB7CiAgICAgICAgICAgICAgICAgICAgYVtlXSA9IHIuc3R5bGVbaShlKV0gfHwgbC5nZXRQcm9wZXJ0eVZhbHVlKGUpCiAgICAgICAgICAgICAgICAgIH0pKSwgYQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB2YXIgcyA9ICIiOwogICAgICAgICAgICAgIGlmICgic3RyaW5nIiA9PSBfKHQpKSBvIHx8IDAgPT09IG8gPyBzID0gQSh0KSArICI6IiArIEModCwgbykgOiB0aGlzLmVhY2goKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgdGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShBKHQpKQogICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICBmb3IgKG4gaW4gdCkgdFtuXSB8fCAwID09PSB0W25dID8gcyArPSBBKG4pICsgIjoiICsgQyhuLCB0W25dKSArICI7IiA6IHRoaXMuZWFjaCgoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgIHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkoQShuKSkKICAgICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgICByZXR1cm4gdGhpcy5lYWNoKChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIHRoaXMuc3R5bGUuY3NzVGV4dCArPSAiOyIgKyBzCiAgICAgICAgICAgICAgfSkpCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGluZGV4OiBmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgcmV0dXJuIG4gPyB0aGlzLmluZGV4T2YoZShuKVswXSkgOiB0aGlzLnBhcmVudCgpLmNoaWxkcmVuKCkuaW5kZXhPZih0aGlzWzBdKQogICAgICAgICAgICB9LAogICAgICAgICAgICBoYXNDbGFzczogZnVuY3Rpb24obikgewogICAgICAgICAgICAgIHJldHVybiAhIW4gJiYgci5zb21lLmNhbGwodGhpcywgKGZ1bmN0aW9uKG4pIHsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnRlc3QoTChuKSkKICAgICAgICAgICAgICB9KSwgTyhuKSkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgYWRkQ2xhc3M6IGZ1bmN0aW9uKG4pIHsKICAgICAgICAgICAgICByZXR1cm4gbiA\/IHRoaXMuZWFjaCgoZnVuY3Rpb24oaSkgewogICAgICAgICAgICAgICAgaWYgKCJjbGFzc05hbWUiIGluIHRoaXMpIHsKICAgICAgICAgICAgICAgICAgdCA9IFtdOwogICAgICAgICAgICAgICAgICB2YXIgbyA9IEwodGhpcyk7CiAgICAgICAgICAgICAgICAgIFAodGhpcywgbiwgaSwgbykuc3BsaXQoL1xzKy9nKS5mb3JFYWNoKChmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgICAgICAgZSh0aGlzKS5oYXNDbGFzcyhuKSB8fCB0LnB1c2gobikKICAgICAgICAgICAgICAgICAgfSksIHRoaXMpLCB0Lmxlbmd0aCAmJiBMKHRoaXMsIG8gKyAobyA\/ICIgIiA6ICIiKSArIHQuam9pbigiICIpKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pKSA6IHRoaXMKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcmVtb3ZlQ2xhc3M6IGZ1bmN0aW9uKG4pIHsKICAgICAgICAgICAgICByZXR1cm4gdGhpcy5lYWNoKChmdW5jdGlvbihlKSB7CiAgICAgICAgICAgICAgICBpZiAoImNsYXNzTmFtZSIgaW4gdGhpcykgewogICAgICAgICAgICAgICAgICBpZiAodm9pZCAwID09PSBuKSByZXR1cm4gTCh0aGlzLCAiIik7CiAgICAgICAgICAgICAgICAgIHQgPSBMKHRoaXMpLCBQKHRoaXMsIG4sIGUsIHQpLnNwbGl0KC9ccysvZykuZm9yRWFjaCgoZnVuY3Rpb24obikgewogICAgICAgICAgICAgICAgICAgIHQgPSB0LnJlcGxhY2UoTyhuKSwgIiAiKQogICAgICAgICAgICAgICAgICB9KSksIEwodGhpcywgdC50cmltKCkpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSkpCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHRvZ2dsZUNsYXNzOiBmdW5jdGlvbihuLCB0KSB7CiAgICAgICAgICAgICAgcmV0dXJuIG4gPyB0aGlzLmVhY2goKGZ1bmN0aW9uKGkpIHsKICAgICAgICAgICAgICAgIHZhciBvID0gZSh0aGlzKTsKICAgICAgICAgICAgICAgIFAodGhpcywgbiwgaSwgTCh0aGlzKSkuc3BsaXQoL1xzKy9nKS5mb3JFYWNoKChmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgICAgICh2b2lkIDAgPT09IHQgPyAhby5oYXNDbGFzcyhuKSA6IHQpID8gby5hZGRDbGFzcyhuKTogby5yZW1vdmVDbGFzcyhuKQogICAgICAgICAgICAgICAgfSkpCiAgICAgICAgICAgICAgfSkpIDogdGhpcwogICAgICAgICAgICB9LAogICAgICAgICAgICBzY3JvbGxUb3A6IGZ1bmN0aW9uKG4pIHsKICAgICAgICAgICAgICBpZiAodGhpcy5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIHZhciBlID0gInNjcm9sbFRvcCIgaW4gdGhpc1swXTsKICAgICAgICAgICAgICAgIHJldHVybiB2b2lkIDAgPT09IG4gPyBlID8gdGhpc1swXS5zY3JvbGxUb3AgOiB0aGlzWzBdLnBhZ2VZT2Zmc2V0IDogdGhpcy5lYWNoKGUgPyBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgdGhpcy5zY3JvbGxUb3AgPSBuCiAgICAgICAgICAgICAgICB9IDogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgIHRoaXMuc2Nyb2xsVG8odGhpcy5zY3JvbGxYLCBuKQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNjcm9sbExlZnQ6IGZ1bmN0aW9uKG4pIHsKICAgICAgICAgICAgICBpZiAodGhpcy5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIHZhciBlID0gInNjcm9sbExlZnQiIGluIHRoaXNbMF07CiAgICAgICAgICAgICAgICByZXR1cm4gdm9pZCAwID09PSBuID8gZSA\/IHRoaXNbMF0uc2Nyb2xsTGVmdCA6IHRoaXNbMF0ucGFnZVhPZmZzZXQgOiB0aGlzLmVhY2goZSA\/IGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICB0aGlzLnNjcm9sbExlZnQgPSBuCiAgICAgICAgICAgICAgICB9IDogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgIHRoaXMuc2Nyb2xsVG8obiwgdGhpcy5zY3JvbGxZKQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHBvc2l0aW9uOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICBpZiAodGhpcy5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIHZhciBuID0gdGhpc1swXSwKICAgICAgICAgICAgICAgICAgdCA9IHRoaXMub2Zmc2V0UGFyZW50KCksCiAgICAgICAgICAgICAgICAgIGkgPSB0aGlzLm9mZnNldCgpLAogICAgICAgICAgICAgICAgICBvID0gdi50ZXN0KHRbMF0ubm9kZU5hbWUpID8gewogICAgICAgICAgICAgICAgICAgIHRvcDogMCwKICAgICAgICAgICAgICAgICAgICBsZWZ0OiAwCiAgICAgICAgICAgICAgICAgIH0gOiB0Lm9mZnNldCgpOwogICAgICAgICAgICAgICAgcmV0dXJuIGkudG9wIC09IHBhcnNlRmxvYXQoZShuKS5jc3MoIm1hcmdpbi10b3AiKSkgfHwgMCwgaS5sZWZ0IC09IHBhcnNlRmxvYXQoZShuKS5jc3MoIm1hcmdpbi1sZWZ0IikpIHx8IDAsIG8udG9wICs9IHBhcnNlRmxvYXQoZSh0WzBdKS5jc3MoImJvcmRlci10b3Atd2lkdGgiKSkgfHwgMCwgby5sZWZ0ICs9IHBhcnNlRmxvYXQoZSh0WzBdKS5jc3MoImJvcmRlci1sZWZ0LXdpZHRoIikpIHx8IDAsIHsKICAgICAgICAgICAgICAgICAgdG9wOiBpLnRvcCAtIG8udG9wLAogICAgICAgICAgICAgICAgICBsZWZ0OiBpLmxlZnQgLSBvLmxlZnQKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG9mZnNldFBhcmVudDogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubWFwKChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIGZvciAodmFyIG4gPSB0aGlzLm9mZnNldFBhcmVudCB8fCBjLmJvZHk7IG4gJiYgIXYudGVzdChuLm5vZGVOYW1lKSAmJiAic3RhdGljIiA9PSBlKG4pLmNzcygicG9zaXRpb24iKTspIG4gPSBuLm9mZnNldFBhcmVudDsKICAgICAgICAgICAgICAgIHJldHVybiBuCiAgICAgICAgICAgICAgfSkpCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sIGUuZm4uZGV0YWNoID0gZS5mbi5yZW1vdmUsIFsid2lkdGgiLCAiaGVpZ2h0Il0uZm9yRWFjaCgoZnVuY3Rpb24obikgewogICAgICAgICAgICB2YXIgdCA9IG4ucmVwbGFjZSgvLi8sIChmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgcmV0dXJuIG5bMF0udG9VcHBlckNhc2UoKQogICAgICAgICAgICB9KSk7CiAgICAgICAgICAgIGUuZm5bbl0gPSBmdW5jdGlvbihpKSB7CiAgICAgICAgICAgICAgdmFyIG8sIHIgPSB0aGlzWzBdOwogICAgICAgICAgICAgIHJldHVybiB2b2lkIDAgPT09IGkgPyBRKHIpID8gclsiaW5uZXIiICsgdF0gOiBWKHIpID8gci5kb2N1bWVudEVsZW1lbnRbInNjcm9sbCIgKyB0XSA6IChvID0gdGhpcy5vZmZzZXQoKSkgJiYgb1tuXSA6IHRoaXMuZWFjaCgoZnVuY3Rpb24odCkgewogICAgICAgICAgICAgICAgKHIgPSBlKHRoaXMpKS5jc3MobiwgUCh0aGlzLCBpLCB0LCByW25dKCkpKQogICAgICAgICAgICAgIH0pKQogICAgICAgICAgICB9CiAgICAgICAgICB9KSksIFsiYWZ0ZXIiLCAicHJlcGVuZCIsICJiZWZvcmUiLCAiYXBwZW5kIl0uZm9yRWFjaCgoZnVuY3Rpb24obiwgdCkgewogICAgICAgICAgICB2YXIgaSA9IHQgJSAyOwogICAgICAgICAgICBlLmZuW25dID0gZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgdmFyIG4sIG8sIHIgPSBlLm1hcChhcmd1bWVudHMsIChmdW5jdGlvbih0KSB7CiAgICAgICAgICAgICAgICAgIHZhciBpID0gW107CiAgICAgICAgICAgICAgICAgIHJldHVybiAiYXJyYXkiID09IChuID0gXyh0KSkgPyAodC5mb3JFYWNoKChmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZvaWQgMCAhPT0gbi5ub2RlVHlwZSA\/IGkucHVzaChuKSA6IGUuemVwdG8uaXNaKG4pID8gaSA9IGkuY29uY2F0KG4uZ2V0KCkpIDogdm9pZChpID0gaS5jb25jYXQoSi5mcmFnbWVudChuKSkpCiAgICAgICAgICAgICAgICAgIH0pKSwgaSkgOiAib2JqZWN0IiA9PSBuIHx8IG51bGwgPT0gdCA\/IHQgOiBKLmZyYWdtZW50KHQpCiAgICAgICAgICAgICAgICB9KSksCiAgICAgICAgICAgICAgICBhID0gdGhpcy5sZW5ndGggPiAxOwogICAgICAgICAgICAgIHJldHVybiByLmxlbmd0aCA8IDEgPyB0aGlzIDogdGhpcy5lYWNoKChmdW5jdGlvbihuLCBsKSB7CiAgICAgICAgICAgICAgICBvID0gaSA\/IGwgOiBsLnBhcmVudE5vZGUsIGwgPSAwID09IHQgPyBsLm5leHRTaWJsaW5nIDogMSA9PSB0ID8gbC5maXJzdENoaWxkIDogMiA9PSB0ID8gbCA6IG51bGw7CiAgICAgICAgICAgICAgICB2YXIgcyA9IGUuY29udGFpbnMoYy5kb2N1bWVudEVsZW1lbnQsIG8pOwogICAgICAgICAgICAgICAgci5mb3JFYWNoKChmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgICAgIGlmIChhKSBuID0gbi5jbG9uZU5vZGUoITApOwogICAgICAgICAgICAgICAgICBlbHNlIGlmICghbykgcmV0dXJuIGUobikucmVtb3ZlKCk7CiAgICAgICAgICAgICAgICAgIG8uaW5zZXJ0QmVmb3JlKG4sIGwpLCBzICYmIFgobiwgKGZ1bmN0aW9uKG4pIHsKICAgICAgICAgICAgICAgICAgICBpZiAoIShudWxsID09IG4ubm9kZU5hbWUgfHwgIlNDUklQVCIgIT09IG4ubm9kZU5hbWUudG9VcHBlckNhc2UoKSB8fCBuLnR5cGUgJiYgInRleHQvamF2YXNjcmlwdCIgIT09IG4udHlwZSB8fCBuLnNyYykpIHsKICAgICAgICAgICAgICAgICAgICAgIHZhciBlID0gbi5vd25lckRvY3VtZW50ID8gbi5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3IDogd2luZG93OwogICAgICAgICAgICAgICAgICAgICAgZS5ldmFsLmNhbGwoZSwgbi5pbm5lckhUTUwpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KSkKICAgICAgICAgICAgICAgIH0pKQogICAgICAgICAgICAgIH0pKQogICAgICAgICAgICB9LCBlLmZuW2kgPyBuICsgIlRvIiA6ICJpbnNlcnQiICsgKHQgPyAiQmVmb3JlIiA6ICJBZnRlciIpXSA9IGZ1bmN0aW9uKHQpIHsKICAgICAgICAgICAgICByZXR1cm4gZSh0KVtuXSh0aGlzKSwgdGhpcwogICAgICAgICAgICB9CiAgICAgICAgICB9KSksIEouWi5wcm90b3R5cGUgPSB6LnByb3RvdHlwZSA9IGUuZm4sIEoudW5pcSA9IG8sIEouZGVzZXJpYWxpemVWYWx1ZSA9IHEsIGUuemVwdG8gPSBKLCBlCiAgICAgICAgfSgpOwogICAgICB3aW5kb3cuWmVwdG8gPSBaZXB0bywgdm9pZCAwID09PSB3aW5kb3cuJCAmJiAod2luZG93LiQgPSBaZXB0byksCiAgICAgICAgZnVuY3Rpb24obikgewogICAgICAgICAgdmFyIGUgPSAxLAogICAgICAgICAgICB0ID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLAogICAgICAgICAgICBpID0gbi5pc0Z1bmN0aW9uLAogICAgICAgICAgICBvID0gZnVuY3Rpb24obikgewogICAgICAgICAgICAgIHJldHVybiAic3RyaW5nIiA9PSB0eXBlb2YgbgogICAgICAgICAgICB9LAogICAgICAgICAgICByID0ge30sCiAgICAgICAgICAgIGEgPSB7fSwKICAgICAgICAgICAgbCA9ICJvbmZvY3VzaW4iIGluIHdpbmRvdywKICAgICAgICAgICAgcyA9IHsKICAgICAgICAgICAgICBmb2N1czogImZvY3VzaW4iLAogICAgICAgICAgICAgIGJsdXI6ICJmb2N1c291dCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgYyA9IHsKICAgICAgICAgICAgICBtb3VzZWVudGVyOiAibW91c2VvdmVyIiwKICAgICAgICAgICAgICBtb3VzZWxlYXZlOiAibW91c2VvdXQiCiAgICAgICAgICAgIH07CgogICAgICAgICAgZnVuY3Rpb24gcChuKSB7CiAgICAgICAgICAgIHJldHVybiBuLl96aWQgfHwgKG4uX3ppZCA9IGUrKykKICAgICAgICAgIH0KCiAgICAgICAgICBmdW5jdGlvbiB1KG4sIGUsIHQsIGkpIHsKICAgICAgICAgICAgaWYgKChlID0gZChlKSkubnMpIHZhciBvID0gKGEgPSBlLm5zLCBuZXcgUmVnRXhwKCIoPzpefCApIiArIGEucmVwbGFjZSgiICIsICIgLiogPyIpICsgIig\/OiB8JCkiKSk7CiAgICAgICAgICAgIHZhciBhOwogICAgICAgICAgICByZXR1cm4gKHJbcChuKV0gfHwgW10pLmZpbHRlcigoZnVuY3Rpb24obikgewogICAgICAgICAgICAgIHJldHVybiBuICYmICghZS5lIHx8IG4uZSA9PSBlLmUpICYmICghZS5ucyB8fCBvLnRlc3Qobi5ucykpICYmICghdCB8fCBwKG4uZm4pID09PSBwKHQpKSAmJiAoIWkgfHwgbi5zZWwgPT0gaSkKICAgICAgICAgICAgfSkpCiAgICAgICAgICB9CgogICAgICAgICAgZnVuY3Rpb24gZChuKSB7CiAgICAgICAgICAgIHZhciBlID0gKCIiICsgbikuc3BsaXQoIi4iKTsKICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICBlOiBlWzBdLAogICAgICAgICAgICAgIG5zOiBlLnNsaWNlKDEpLnNvcnQoKS5qb2luKCIgIikKICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIGZ1bmN0aW9uIGYobiwgZSkgewogICAgICAgICAgICByZXR1cm4gbi5kZWwgJiYgIWwgJiYgbi5lIGluIHMgfHwgISFlCiAgICAgICAgICB9CgogICAgICAgICAgZnVuY3Rpb24gbShuKSB7CiAgICAgICAgICAgIHJldHVybiBjW25dIHx8IGwgJiYgc1tuXSB8fCBuCiAgICAgICAgICB9CgogICAgICAgICAgZnVuY3Rpb24gaChlLCB0LCBpLCBvLCBhLCBsLCBzKSB7CiAgICAgICAgICAgIHZhciB1ID0gcChlKSwKICAgICAgICAgICAgICBoID0gclt1XSB8fCAoclt1XSA9IFtdKTsKICAgICAgICAgICAgdC5zcGxpdCgvXHMvKS5mb3JFYWNoKChmdW5jdGlvbih0KSB7CiAgICAgICAgICAgICAgaWYgKCJyZWFkeSIgPT0gdCkgcmV0dXJuIG4oZG9jdW1lbnQpLnJlYWR5KGkpOwogICAgICAgICAgICAgIHZhciByID0gZCh0KTsKICAgICAgICAgICAgICByLmZuID0gaSwgci5zZWwgPSBhLCByLmUgaW4gYyAmJiAoaSA9IGZ1bmN0aW9uKGUpIHsKICAgICAgICAgICAgICAgIHZhciB0ID0gZS5yZWxhdGVkVGFyZ2V0OwogICAgICAgICAgICAgICAgaWYgKCF0IHx8IHQgIT09IHRoaXMgJiYgIW4uY29udGFpbnModGhpcywgdCkpIHJldHVybiByLmZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykKICAgICAgICAgICAgICB9KSwgci5kZWwgPSBsOwogICAgICAgICAgICAgIHZhciBwID0gbCB8fCBpOwogICAgICAgICAgICAgIHIucHJveHkgPSBmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgICBpZiAoIShuID0gdyhuKSkuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQoKSkgewogICAgICAgICAgICAgICAgICBuLmRhdGEgPSBvOwogICAgICAgICAgICAgICAgICB2YXIgdCA9IHAuYXBwbHkoZSwgbnVsbCA9PSBuLl9hcmdzID8gW25dIDogW25dLmNvbmNhdChuLl9hcmdzKSk7CiAgICAgICAgICAgICAgICAgIHJldHVybiAhMSA9PT0gdCAmJiAobi5wcmV2ZW50RGVmYXVsdCgpLCBuLnN0b3BQcm9wYWdhdGlvbigpKSwgdAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sIHIuaSA9IGgubGVuZ3RoLCBoLnB1c2gociksICJhZGRFdmVudExpc3RlbmVyIiBpbiBlICYmIGUuYWRkRXZlbnRMaXN0ZW5lcihtKHIuZSksIHIucHJveHksIGYociwgcykpCiAgICAgICAgICAgIH0pKQogICAgICAgICAgfQoKICAgICAgICAgIGZ1bmN0aW9uIHYobiwgZSwgdCwgaSwgbykgewogICAgICAgICAgICB2YXIgYSA9IHAobik7CiAgICAgICAgICAgIChlIHx8ICIiKS5zcGxpdCgvXHMvKS5mb3JFYWNoKChmdW5jdGlvbihlKSB7CiAgICAgICAgICAgICAgdShuLCBlLCB0LCBpKS5mb3JFYWNoKChmdW5jdGlvbihlKSB7CiAgICAgICAgICAgICAgICBkZWxldGUgclthXVtlLmldLCAicmVtb3ZlRXZlbnRMaXN0ZW5lciIgaW4gbiAmJiBuLnJlbW92ZUV2ZW50TGlzdGVuZXIobShlLmUpLCBlLnByb3h5LCBmKGUsIG8pKQogICAgICAgICAgICAgIH0pKQogICAgICAgICAgICB9KSkKICAgICAgICAgIH0KICAgICAgICAgIGEuY2xpY2sgPSBhLm1vdXNlZG93biA9IGEubW91c2V1cCA9IGEubW91c2Vtb3ZlID0gIk1vdXNlRXZlbnRzIiwgbi5ldmVudCA9IHsKICAgICAgICAgICAgYWRkOiBoLAogICAgICAgICAgICByZW1vdmU6IHYKICAgICAgICAgIH0sIG4ucHJveHkgPSBmdW5jdGlvbihlLCByKSB7CiAgICAgICAgICAgIHZhciBhID0gMiBpbiBhcmd1bWVudHMgJiYgdC5jYWxsKGFyZ3VtZW50cywgMik7CiAgICAgICAgICAgIGlmIChpKGUpKSB7CiAgICAgICAgICAgICAgdmFyIGwgPSBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIHJldHVybiBlLmFwcGx5KHIsIGEgPyBhLmNvbmNhdCh0LmNhbGwoYXJndW1lbnRzKSkgOiBhcmd1bWVudHMpCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICByZXR1cm4gbC5femlkID0gcChlKSwgbAogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChvKHIpKSByZXR1cm4gYSA\/IChhLnVuc2hpZnQoZVtyXSwgZSksIG4ucHJveHkuYXBwbHkobnVsbCwgYSkpIDogbi5wcm94eShlW3JdLCBlKTsKICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigiZXhwZWN0ZWQgZnVuY3Rpb24iKQogICAgICAgICAgfSwgbi5mbi5iaW5kID0gZnVuY3Rpb24obiwgZSwgdCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5vbihuLCBlLCB0KQogICAgICAgICAgfSwgbi5mbi51bmJpbmQgPSBmdW5jdGlvbihuLCBlKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLm9mZihuLCBlKQogICAgICAgICAgfSwgbi5mbi5vbmUgPSBmdW5jdGlvbihuLCBlLCB0LCBpKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLm9uKG4sIGUsIHQsIGksIDEpCiAgICAgICAgICB9OwogICAgICAgICAgdmFyIGcgPSBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICByZXR1cm4gITAKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeSA9IGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgIHJldHVybiAhMQogICAgICAgICAgICB9LAogICAgICAgICAgICBiID0gL14oW0EtWl18cmV0dXJuVmFsdWUkfGxheWVyW1hZXSR8d2Via2l0TW92ZW1lbnRbWFldJCkvLAogICAgICAgICAgICBNID0gewogICAgICAgICAgICAgIHByZXZlbnREZWZhdWx0OiAiaXNEZWZhdWx0UHJldmVudGVkIiwKICAgICAgICAgICAgICBzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb246ICJpc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCIsCiAgICAgICAgICAgICAgc3RvcFByb3BhZ2F0aW9uOiAiaXNQcm9wYWdhdGlvblN0b3BwZWQiCiAgICAgICAgICAgIH07CgogICAgICAgICAgZnVuY3Rpb24gdyhlLCB0KSB7CiAgICAgICAgICAgIHJldHVybiAhdCAmJiBlLmlzRGVmYXVsdFByZXZlbnRlZCB8fCAodCB8fCAodCA9IGUpLCBuLmVhY2goTSwgKGZ1bmN0aW9uKG4sIGkpIHsKICAgICAgICAgICAgICB2YXIgbyA9IHRbbl07CiAgICAgICAgICAgICAgZVtuXSA9IGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXNbaV0gPSBnLCBvICYmIG8uYXBwbHkodCwgYXJndW1lbnRzKQogICAgICAgICAgICAgIH0sIGVbaV0gPSB5CiAgICAgICAgICAgIH0pKSwgZS50aW1lU3RhbXAgfHwgKGUudGltZVN0YW1wID0gRGF0ZS5ub3coKSksICh2b2lkIDAgIT09IHQuZGVmYXVsdFByZXZlbnRlZCA\/IHQuZGVmYXVsdFByZXZlbnRlZCA6ICJyZXR1cm5WYWx1ZSIgaW4gdCA\/ICExID09PSB0LnJldHVyblZhbHVlIDogdC5nZXRQcmV2ZW50RGVmYXVsdCAmJiB0LmdldFByZXZlbnREZWZhdWx0KCkpICYmIChlLmlzRGVmYXVsdFByZXZlbnRlZCA9IGcpKSwgZQogICAgICAgICAgfQoKICAgICAgICAgIGZ1bmN0aW9uIFQobikgewogICAgICAgICAgICB2YXIgZSwgdCA9IHsKICAgICAgICAgICAgICBvcmlnaW5hbEV2ZW50OiBuCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIGZvciAoZSBpbiBuKSBiLnRlc3QoZSkgfHwgdm9pZCAwID09PSBuW2VdIHx8ICh0W2VdID0gbltlXSk7CiAgICAgICAgICAgIHJldHVybiB3KHQsIG4pCiAgICAgICAgICB9CiAgICAgICAgICBuLmZuLmRlbGVnYXRlID0gZnVuY3Rpb24obiwgZSwgdCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5vbihlLCBuLCB0KQogICAgICAgICAgfSwgbi5mbi51bmRlbGVnYXRlID0gZnVuY3Rpb24obiwgZSwgdCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5vZmYoZSwgbiwgdCkKICAgICAgICAgIH0sIG4uZm4ubGl2ZSA9IGZ1bmN0aW9uKGUsIHQpIHsKICAgICAgICAgICAgcmV0dXJuIG4oZG9jdW1lbnQuYm9keSkuZGVsZWdhdGUodGhpcy5zZWxlY3RvciwgZSwgdCksIHRoaXMKICAgICAgICAgIH0sIG4uZm4uZGllID0gZnVuY3Rpb24oZSwgdCkgewogICAgICAgICAgICByZXR1cm4gbihkb2N1bWVudC5ib2R5KS51bmRlbGVnYXRlKHRoaXMuc2VsZWN0b3IsIGUsIHQpLCB0aGlzCiAgICAgICAgICB9LCBuLmZuLm9uID0gZnVuY3Rpb24oZSwgciwgYSwgbCwgcykgewogICAgICAgICAgICB2YXIgYywgcCwgdSA9IHRoaXM7CiAgICAgICAgICAgIHJldHVybiBlICYmICFvKGUpID8gKG4uZWFjaChlLCAoZnVuY3Rpb24obiwgZSkgewogICAgICAgICAgICAgIHUub24obiwgciwgYSwgZSwgcykKICAgICAgICAgICAgfSkpLCB1KSA6IChvKHIpIHx8IGkobCkgfHwgITEgPT09IGwgfHwgKGwgPSBhLCBhID0gciwgciA9IHZvaWQgMCksIHZvaWQgMCAhPT0gbCAmJiAhMSAhPT0gYSB8fCAobCA9IGEsIGEgPSB2b2lkIDApLCAhMSA9PT0gbCAmJiAobCA9IHkpLCB1LmVhY2goKGZ1bmN0aW9uKGksIG8pIHsKICAgICAgICAgICAgICBzICYmIChjID0gZnVuY3Rpb24obikgewogICAgICAgICAgICAgICAgcmV0dXJuIHYobywgbi50eXBlLCBsKSwgbC5hcHBseSh0aGlzLCBhcmd1bWVudHMpCiAgICAgICAgICAgICAgfSksIHIgJiYgKHAgPSBmdW5jdGlvbihlKSB7CiAgICAgICAgICAgICAgICB2YXIgaSwgYSA9IG4oZS50YXJnZXQpLmNsb3Nlc3QociwgbykuZ2V0KDApOwogICAgICAgICAgICAgICAgaWYgKGEgJiYgYSAhPT0gbykgcmV0dXJuIGkgPSBuLmV4dGVuZChUKGUpLCB7CiAgICAgICAgICAgICAgICAgIGN1cnJlbnRUYXJnZXQ6IGEsCiAgICAgICAgICAgICAgICAgIGxpdmVGaXJlZDogbwogICAgICAgICAgICAgICAgfSksIChjIHx8IGwpLmFwcGx5KGEsIFtpXS5jb25jYXQodC5jYWxsKGFyZ3VtZW50cywgMSkpKQogICAgICAgICAgICAgIH0pLCBoKG8sIGUsIGwsIGEsIHIsIHAgfHwgYykKICAgICAgICAgICAgfSkpKQogICAgICAgICAgfSwgbi5mbi5vZmYgPSBmdW5jdGlvbihlLCB0LCByKSB7CiAgICAgICAgICAgIHZhciBhID0gdGhpczsKICAgICAgICAgICAgcmV0dXJuIGUgJiYgIW8oZSkgPyAobi5lYWNoKGUsIChmdW5jdGlvbihuLCBlKSB7CiAgICAgICAgICAgICAgYS5vZmYobiwgdCwgZSkKICAgICAgICAgICAgfSkpLCBhKSA6IChvKHQpIHx8IGkocikgfHwgITEgPT09IHIgfHwgKHIgPSB0LCB0ID0gdm9pZCAwKSwgITEgPT09IHIgJiYgKHIgPSB5KSwgYS5lYWNoKChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICB2KHRoaXMsIGUsIHIsIHQpCiAgICAgICAgICAgIH0pKSkKICAgICAgICAgIH0sIG4uZm4udHJpZ2dlciA9IGZ1bmN0aW9uKGUsIHQpIHsKICAgICAgICAgICAgcmV0dXJuIChlID0gbyhlKSB8fCBuLmlzUGxhaW5PYmplY3QoZSkgPyBuLkV2ZW50KGUpIDogdyhlKSkuX2FyZ3MgPSB0LCB0aGlzLmVhY2goKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgIGUudHlwZSBpbiBzICYmICJmdW5jdGlvbiIgPT0gdHlwZW9mIHRoaXNbZS50eXBlXSA\/IHRoaXNbZS50eXBlXSgpIDogImRpc3BhdGNoRXZlbnQiIGluIHRoaXMgPyB0aGlzLmRpc3BhdGNoRXZlbnQoZSkgOiBuKHRoaXMpLnRyaWdnZXJIYW5kbGVyKGUsIHQpCiAgICAgICAgICAgIH0pKQogICAgICAgICAgfSwgbi5mbi50cmlnZ2VySGFuZGxlciA9IGZ1bmN0aW9uKGUsIHQpIHsKICAgICAgICAgICAgdmFyIGksIHI7CiAgICAgICAgICAgIHJldHVybiB0aGlzLmVhY2goKGZ1bmN0aW9uKGEsIGwpIHsKICAgICAgICAgICAgICAoaSA9IFQobyhlKSA\/IG4uRXZlbnQoZSkgOiBlKSkuX2FyZ3MgPSB0LCBpLnRhcmdldCA9IGwsIG4uZWFjaCh1KGwsIGUudHlwZSB8fCBlKSwgKGZ1bmN0aW9uKG4sIGUpIHsKICAgICAgICAgICAgICAgIGlmIChyID0gZS5wcm94eShpKSwgaS5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCgpKSByZXR1cm4gITEKICAgICAgICAgICAgICB9KSkKICAgICAgICAgICAgfSkpLCByCiAgICAgICAgICB9LCAiZm9jdXNpbiBmb2N1c291dCBmb2N1cyBibHVyIGxvYWQgcmVzaXplIHNjcm9sbCB1bmxvYWQgY2xpY2sgZGJsY2xpY2sgbW91c2Vkb3duIG1vdXNldXAgbW91c2Vtb3ZlIG1vdXNlb3ZlciBtb3VzZW91dCBtb3VzZWVudGVyIG1vdXNlbGVhdmUgY2hhbmdlIHNlbGVjdCBrZXlkb3duIGtleXByZXNzIGtleXVwIGVycm9yIi5zcGxpdCgiICIpLmZvckVhY2goKGZ1bmN0aW9uKGUpIHsKICAgICAgICAgICAgbi5mbltlXSA9IGZ1bmN0aW9uKG4pIHsKICAgICAgICAgICAgICByZXR1cm4gMCBpbiBhcmd1bWVudHMgPyB0aGlzLmJpbmQoZSwgbikgOiB0aGlzLnRyaWdnZXIoZSkKICAgICAgICAgICAgfQogICAgICAgICAgfSkpLCBuLkV2ZW50ID0gZnVuY3Rpb24obiwgZSkgewogICAgICAgICAgICBvKG4pIHx8IChuID0gKGUgPSBuKS50eXBlKTsKICAgICAgICAgICAgdmFyIHQgPSBkb2N1bWVudC5jcmVhdGVFdmVudChhW25dIHx8ICJFdmVudHMiKSwKICAgICAgICAgICAgICBpID0gITA7CiAgICAgICAgICAgIGlmIChlKQogICAgICAgICAgICAgIGZvciAodmFyIHIgaW4gZSkgImJ1YmJsZXMiID09IHIgPyBpID0gISFlW3JdIDogdFtyXSA9IGVbcl07CiAgICAgICAgICAgIHJldHVybiB0LmluaXRFdmVudChuLCBpLCAhMCksIHcodCkKICAgICAgICAgIH0KICAgICAgICB9KFplcHRvKSwKICAgICAgICBmdW5jdGlvbihuKSB7CiAgICAgICAgICB2YXIgZSwgdCwgaSA9ICtuZXcgRGF0ZSwKICAgICAgICAgICAgbyA9IHdpbmRvdy5kb2N1bWVudCwKICAgICAgICAgICAgciA9IC88c2NyaXB0XGJbXjxdKig\/Oig\/ITxcL3NjcmlwdD4pPFtePF0qKSo8XC9zY3JpcHQ+L2dpLAogICAgICAgICAgICBhID0gL14oPzp0ZXh0fGFwcGxpY2F0aW9uKVwvamF2YXNjcmlwdC9pLAogICAgICAgICAgICBsID0gL14oPzp0ZXh0fGFwcGxpY2F0aW9uKVwveG1sL2ksCiAgICAgICAgICAgIHMgPSAvXlxzKiQvLAogICAgICAgICAgICBjID0gby5jcmVhdGVFbGVtZW50KCJhIik7CgogICAgICAgICAgZnVuY3Rpb24gcChlLCB0LCBpLCByKSB7CiAgICAgICAgICAgIGlmIChlLmdsb2JhbCkgcmV0dXJuIGZ1bmN0aW9uKGUsIHQsIGkpIHsKICAgICAgICAgICAgICB2YXIgbyA9IG4uRXZlbnQodCk7CiAgICAgICAgICAgICAgcmV0dXJuIG4oZSkudHJpZ2dlcihvLCBpKSwgIW8uaXNEZWZhdWx0UHJldmVudGVkKCkKICAgICAgICAgICAgfSh0IHx8IG8sIGksIHIpCiAgICAgICAgICB9CgogICAgICAgICAgZnVuY3Rpb24gdShuLCBlKSB7CiAgICAgICAgICAgIHZhciB0ID0gZS5jb250ZXh0OwogICAgICAgICAgICBpZiAoITEgPT09IGUuYmVmb3JlU2VuZC5jYWxsKHQsIG4sIGUpIHx8ICExID09PSBwKGUsIHQsICJhamF4QmVmb3JlU2VuZCIsIFtuLCBlXSkpIHJldHVybiAhMTsKICAgICAgICAgICAgcChlLCB0LCAiYWpheFNlbmQiLCBbbiwgZV0pCiAgICAgICAgICB9CgogICAgICAgICAgZnVuY3Rpb24gZChuLCBlLCB0LCBpKSB7CiAgICAgICAgICAgIHZhciBvID0gdC5jb250ZXh0OwogICAgICAgICAgICB0LnN1Y2Nlc3MuY2FsbChvLCBuLCAic3VjY2VzcyIsIGUpLCBpICYmIGkucmVzb2x2ZVdpdGgobywgW24sICJzdWNjZXNzIiwgZV0pLCBwKHQsIG8sICJhamF4U3VjY2VzcyIsIFtlLCB0LCBuXSksIG0oInN1Y2Nlc3MiLCBlLCB0KQogICAgICAgICAgfQoKICAgICAgICAgIGZ1bmN0aW9uIGYobiwgZSwgdCwgaSwgbykgewogICAgICAgICAgICB2YXIgciA9IGkuY29udGV4dDsKICAgICAgICAgICAgaS5lcnJvci5jYWxsKHIsIHQsIGUsIG4pLCBvICYmIG8ucmVqZWN0V2l0aChyLCBbdCwgZSwgbl0pLCBwKGksIHIsICJhamF4RXJyb3IiLCBbdCwgaSwgbiB8fCBlXSksIG0oZSwgdCwgaSkKICAgICAgICAgIH0KCiAgICAgICAgICBmdW5jdGlvbiBtKGUsIHQsIGkpIHsKICAgICAgICAgICAgdmFyIG8gPSBpLmNvbnRleHQ7CiAgICAgICAgICAgIGkuY29tcGxldGUuY2FsbChvLCB0LCBlKSwgcChpLCBvLCAiYWpheENvbXBsZXRlIiwgW3QsIGldKSwKICAgICAgICAgICAgICBmdW5jdGlvbihlKSB7CiAgICAgICAgICAgICAgICBlLmdsb2JhbCAmJiAhLS1uLmFjdGl2ZSAmJiBwKGUsIG51bGwsICJhamF4U3RvcCIpCiAgICAgICAgICAgICAgfShpKQogICAgICAgICAgfQoKICAgICAgICAgIGZ1bmN0aW9uIGgoKSB7fQoKICAgICAgICAgIGZ1bmN0aW9uIHYobiwgZSkgewogICAgICAgICAgICByZXR1cm4gIiIgPT0gZSA\/IG4gOiAobiArICImIiArIGUpLnJlcGxhY2UoL1smP117MSwyfS8sICI\/IikKICAgICAgICAgIH0KCiAgICAgICAgICBmdW5jdGlvbiBnKGUsIHQsIGksIG8pIHsKICAgICAgICAgICAgcmV0dXJuIG4uaXNGdW5jdGlvbih0KSAmJiAobyA9IGksIGkgPSB0LCB0ID0gdm9pZCAwKSwgbi5pc0Z1bmN0aW9uKGkpIHx8IChvID0gaSwgaSA9IHZvaWQgMCksIHsKICAgICAgICAgICAgICB1cmw6IGUsCiAgICAgICAgICAgICAgZGF0YTogdCwKICAgICAgICAgICAgICBzdWNjZXNzOiBpLAogICAgICAgICAgICAgIGRhdGFUeXBlOiBvCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIGMuaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmLCBuLmFjdGl2ZSA9IDAsIG4uYWpheEpTT05QID0gZnVuY3Rpb24oZSwgdCkgewogICAgICAgICAgICBpZiAoISgidHlwZSIgaW4gZSkpIHJldHVybiBuLmFqYXgoZSk7CiAgICAgICAgICAgIHZhciByLCBhLCBsID0gZS5qc29ucENhbGxiYWNrLAogICAgICAgICAgICAgIHMgPSAobi5pc0Z1bmN0aW9uKGwpID8gbCgpIDogbCkgfHwgIlplcHRvIiArIGkrKywKICAgICAgICAgICAgICBjID0gby5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKSwKICAgICAgICAgICAgICBwID0gd2luZG93W3NdLAogICAgICAgICAgICAgIG0gPSBmdW5jdGlvbihlKSB7CiAgICAgICAgICAgICAgICBuKGMpLnRyaWdnZXJIYW5kbGVyKCJlcnJvciIsIGUgfHwgImFib3J0IikKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGggPSB7CiAgICAgICAgICAgICAgICBhYm9ydDogbQogICAgICAgICAgICAgIH07CiAgICAgICAgICAgIHJldHVybiB0ICYmIHQucHJvbWlzZShoKSwgbihjKS5vbigibG9hZCBlcnJvciIsIChmdW5jdGlvbihpLCBvKSB7CiAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KGEpLCBuKGMpLm9mZigpLnJlbW92ZSgpLCAiZXJyb3IiICE9IGkudHlwZSAmJiByID8gZChyWzBdLCBoLCBlLCB0KSA6IGYobnVsbCwgbyB8fCAiZXJyb3IiLCBoLCBlLCB0KSwgd2luZG93W3NdID0gcCwgciAmJiBuLmlzRnVuY3Rpb24ocCkgJiYgcChyWzBdKSwgcCA9IHIgPSB2b2lkIDAKICAgICAgICAgICAgfSkpLCAhMSA9PT0gdShoLCBlKSA\/IChtKCJhYm9ydCIpLCBoKSA6ICh3aW5kb3dbc10gPSBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICByID0gYXJndW1lbnRzCiAgICAgICAgICAgIH0sIGMuc3JjID0gZS51cmwucmVwbGFjZSgvXD8oLispPVw\/LywgIj8kMT0iICsgcyksIG8uaGVhZC5hcHBlbmRDaGlsZChjKSwgZS50aW1lb3V0ID4gMCAmJiAoYSA9IHNldFRpbWVvdXQoKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgIG0oInRpbWVvdXQiKQogICAgICAgICAgICB9KSwgZS50aW1lb3V0KSksIGgpCiAgICAgICAgICB9LCBuLmFqYXhTZXR0aW5ncyA9IHsKICAgICAgICAgICAgdHlwZTogIkdFVCIsCiAgICAgICAgICAgIGJlZm9yZVNlbmQ6IGgsCiAgICAgICAgICAgIHN1Y2Nlc3M6IGgsCiAgICAgICAgICAgIGVycm9yOiBoLAogICAgICAgICAgICBjb21wbGV0ZTogaCwKICAgICAgICAgICAgY29udGV4dDogbnVsbCwKICAgICAgICAgICAgZ2xvYmFsOiAhMCwKICAgICAgICAgICAgeGhyOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICByZXR1cm4gbmV3IHdpbmRvdy5YTUxIdHRwUmVxdWVzdAogICAgICAgICAgICB9LAogICAgICAgICAgICBhY2NlcHRzOiB7CiAgICAgICAgICAgICAgc2NyaXB0OiAidGV4dC9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi94LWphdmFzY3JpcHQiLAogICAgICAgICAgICAgIGpzb246ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAgICAgICB4bWw6ICJhcHBsaWNhdGlvbi94bWwsIHRleHQveG1sIiwKICAgICAgICAgICAgICBodG1sOiAidGV4dC9odG1sIiwKICAgICAgICAgICAgICB0ZXh0OiAidGV4dC9wbGFpbiIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgY3Jvc3NEb21haW46ICExLAogICAgICAgICAgICB0aW1lb3V0OiAwLAogICAgICAgICAgICBwcm9jZXNzRGF0YTogITAsCiAgICAgICAgICAgIGNhY2hlOiAhMCwKICAgICAgICAgICAgZGF0YUZpbHRlcjogaAogICAgICAgICAgfSwgbi5hamF4ID0gZnVuY3Rpb24oaSkgewogICAgICAgICAgICB2YXIgciwgbSwgZyA9IG4uZXh0ZW5kKHt9LCBpIHx8IHt9KSwKICAgICAgICAgICAgICB5ID0gbi5EZWZlcnJlZCAmJiBuLkRlZmVycmVkKCk7CiAgICAgICAgICAgIGZvciAoZSBpbiBuLmFqYXhTZXR0aW5ncykgdm9pZCAwID09PSBnW2VdICYmIChnW2VdID0gbi5hamF4U2V0dGluZ3NbZV0pOwogICAgICAgICAgICAhIGZ1bmN0aW9uKGUpIHsKICAgICAgICAgICAgICBlLmdsb2JhbCAmJiAwID09IG4uYWN0aXZlKysgJiYgcChlLCBudWxsLCAiYWpheFN0YXJ0IikKICAgICAgICAgICAgfShnKSwgZy5jcm9zc0RvbWFpbiB8fCAoKHIgPSBvLmNyZWF0ZUVsZW1lbnQoImEiKSkuaHJlZiA9IGcudXJsLCByLmhyZWYgPSByLmhyZWYsIGcuY3Jvc3NEb21haW4gPSBjLnByb3RvY29sICsgIi8vIiArIGMuaG9zdCAhPSByLnByb3RvY29sICsgIi8vIiArIHIuaG9zdCksIGcudXJsIHx8IChnLnVybCA9IHdpbmRvdy5sb2NhdGlvbi50b1N0cmluZygpKSwgKG0gPSBnLnVybC5pbmRleE9mKCIjIikpID4gLTEgJiYgKGcudXJsID0gZy51cmwuc2xpY2UoMCwgbSkpLAogICAgICAgICAgICAgIGZ1bmN0aW9uKGUpIHsKICAgICAgICAgICAgICAgIGUucHJvY2Vzc0RhdGEgJiYgZS5kYXRhICYmICJzdHJpbmciICE9IG4udHlwZShlLmRhdGEpICYmIChlLmRhdGEgPSBuLnBhcmFtKGUuZGF0YSwgZS50cmFkaXRpb25hbCkpLCAhZS5kYXRhIHx8IGUudHlwZSAmJiAiR0VUIiAhPSBlLnR5cGUudG9VcHBlckNhc2UoKSAmJiAianNvbnAiICE9IGUuZGF0YVR5cGUgfHwgKGUudXJsID0gdihlLnVybCwgZS5kYXRhKSwgZS5kYXRhID0gdm9pZCAwKQogICAgICAgICAgICAgIH0oZyk7CiAgICAgICAgICAgIHZhciBiID0gZy5kYXRhVHlwZSwKICAgICAgICAgICAgICBNID0gL1w\/Lis9XD8vLnRlc3QoZy51cmwpOwogICAgICAgICAgICBpZiAoTSAmJiAoYiA9ICJqc29ucCIpLCAhMSAhPT0gZy5jYWNoZSAmJiAoaSAmJiAhMCA9PT0gaS5jYWNoZSB8fCAic2NyaXB0IiAhPSBiICYmICJqc29ucCIgIT0gYikgfHwgKGcudXJsID0gdihnLnVybCwgIl89IiArIERhdGUubm93KCkpKSwgImpzb25wIiA9PSBiKSByZXR1cm4gTSB8fCAoZy51cmwgPSB2KGcudXJsLCBnLmpzb25wID8gZy5qc29ucCArICI9PyIgOiAhMSA9PT0gZy5qc29ucCA\/ICIiIDogImNhbGxiYWNrPT8iKSksIG4uYWpheEpTT05QKGcsIHkpOwogICAgICAgICAgICB2YXIgdywgVCA9IGcuYWNjZXB0c1tiXSwKICAgICAgICAgICAgICBVID0ge30sCiAgICAgICAgICAgICAgeCA9IGZ1bmN0aW9uKG4sIGUpIHsKICAgICAgICAgICAgICAgIFVbbi50b0xvd2VyQ2FzZSgpXSA9IFtuLCBlXQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgRCA9IC9eKFtcdy1dKzopXC9cLy8udGVzdChnLnVybCkgPyBSZWdFeHAuJDEgOiB3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wsCiAgICAgICAgICAgICAgSiA9IGcueGhyKCksCiAgICAgICAgICAgICAgTiA9IEouc2V0UmVxdWVzdEhlYWRlcjsKICAgICAgICAgICAgaWYgKHkgJiYgeS5wcm9taXNlKEopLCBnLmNyb3NzRG9tYWluIHx8IHgoIlgtUmVxdWVzdGVkLVdpdGgiLCAiWE1MSHR0cFJlcXVlc3QiKSwgeCgiQWNjZXB0IiwgVCB8fCAiKi8qIiksIChUID0gZy5taW1lVHlwZSB8fCBUKSAmJiAoVC5pbmRleE9mKCIsIikgPiAtMSAmJiAoVCA9IFQuc3BsaXQoIiwiLCAyKVswXSksIEoub3ZlcnJpZGVNaW1lVHlwZSAmJiBKLm92ZXJyaWRlTWltZVR5cGUoVCkpLCAoZy5jb250ZW50VHlwZSB8fCAhMSAhPT0gZy5jb250ZW50VHlwZSAmJiBnLmRhdGEgJiYgIkdFVCIgIT0gZy50eXBlLnRvVXBwZXJDYXNlKCkpICYmIHgoIkNvbnRlbnQtVHlwZSIsIGcuY29udGVudFR5cGUgfHwgImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIpLCBnLmhlYWRlcnMpCiAgICAgICAgICAgICAgZm9yICh0IGluIGcuaGVhZGVycykgeCh0LCBnLmhlYWRlcnNbdF0pOwogICAgICAgICAgICBpZiAoSi5zZXRSZXF1ZXN0SGVhZGVyID0geCwgSi5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIGlmICg0ID09IEoucmVhZHlTdGF0ZSkgewogICAgICAgICAgICAgICAgICBKLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGgsIGNsZWFyVGltZW91dCh3KTsKICAgICAgICAgICAgICAgICAgdmFyIGUsIHQgPSAhMTsKICAgICAgICAgICAgICAgICAgaWYgKEouc3RhdHVzID49IDIwMCAmJiBKLnN0YXR1cyA8IDMwMCB8fCAzMDQgPT0gSi5zdGF0dXMgfHwgMCA9PSBKLnN0YXR1cyAmJiAiZmlsZToiID09IEQpIHsKICAgICAgICAgICAgICAgICAgICBpZiAoYiA9IGIgfHwgZnVuY3Rpb24obikgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbiAmJiAobiA9IG4uc3BsaXQoIjsiLCAyKVswXSksIG4gJiYgKCJ0ZXh0L2h0bWwiID09IG4gPyAiaHRtbCIgOiAiYXBwbGljYXRpb24vanNvbiIgPT0gbiA\/ICJqc29uIiA6IGEudGVzdChuKSA\/ICJzY3JpcHQiIDogbC50ZXN0KG4pICYmICJ4bWwiKSB8fCAidGV4dCIKICAgICAgICAgICAgICAgICAgICAgIH0oZy5taW1lVHlwZSB8fCBKLmdldFJlc3BvbnNlSGVhZGVyKCJjb250ZW50LXR5cGUiKSksICJhcnJheWJ1ZmZlciIgPT0gSi5yZXNwb25zZVR5cGUgfHwgImJsb2IiID09IEoucmVzcG9uc2VUeXBlKSBlID0gSi5yZXNwb25zZTsKICAgICAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgIGUgPSBKLnJlc3BvbnNlVGV4dDsKICAgICAgICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGUgPSBmdW5jdGlvbihuLCBlLCB0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHQuZGF0YUZpbHRlciA9PSBoKSByZXR1cm4gbjsKICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgaSA9IHQuY29udGV4dDsKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdC5kYXRhRmlsdGVyLmNhbGwoaSwgbiwgZSkKICAgICAgICAgICAgICAgICAgICAgICAgfShlLCBiLCBnKSwgInNjcmlwdCIgPT0gYiA\/ICgwLCBldmFsKShlKSA6ICJ4bWwiID09IGIgPyBlID0gSi5yZXNwb25zZVhNTCA6ICJqc29uIiA9PSBiICYmIChlID0gcy50ZXN0KGUpID8gbnVsbCA6IG4ucGFyc2VKU09OKGUpKQogICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAobikgewogICAgICAgICAgICAgICAgICAgICAgICB0ID0gbgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgaWYgKHQpIHJldHVybiBmKHQsICJwYXJzZXJlcnJvciIsIEosIGcsIHkpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGQoZSwgSiwgZywgeSkKICAgICAgICAgICAgICAgICAgfSBlbHNlIGYoSi5zdGF0dXNUZXh0IHx8IG51bGwsIEouc3RhdHVzID8gImVycm9yIiA6ICJhYm9ydCIsIEosIGcsIHkpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwgITEgPT09IHUoSiwgZykpIHJldHVybiBKLmFib3J0KCksIGYobnVsbCwgImFib3J0IiwgSiwgZywgeSksIEo7CiAgICAgICAgICAgIHZhciBrID0gISgiYXN5bmMiIGluIGcpIHx8IGcuYXN5bmM7CiAgICAgICAgICAgIGlmIChKLm9wZW4oZy50eXBlLCBnLnVybCwgaywgZy51c2VybmFtZSwgZy5wYXNzd29yZCksIGcueGhyRmllbGRzKQogICAgICAgICAgICAgIGZvciAodCBpbiBnLnhockZpZWxkcykgSlt0XSA9IGcueGhyRmllbGRzW3RdOwogICAgICAgICAgICBmb3IgKHQgaW4gVSkgTi5hcHBseShKLCBVW3RdKTsKICAgICAgICAgICAgcmV0dXJuIGcudGltZW91dCA+IDAgJiYgKHcgPSBzZXRUaW1lb3V0KChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICBKLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGgsIEouYWJvcnQoKSwgZihudWxsLCAidGltZW91dCIsIEosIGcsIHkpCiAgICAgICAgICAgIH0pLCBnLnRpbWVvdXQpKSwgSi5zZW5kKGcuZGF0YSA\/IGcuZGF0YSA6IG51bGwpLCBKCiAgICAgICAgICB9LCBuLmdldCA9IGZ1bmN0aW9uKCkgewogICAgICAgICAgICByZXR1cm4gbi5hamF4KGcuYXBwbHkobnVsbCwgYXJndW1lbnRzKSkKICAgICAgICAgIH0sIG4ucG9zdCA9IGZ1bmN0aW9uKCkgewogICAgICAgICAgICB2YXIgZSA9IGcuYXBwbHkobnVsbCwgYXJndW1lbnRzKTsKICAgICAgICAgICAgcmV0dXJuIGUudHlwZSA9ICJQT1NUIiwgbi5hamF4KGUpCiAgICAgICAgICB9LCBuLmdldEpTT04gPSBmdW5jdGlvbigpIHsKICAgICAgICAgICAgdmFyIGUgPSBnLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7CiAgICAgICAgICAgIHJldHVybiBlLmRhdGFUeXBlID0gImpzb24iLCBuLmFqYXgoZSkKICAgICAgICAgIH0sIG4uZm4ubG9hZCA9IGZ1bmN0aW9uKGUsIHQsIGkpIHsKICAgICAgICAgICAgaWYgKCF0aGlzLmxlbmd0aCkgcmV0dXJuIHRoaXM7CiAgICAgICAgICAgIHZhciBvLCBhID0gdGhpcywKICAgICAgICAgICAgICBsID0gZS5zcGxpdCgvXHMvKSwKICAgICAgICAgICAgICBzID0gZyhlLCB0LCBpKSwKICAgICAgICAgICAgICBjID0gcy5zdWNjZXNzOwogICAgICAgICAgICByZXR1cm4gbC5sZW5ndGggPiAxICYmIChzLnVybCA9IGxbMF0sIG8gPSBsWzFdKSwgcy5zdWNjZXNzID0gZnVuY3Rpb24oZSkgewogICAgICAgICAgICAgIGEuaHRtbChvID8gbigiPGRpdj4iKS5odG1sKGUucmVwbGFjZShyLCAiIikpLmZpbmQobykgOiBlKSwgYyAmJiBjLmFwcGx5KGEsIGFyZ3VtZW50cykKICAgICAgICAgICAgfSwgbi5hamF4KHMpLCB0aGlzCiAgICAgICAgICB9OwogICAgICAgICAgdmFyIHkgPSBlbmNvZGVVUklDb21wb25lbnQ7CiAgICAgICAgICBuLnBhcmFtID0gZnVuY3Rpb24oZSwgdCkgewogICAgICAgICAgICB2YXIgaSA9IFtdOwogICAgICAgICAgICByZXR1cm4gaS5hZGQgPSBmdW5jdGlvbihlLCB0KSB7CiAgICAgICAgICAgICAgICBuLmlzRnVuY3Rpb24odCkgJiYgKHQgPSB0KCkpLCBudWxsID09IHQgJiYgKHQgPSAiIiksIHRoaXMucAp1c2goeShlKSArICI9IiArIHkodCkpCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBmdW5jdGlvbiBlKHQsIGksIG8sIHIpIHsKICAgICAgICAgICAgICAgIHZhciBhLCBsID0gbi5pc0FycmF5KGkpLAogICAgICAgICAgICAgICAgICBzID0gbi5pc1BsYWluT2JqZWN0KGkpOwogICAgICAgICAgICAgICAgbi5lYWNoKGksIChmdW5jdGlvbihpLCBjKSB7CiAgICAgICAgICAgICAgICAgIGEgPSBuLnR5cGUoYyksIHIgJiYgKGkgPSBvID8gciA6IHIgKyAiWyIgKyAocyB8fCAib2JqZWN0IiA9PSBhIHx8ICJhcnJheSIgPT0gYSA\\/op4LnnIs6PC9zcGFuPlxuPHNwYW4+XG4nLmNvbmNhdCjmkJzntKLmupAuZmlsdGVyKChmdW5jdGlvbihuKSB7CiAgICAgICAgICByZXR1cm4gIS9kb3ViYW5cLmNvbS8udGVzdChuLnVybCkKICAgICAgICB9KSkubWFwKChmdW5jdGlvbihlKSB7CiAgICAgICAgICByZXR1cm4gIjxzcGFuPjxhICIgKyAoaXNNb2JpbGUgPyAiIiA6ICd0YXJnZXQ9Il9ibGFuayIgJykgKyAnaHJlZj0iJyArIHRvU2VhcmNoVXJsKGUudXJsLCBuKSArICciPicgKyBlLm5hbWUgKyAiPC9hPiIKICAgICAgICB9KSkuam9pbigiIC8gPC9zcGFuPiIpLCAiXG48L3NwYW4+PC9zcGFuPjwvZGl2PlxuIikpCiAgICAgIH0pKTsKICAgICAgZWxzZSBpZiAoSXMoL21cLmRvdWJhblwuY29tXC9tb3ZpZVwvc3ViamVjdFwvLykpIGxvZygi6LGG55OjwrfnlLXlvbHCt+ivpuaDhSAtIG0iKSwgYWRkU3R5bGUoIlxuLnNjb3JlLXdyaXRlLFxuYVtocmVmKj0ndG9fYXBwJ106bm90KC5zdWItaG9ub3IpOm5vdCguc3ViLWNvdmVyKSxcbmFbaHJlZio9J2RvdWJhbmFwcCddLFxuZGl2W2lkKj0nQkFJRFUnXSxcbmRpdltpZCo9J2dvb2dsZSddLFxuc2VjdGlvbiArIC5jZW50ZXIsXG4uYm90dG9tX2FkX2Rvd25sb2FkLFxuLnN1Yi12ZW5kb3IsXG4udG9fcGMsXG4uVGFsaW9uTmF2LXN0YXRpYyxcbi5zdWItZGV0YWlsIC5tYXJrLW1vdmllLFxuLnN1Yi1kZXRhaWwgLm1hcmstdHYsXG4uc3ViamVjdC1iYW5uZXIsXG4uYm90dG9tX2FkX2Rvd25sb2FkLFxuLmNvdmVyLWNvdW50LFxuI2dvb2dsZV9lc2YsXG4uYWRzYnlnb29nbGUsXG4uQWR2ZXJ0aXNlbWVudCxcbi5UYWxpb25OYXYtcHJpbWFyeSAubmF2LWJ0bnMuY2FuY2VsIHsiLmNvbmNhdChQdXJpZnlTdHlsZSwgJ31cblxuLnN1Yi1pbmZvIC5zdWItY292ZXIge1xuICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xufVxuXG4uVGFsaW9uTmF2LXByaW1hcnkge1xuICBwb3NpdGlvbjogcmVsYXRpdmUgIWltcG9ydGFudDtcbn1cblxuLnN1YmplY3QtY29tbWVudHMsXG4uc3ViamVjdC1yZXZpZXdzIHtcbiAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50O1xufVxuXG4uVGFsaW9uTmF2IC5UYWxpb25OYXYtcHJpbWFyeSAuc2VhcmNoLWJveCB7XG4gIHdpZHRoOiAyMjBweDtcbiAgZmxleDogMjIwcHggMCAwO1xuICBhbmltYXRpb246IG5vbmU7XG59XG5cbi5zdWItb3JpZ2luYWwtdGl0bGUge1xuICBwYWRkaW5nOiAwLjI1ZW0gMDtcbn1cblxuLl9WX3NpZ24ge1xuICBmb250LXNpemU6IDAuODVlbTtcbiAgb3BhY2l0eTogMC4xNTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nLWJvdHRvbTogMWVtO1xufVxuXG4uX1Zfc291cmNlLCAuc3ViLXNjb3JlICsgLnN1Yi1zY29yZSB7XG4gIG1hcmdpbi10b3A6IDEuNWVtICFpbXBvcnRhbnQ7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uX1Zfc291cmNlIC5zdWItc2NvcmUgLnN1Yi1jb250ZW50IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5fVl9zb3VyY2UgLnN1Yi1zY29yZSBhIHtcbiAgcGFkZGluZzogMC4yNWVtIDAuNWVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBtYXJnaW46IDAgMC4xNWVtO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwyNTUsMjU1LDAuMik7XG4gIGZvbnQtc2l6ZTogMS4wNWVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbiAgbWFyZ2luLXRvcDogMC41ZW07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgY29sb3I6ICNmZmU4Y2M7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjM5LCAyMzgsIDIzOCwgMC4wNSk7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbn1cblxuI1RhbGlvbk5hdiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbiNUYWxpb25OYXYgLmxvZ28ge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBmb250LXNpemU6IDFlbTtcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBjb2xvcjogI2RlZTJlNjtcbn1cblxuLnNlYXJjaC1ib3g6bm90KC5vbi1zZWFyY2gpIHtcbiAgb3BhY2l0eTogMC43O1xufVxuXG4jY2hhbm5lbF90YWdzIHtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cblxuLnN1YmplY3QtaGVhZGVyLXdyYXAgLnN1Yi1kZXRhaWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbn1cblxuI2NoYW5uZWxfdGFncyB7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59XG5cbmlucHV0W3R5cGU9InNlYXJjaCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uLFxuaW5wdXRbdHlwZT0ic2VhcmNoIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPSJzZWFyY2giXTo6LXdlYmtpdC1zZWFyY2gtcmVzdWx0cy1idXR0b24sXG5pbnB1dFt0eXBlPSJzZWFyY2giXTo6LXdlYmtpdC1zZWFyY2gtcmVzdWx0cy1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7XG59XG4nKSksIF8kKChmdW5jdGlvbigpIHsKICAgICAgICAkKCIubW92aWUtcmV2aWV3cyAuc2hvdy1hbGwiKS5hZnRlcignPGRpdiBjbGFzcz0iX1Zfc2lnbiI+PGEgaHJlZj0iaHR0cHM6Ly9naXRlZS5jb20vZWNydW9zL29vIj7osYbnk6PCt+WHgOWMliAnLmNvbmNhdChPT19TSUdOLCAiPC9hPjwvZGl2PiIpKSwgJCgic2VjdGlvbiArIC5jZW50ZXIiKS5lYWNoKChmdW5jdGlvbihuLCBlKSB7CiAgICAgICAgICAkKGUpLnJlbW92ZSgpCiAgICAgICAgfSkpLCAkKCIuc3ViamVjdC1oZWFkZXItd3JhcCIpLmFmdGVyKCQoIiNUYWxpb25OYXYiKSksICQoIiNUYWxpb25OYXYiKS5jc3MoImRpc3BsYXkiLCAiYmxvY2siKSwgJCgiI1RhbGlvbk5hdiAubG9nbyIpLmh0bWwoT09fU0lHTikuYXR0cigiaHJlZiIsICJodHRwczovL21vdmllLmRvdWJhbi5jb20vdGFnLyMvIiksICQoIi5zZWFyY2gtYm94IikucmVtb3ZlKCksICQoIi5UYWxpb25OYXYtcHJpbWFyeSAubG9nbyIpLmFmdGVyKCc8ZGl2IGNsYXNzPSJzZWFyY2gtYm94Ij48aW5wdXQgY2xhc3M9InNlYXJjaC1pbnB1dCIgdHlwZT0ic2VhcmNoIiBwbGFjZWhvbGRlcj0i5pCc57SiIj48L2Rpdj4nKSwgJCgiLnNlYXJjaC1pbnB1dCIpLm9uKCJmb2N1cyIsIChmdW5jdGlvbigpIHsKICAgICAgICAgICQodGhpcykucGFyZW50KCkuYWRkQ2xhc3MoIm9uLXNlYXJjaCIpCiAgICAgICAgfSkpLm9uKCJibHVyIiwgKGZ1bmN0aW9uKCkgewogICAgICAgICAgJCh0aGlzKS5wYXJlbnQoKS5yZW1vdmVDbGFzcygib24tc2VhcmNoIikKICAgICAgICB9KSksICQoIi5zZWFyY2gtaW5wdXQiKS5vbigia2V5dXAiLCAoZnVuY3Rpb24obikgewogICAgICAgICAgMTMgPT09IG4ua2V5Q29kZSAmJiAobi5wcmV2ZW50RGVmYXVsdCgpLCBsb2NhdGlvbi5ocmVmID0gIi9zZWFyY2gvP3F1ZXJ5PSIgKyBuLnRhcmdldC52YWx1ZSArICImdHlwZT1tb3ZpZSIpCiAgICAgICAgfSkpOwogICAgICAgIHZhciBuID0gcHVyaWZ5S2V5d29yZCgkKCIuc3ViLXRpdGxlIikudGV4dCgpLnRyaW0oKSk7CiAgICAgICAgMCA9PT0gJCgiLl9WX3NvdXJjZSIpLmxlbmd0aCAmJiAkKCIuc3ViamVjdC1oZWFkZXItd3JhcCIpLmFwcGVuZCgnPGRpdiBjbGFzcz0iX1Zfc291cmNlIHN1YmplY3QtbWFyayI+XG5cbjxkaXYgY2xhc3M9InN1Yi1zY29yZSI+XG4gIDxkaXYgY2xhc3M9InN1Yi10cmFkZW1hcmsiPlxuICDlnKjnur\/op4LnnItcbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9InN1Yi1jb250ZW50Ij5cbicuY29uY2F0KGdldFNlYXJjaFNvdXJjZXNIdG1sKG4sICExKSwgIlxuICA8L2Rpdj5cbjwvZGl2PlxuXG48L2Rpdj4iKSksIHNldFRpbWVvdXQoKGZ1bmN0aW9uKCkgewogICAgICAgICAgJCgiLnN1YmplY3QtaW50cm8gLmJkIHAiKS5jbGljaygpLCAkKCIuc3ViLWNvdmVyIikuYXR0cigiaHJlZiIsICIjIiksICQoIiNzdWJqZWN0LWhvbm9yLXJvb3QgYSIpLmF0dHIoImhyZWYiLCAiIyIpCiAgICAgICAgfSksIDFlMyk7CiAgICAgICAgdmFyIGUgPSAwLAogICAgICAgICAgdCA9IHNldEludGVydmFsKChmdW5jdGlvbigpIHsKICAgICAgICAgICAgJCgiYm9keSA+IGlucywgYm9keSA+IGlmcmFtZSwgLmFkc2J5Z29vZ2xlIikucmVtb3ZlKCksIGUrKyA+IDUgJiYgY2xlYXJJbnRlcnZhbCh0KQogICAgICAgICAgfSksIDUwMCk7CiAgICAgICAgISBmdW5jdGlvbiBuKCkgewogICAgICAgICAgdmFyIGUgPSAkKCIjc3ViamVjdC1oZWFkZXItY29udGFpbmVyIikuYXR0cigic3R5bGUiKTsKICAgICAgICAgIGlmIChlKSB7CiAgICAgICAgICAgIHZhciB0ID0gZS5tYXRjaCgvOlxzKihbXjtdKyk7Py8pWzFdLAogICAgICAgICAgICAgIGkgPSB0LnJlcGxhY2UoIikiLCAiLCAwKSIpOwogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgIGFkZFN0eWxlKCJcbi5zdWItY292ZXI6OmJlZm9yZSB7XG4gIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KGJvdHRvbSwgIi5jb25jYXQodCwgIiAwJSwgIikuY29uY2F0KGksICIgMTUlKSwgLXdlYmtpdC1saW5lYXItZ3JhZGllbnQocmlnaHQsICIpLmNvbmNhdCh0LCAiIDAlLCAiKS5jb25jYXQoaSwgIiAxNSUpLC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwgIikuY29uY2F0KHQsICIgMCUsICIpLmNvbmNhdChpLCAiIDE1JSksIC13ZWJraXQtbGluZWFyLWdyYWRpZW50KGxlZnQsICIpLmNvbmNhdCh0LCAiIDAlLCAiKS5jb25jYXQoaSwgJyAxNSUpO1xuICBjb250ZW50OiAiIjtcbiAgYm90dG9tOiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAxMDJweDtcbiAgaGVpZ2h0OiAxNDJweDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xufVxuJykpCiAgICAgICAgICAgIH0gY2F0Y2ggKG4pIHsKICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCJzeW5jQ292ZXJDb2xvcjoiLCBuKQogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2Ugc2V0VGltZW91dCgoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIG4oKQogICAgICAgICAgfSksIDEwMCkKICAgICAgICB9KCkKICAgICAgfSkpOwogICAgICBlbHNlIHsKICAgICAgICBpZiAoSXMoL21cLnR2XC5zb2h1XC5jb21cL3Bob25lX3BsYXlfZmlsbS4rdmlkPS8pKSByZXR1cm4gbG9jYXRpb24uaHJlZiA9IEhyZWYucmVwbGFjZSgicGhvbmVfcGxheV9maWxtIiwgInYiLmNvbmNhdChIcmVmLm1hdGNoKC92aWQ9KFxkKykvKVsxXSwgIi5zaHRtbCIpKTsKICAgICAgICBpZiAoaXNNb2JpbGUgJiYgSXMoL21vdmllXC5kb3ViYW5cLmNvbVwvdGFnXC8jLykpIHsKICAgICAgICAgIGxvZygi6LGG55OjwrfpgInlvbHop4YiKTsKICAgICAgICAgIHZhciBudW0gPSAzOwogICAgICAgICAgYWRkU3R5bGUocHJlZml4Q3NzKCJcbi5jYXRlZ29yeSB7XG4gIHdpZHRoOiAxMDAlO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBvdmVyZmxvdy14OiBhdXRvO1xufVxuXG4udGFncyB7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbn1cblxuLmNoZWNrYm94X19pbnB1dCB7XG4gIHZlcnRpY2FsLWFsaWduOiB0ZXh0LXRvcDtcbn1cblxuLnRhZy1uYXYge1xuICBtYXJnaW46IDAgYXV0bztcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuXG4udGFnLW5hdiAudGFicywgLnRhZy1uYXYgLmNoZWNrIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG59XG5cbi50YWctbmF2IC50YWJzIGEge1xuICBwYWRkaW5nOiA3LjVweCA1cHggNXB4O1xufVxuXG4udGFicyBhOm5vdCgudGFiLWNoZWNrZWQpIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RmZGZkZjtcbn1cblxuLnRhYnMgLnRhYi1jaGVja2VkIHtcbiAgYm9yZGVyOiAxcHggc29saWQgIzI1OGRjZCFpbXBvcnRhbnQ7XG59XG5cbi50YWItY2hlY2tlZDphZnRlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5jaGVja2JveCwgLnJhbmdlIHtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59XG5cbi5jaGVjayB7XG4gIGZsb2F0OiBub25lO1xuICBtYXJnaW4tdG9wOiA1cHg7XG59XG5cbi5saXN0LXdwLCAuaXRlbSAuY292ZXItd3Age1xuICBvdmVyZmxvdzogdW5zZXQ7XG59XG5cbmEgaW1nIHtcbiAgcGFkZGluZzogMnB4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICMyYjY4YzQgMCUsI2NmMmQ2ZSAxMDAlKTtcbn1cblxuYS5pdGVtIHtcbiAgd2lkdGg6ICIuY29uY2F0KHBhcnNlSW50KDEwMCAvIG51bSksICIlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbmEuaXRlbSBwIHtcbiAgcGFkZGluZy1yaWdodDogMDtcbn1cblxuYS5pdGVtIC5jb3Zlci13cCB7XG4gIGhlaWdodDogYXV0bztcbiAgcGFkZGluZzogMCAwLjVlbTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbmEuaXRlbSAuY292ZXItd3A6YWZ0ZXIsIC5wb3N0ZXI6YWZ0ZXIge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5hLml0ZW0gLnBpYyBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAiKS5jb25jYXQocGFyc2VJbnQoNCAqIHNjcmVlbldpZHRoIC8gMyAvIG51bSksICJweDtcbiAgbWF4LXdpZHRoOiAxNTBweDtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi50YWctbmF2IC5yYW5nZS1kcm9wZG93biB7XG4gIGxlZnQ6IDAgIWltcG9ydGFudDtcbiAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcbiAgcmlnaHQ6IDAgIWltcG9ydGFudDtcbiAgdG9wOiAtNGVtICFpbXBvcnRhbnQ7XG59XG5cbi5tb3JlIHtcbiAgbWFyZ2luOiAwIDFlbSAwLjVlbTtcbn1cblxuIiksICIub28iKSArICJcbmJvZHkgPiAqOm5vdCgub28pIHsiLmNvbmNhdChQdXJpZnlTdHlsZSwgIn1cblxuI2FwcCAuYXJ0aWNsZSwgLmFydGljbGUub28ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIHBhZGRpbmc6IDEwcHggNnB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMC44cztcbn1cblxuLmNhdGVnb3J5Ojotd2Via2l0LXNjcm9sbGJhciB7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIyMywgMjIzLCAyMjMsIDAuMjUpO1xufVxuXG4uY2F0ZWdvcnk6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMHB4IG5vbmUgI2ZmZmZmZjtcbiAgYm9yZGVyLXJhZGl1czogNTBweDtcbn1cblxuLmNhdGVnb3J5Ojotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAwIDIuNXB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDIuNXB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgYm9yZGVyLXJhZGl1czogMi41cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjIzLCAyMjMsIDIyMywgMC4yNSk7XG4gIG9wYWNpdHk6IDAuNztcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSBlYXNlLWluLW91dCAyMDBtcztcbn1cblxuLmNhdGVnb3J5Ojotd2Via2l0LXNjcm9sbGJhci10aHVtYjpob3ZlciB7XG4gIG9wYWNpdHk6IDE7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjIzLCAyMjMsIDIyMywgMC4yNSk7XG59XG5cbi5vby1zZWFyY2gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbn1cblxuLm9vLXNlYXJjaCAuaW5wIHtcbiAgaGVpZ2h0OiAzNHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGN1cnNvcjogdGV4dDtcbiAgd2lkdGg6IDkwJTtcbn1cblxuLm9vLXNlYXJjaCAuaW5wIGlucHV0IHtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgd2lkdGg6IDk2JTtcbiAgbWFyZ2luOiAwO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBoZWlnaHQ6IDMwcHg7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuLm9vLXNlYXJjaCBpbnB1dCB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cblxuLm9vLXNlYXJjaCAuaW5wLWJ0biB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDM3cHg7XG4gIGhlaWdodDogMzRweDtcbn1cblxuLm9vLXNlYXJjaCAuaW5wLWJ0biBpbnB1dCB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGZvbnQtc2l6ZTogMDtcbiAgcGFkZGluZzogMzVweCAwIDAgMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgY29sb3I6IHRyYW5zcGFyZW50O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5vby1zZWFyY2ggLmlucC1idG4gaW5wdXQ6Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xufVxuXG4ub28tc2VhcmNoIC5pbnAge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLy9pbWczLmRvdWJhbmlvLmNvbS9kYWUvYWNjb3VudHMvcmVzb3VyY2VzL2E0YTM4YTUvbW92aWUvYXNzZXRzL25hdl9tdl9iZy5wbmc\/cz0xKTtcbn1cblxuLm9vLXNlYXJjaCAuaW5wLWJ0biBpbnB1dCB7XG4gIGJhY2tncm91bmQ6IHVybCgvL2ltZzMuZG91YmFuaW8uY29tL2RhZS9hY2NvdW50cy9yZXNvdXJjZXMvYTRhMzhhNS9tb3ZpZS9hc3NldHMvbmF2X212X2JnLnBuZz9zPTEpIG5vLXJlcGVhdCAwIC00MHB4O1xufVxuIikpLCBfJCgoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICQoInRpdGxlIikuaHRtbCgi6YCJ5b2x6KeGIC0gb28ubW92aWUiKSwgJCgiI2FwcCAuYXJ0aWNsZSAudGFncyIpLmJlZm9yZSgnPGRpdiBjbGFzcz0ib28tc2VhcmNoIj5cbiAgPGRpdiBjbGFzcz0iaW5wIj48aW5wdXQgbmFtZT0iJy5jb25jYXQoT09fU0lHTiwgJyIgc2l6ZT0iMjIiIG1heGxlbmd0aD0iNjAiIHBsYWNlaG9sZGVyPSLmkJzntKLnlLXlvbHjgIHnlLXop4bliafjgIHnu7zoibrjgIHlvbHkuroiIHZhbHVlPSIiIGF1dG9jb21wbGV0ZT0ib2ZmIj48L2Rpdj5cbiAgPGRpdiBjbGFzcz0iaW5wLWJ0biI+PGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IuaQnOe0oiI+PC9kaXY+XG48L2Rpdj4nKSksICQoImJvZHkiKS5hcHBlbmQoJCgiI2FwcCAuYXJ0aWNsZSIpLmFkZENsYXNzKCJvbyIpKSwgJCgiLm9vLXNlYXJjaCBpbnB1dCIpLm9uKCJrZXl1cCIsIChmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgMTMgPT09IG4ua2V5Q29kZSAmJiAobi5wcmV2ZW50RGVmYXVsdCgpLCBsb2NhdGlvbi5ocmVmID0gImh0dHBzOi8vbS5kb3ViYW4uY29tL3NlYXJjaC8\/cXVlcnk9IiArIG4udGFyZ2V0LnZhbHVlICsgIiZ0eXBlPW1vdmllIikKICAgICAgICAgICAgfSkpLCAkKCIub28tc2VhcmNoIC5pbnAtYnRuIGlucHV0Iikub24oImNsaWNrIiwgKGZ1bmN0aW9uKG4pIHsKICAgICAgICAgICAgICBuLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgICAgdmFyIGUgPSAkKCIub28tc2VhcmNoIGlucHV0IikudmFsKCk7CiAgICAgICAgICAgICAgbG9jYXRpb24uaHJlZiA9ICJodHRwczovL20uZG91YmFuLmNvbS9zZWFyY2gvP3F1ZXJ5PSIgKyBlICsgIiZ0eXBlPW1vdmllIgogICAgICAgICAgICB9KSksICQoImEuaXRlbSIpLmVhY2goKGZ1bmN0aW9uKG4sIGUpIHsKICAgICAgICAgICAgICAkKGUpLmF0dHIoImhyZWYiLCAkKGUpLmF0dHIoImhyZWYiKS5yZXBsYWNlKCJtb3ZpZS5kb3ViYW4uY29tIiwgIm0uZG91YmFuLmNvbS9tb3ZpZSIpKS5yZW1vdmVBdHRyKCJ0YXJnZXQiKQogICAgICAgICAgICB9KSk7CiAgICAgICAgICAgIHZhciBuID0gITE7CgogICAgICAgICAgICBmdW5jdGlvbiBlKCkgewogICAgICAgICAgICAgICFuICYmICQod2luZG93KS5zY3JvbGxUb3AoKSArICQod2luZG93KS5oZWlnaHQoKSA+ICQoZG9jdW1lbnQpLmhlaWdodCgpIC0gNDAgJiYgKG4gPSAhMCwgc2V0VGltZW91dCgoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAkKHdpbmRvdykuc2Nyb2xsVG9wKCkgKyAkKHdpbmRvdykuaGVpZ2h0KCkgPiAkKGRvY3VtZW50KS5oZWlnaHQoKSAtIDQwICYmICgkKHdpbmRvdykudW5iaW5kKCJzY3JvbGwiKSwgJCgiLm1vcmUiKS5jbGljaygpKSwgbiA9ICExCiAgICAgICAgICAgICAgfSksIDEyMDApKQogICAgICAgICAgICB9CiAgICAgICAgICAgIHZhciB0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLmxpc3Qtd3AiKTsKICAgICAgICAgICAgbmV3IE11dGF0aW9uT2JzZXJ2ZXIoKGZ1bmN0aW9uKG4pIHsKICAgICAgICAgICAgICB2YXIgdCA9ICExLAogICAgICAgICAgICAgICAgaSA9ICEwLAogICAgICAgICAgICAgICAgbyA9ICExLAogICAgICAgICAgICAgICAgciA9IHZvaWQgMDsKICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgZm9yICh2YXIgYSwgbCA9IG5bU3ltYm9sLml0ZXJhdG9yXSgpOyAhKGkgPSAoYSA9IGwubmV4dCgpKS5kb25lKTsgaSA9ICEwKSB7CiAgICAgICAgICAgICAgICAgIHZhciBzID0gYS52YWx1ZTsKICAgICAgICAgICAgICAgICAgImNoaWxkTGlzdCIgPT0gcy50eXBlICYmICh0ID0gITAsIHMuYWRkZWROb2Rlcy5mb3JFYWNoKChmdW5jdGlvbihuKSB7CiAgICAgICAgICAgICAgICAgICAgbi5jbGFzc0xpc3QuY29udGFpbnMoIml0ZW0iKSAmJiAobi5zZXRBdHRyaWJ1dGUoImhyZWYiLCBuLmdldEF0dHJpYnV0ZSgiaHJlZiIpLnJlcGxhY2UoIm1vdmllLmRvdWJhbi5jb20iLCAibS5kb3ViYW4uY29tL21vdmllIikpLCBuLnJlbW92ZUF0dHJpYnV0ZSgidGFyZ2V0IikpCiAgICAgICAgICAgICAgICAgIH0pKSksIHQgJiYgc2V0VGltZW91dCgoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgJCh3aW5kb3cpLnNjcm9sbChlKQogICAgICAgICAgICAgICAgICB9KSwgMTUwMCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9IGNhdGNoIChuKSB7CiAgICAgICAgICAgICAgICBvID0gITAsIHIgPSBuCiAgICAgICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgIGkgfHwgbnVsbCA9PSBsLnJldHVybiB8fCBsLnJldHVybigpCiAgICAgICAgICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgICAgICAgICBpZiAobykgdGhyb3cgcgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkpLm9ic2VydmUodCwgewogICAgICAgICAgICAgIGF0dHJpYnV0ZXM6ICEwLAogICAgICAgICAgICAgIGNoaWxkTGlzdDogITAKICAgICAgICAgICAgfSkKICAgICAgICAgIH0pKQogICAgICAgIH0gZWxzZSBJcygvXHcrOjEyMzR8ZWNydW9zXC5naXRlZVwuaW9cL29uZS8pID8gKGxvZygiT25lwrfkuLvpobUiKSwgXyQoKGZ1bmN0aW9uKCkgewogICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oIk9uZS5wbHVnaW4udmVyc2lvbiIsIFZFUlNJT04pCiAgICAgICAgfSkpKSA6IElzKC9cLmJpbGliaWxpXC5jb21cL2Jhbmd1bWlcL3BsYXlcLy8pICYmIChsb2coIuWTlOWTqeWTlOWTqcK35b2x6KeG5pKt5pS+6aG1IiksIF8kKChmdW5jdGlvbigpIHsKICAgICAgICAgIHZhciBuID0gMCwKICAgICAgICAgICAgZSA9IHNldEludGVydmFsKChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICBpZiAoJCgiLmVwLWluZm8taW1hZ2UgaW1nLCAubWVkaWEtY292ZXIgaW1nIikubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgdmFyIHQgPSAkKCIubWVkaWEtdGl0bGUsIC5lcC1pbmZvLXRpdGxlIikuZXEoMCkudGV4dCgpOwogICAgICAgICAgICAgICAgdCAmJiAoY2xlYXJJbnRlcnZhbChlKSwgaW5zZXJ0U2VhcmNoQWRkb24odCwgIi5tZWRpYS13cmFwcGVyLCAuZXAtbGlzdC1wcmUtd3JhcHBlciIpKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBuKysgPiA1MCAmJiBjbGVhckludGVydmFsKGUpCiAgICAgICAgICAgIH0pLCAyMDApCiAgICAgICAgfSkpKQogICAgICB9CiAgICAgIG1ha2VCZXR0ZXJBZGRvbnMoKSwgY2FsbGJhY2tXaGVuRG9uZSgpLCBJcygvbVwudlwucXFcLmNvbS8pICYmIHVybERldGVjdG9yKChmdW5jdGlvbigpIHsKICAgICAgICBpZiAoSXMoL3ZcLnFxXC5jb21cLyhjb3ZlcnxwbGF5fHhcL2NvdmVyfHhcL3BhZ2V8eFwvcGxheXx4XC9tXC9jb3Zlcnx4XC9tXC9wYWdlfHhcL21cL3BsYXkpLykpIHZhciBuID0gMCwKICAgICAgICAgIGUgPSAhMSwKICAgICAgICAgIHQgPSBzZXRJbnRlcnZhbCgoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIGUgfHwgKGUgPSAhMCwgbWFrZUJldHRlckFkZG9ucygpLCBuKysgPiA0MCB8fCAkKCIub28tdmlwIikubGVuZ3RoID4gMCA\/IGNsZWFySW50ZXJ2YWwodCkgOiBlID0gITEpCiAgICAgICAgICB9KSwgMjUwKQogICAgICB9KSksIF8kKChmdW5jdGlvbigpIHsKICAgICAgICAkKCIjYTEsIC5kcGxheWVyIikubGVuZ3RoID4gMCAmJiBhZGRTdHlsZSgiXG5ib2R5OmFmdGVyLFxuI2ExIH4gc2NyaXB0IH4gZGl2LFxuLmRwbGF5ZXIgPiAqW2lkXj1hZF1cbnsiLmNvbmNhdChQdXJpZnlTdHlsZSwgIn1cbiIpKQogICAgICB9KSkKICAgIH0KICB9CgogIGZ1bmN0aW9uIFJldmVyc2UobikgewogICAgdmFyIGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiB2b2lkIDAgIT09IGFyZ3VtZW50c1sxXSA\/IGFyZ3VtZW50c1sxXSA6ICIiOwogICAgcmV0dXJuIG4uc3BsaXQoIiIpLnJldmVyc2UoKS5qb2luKGUpCiAgfQoKICBmdW5jdGlvbiBSUmV2ZXJzZShuKSB7CiAgICB2YXIgZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIHZvaWQgMCAhPT0gYXJndW1lbnRzWzFdID8gYXJndW1lbnRzWzFdIDogIiI7CiAgICByZXR1cm4gbi5zcGxpdChlKS5yZXZlcnNlKCkuam9pbigiIikKICB9CgogIGZ1bmN0aW9uIHJhbmRvbUludChuLCBlKSB7CiAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKGUgLSBuICsgMSkgKyBuKQogIH0KCiAgZnVuY3Rpb24gQ2Flc2FyRW5jcnlwdChuKSB7CiAgICB2YXIgZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIHZvaWQgMCAhPT0gYXJndW1lbnRzWzFdID8gYXJndW1lbnRzWzFdIDogQ2Flc2FyU2hpZnQsCiAgICAgIHQgPSBuLnNwbGl0KCIiKS5yZXZlcnNlKCk7CiAgICByZXR1cm4gdC5tYXAoKGZ1bmN0aW9uKG4pIHsKICAgICAgcmV0dXJuIGNhZXNhcihuLCBlKQogICAgfSkpLmpvaW4oIiIpCiAgfQoKICBmdW5jdGlvbiBDYWVzYXJEZWNyeXB0KG4pIHsKICAgIHZhciBlID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgdm9pZCAwICE9PSBhcmd1bWVudHNbMV0gPyBhcmd1bWVudHNbMV0gOiBDYWVzYXJTaGlmdCwKICAgICAgdCA9IG4uc3BsaXQoIiIpLnJldmVyc2UoKTsKICAgIHJldHVybiB0Lm1hcCgoZnVuY3Rpb24obikgewogICAgICByZXR1cm4gY2Flc2FyRGVjKG4sIGUpCiAgICB9KSkuam9pbigiIikKICB9CgogIGZ1bmN0aW9uIGxvZygpIHsKICAgIGlmIChERUJVRykgewogICAgICB2YXIgbiA9IFtdOwogICAgICBuLnB1c2goUExVR0lOX0lEICsgIiAgIik7CiAgICAgIGZvciAodmFyIGUgPSAwOyBlIDwgYXJndW1lbnRzLmxlbmd0aDsgZSsrKSBuLnB1c2goYXJndW1lbnRzW2VdKTsKICAgICAgY29uc29sZS5sb2cuYXBwbHkoY29uc29sZSwgbikKICAgIH0KICB9CgogIGZ1bmN0aW9uIF8kKG4pIHsKICAgICQoKGZ1bmN0aW9uKCkgewogICAgICB0cnkgewogICAgICAgIG4oKQogICAgICB9IGNhdGNoIChuKSB7CiAgICAgICAgY29uc29sZS5lcnJvcigib28ubW92aWU6ICIgKyBuKQogICAgICB9CiAgICB9KSkKICB9CgogIGZ1bmN0aW9uIGdldEtleXdvcmRGcm9tVXJsKG4sIGUpIHsKICAgIHZhciB0ID0gKGUgfHwgbG9jYXRpb24uaHJlZikubWF0Y2gobiB8fCBDb21tb25TZWFyY2hLZXl3b3JkUmVnZXgpOwogICAgcmV0dXJuIHQgPyBEKChuID8gdFsxXSB8fCB0WzJdIDogdFsyXSB8fCB0WzRdKSB8fCAiIikgOiAiIgogIH0KCiAgZnVuY3Rpb24gcHVyaWZ5S2V5d29yZChuKSB7CiAgICByZXR1cm4gKFB1cmlmeUtleXdvcmRSZWdleCA\/IG4ucmVwbGFjZShQdXJpZnlLZXl3b3JkUmVnZXgsICIiKSA6IG4pLnJlcGxhY2UoL1xzKjpccyokLywgIiIpLnRyaW0oKQogIH0KCiAgZnVuY3Rpb24gcHJlZml4Q3NzKG4sIGUpIHsKICAgIHZhciB0LCBpLCBvLCByLCBhID0gZS5sZW5ndGg7CiAgICBlICs9ICIgIiwgbiA9IChuID0gKG4gPSBuLnJlcGxhY2UoL1wvXCooPzooPyFcKlwvKVtcc1xTXSkqXCpcL3xbXHJcblx0XSsvZywgIiIpKS5yZXBsYWNlKC99KFxzKilAL2csICJ9QCIpKS5yZXBsYWNlKC99KFxzKil9L2csICJ9fSIpOwogICAgZm9yICh2YXIgbCA9IDA7IGwgPCBuLmxlbmd0aCAtIDI7IGwrKykgdCA9IG5bbF0sIGkgPSBuW2wgKyAxXSwgIkAiID09PSB0ICYmIChvID0gITApLCBvIHx8ICJ7IiAhPT0gdCB8fCAociA9ICEwKSwgciAmJiAifSIgPT09IHQgJiYgKHIgPSAhMSksIHIgfHwgIkAiID09PSBpIHx8ICJ9IiA9PT0gaSB8fCAifSIgIT09IHQgJiYgIiwiICE9PSB0ICYmICgieyIgIT09IHQgJiYgIjsiICE9PSB0IHx8ICFvKSB8fCAobiA9IG4uc2xpY2UoMCwgbCArIDEpICsgZSArIG4uc2xpY2UobCArIDEpLCBsICs9IGEsIG8gPSAhMSk7CiAgICByZXR1cm4gMCAhPT0gbi5pbmRleE9mKGUpICYmIDAgIT09IG4uaW5kZXhPZigiQCIpICYmIChuID0gZSArIG4pLCBuCiAgfQoKICBmdW5jdGlvbiBhZGRTdHlsZShuLCBlKSB7CiAgICBlICYmIChuID0gcHJlZml4Q3NzKG4sIGUpKSwgbiA9IG4ucmVwbGFjZSgvXG4rXHMqL2csICIgIik7CiAgICB2YXIgdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInN0eWxlIik7CiAgICB0LnR5cGUgPSAidGV4dC9jc3MiLCB0LnN0eWxlU2hlZXQgPyB0LnN0eWxlU2hlZXQuY3NzVGV4dCA9IG4gOiB0LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKG4pKSwgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImhlYWQiKVswXS5hcHBlbmRDaGlsZCh0KQogIH0KCiAgZnVuY3Rpb24gZml4VXJsKG4pIHsKICAgIHJldHVybiBuLnJlcGxhY2UoL1tcPyNdLisvZywgIiIpCiAgfQoKICBmdW5jdGlvbiBmaXhWaXBVcmwobikgewogICAgdmFyIGUgPSBCRVRURVJfQURET05TLmZpbmQoKGZ1bmN0aW9uKGUpIHsKICAgICAgcmV0dXJuIGUuZml4VXJsICYmIGUubWF0Y2gudGVzdChuKQogICAgfSkpOwogICAgcmV0dXJuIGUgPyAhMCA9PT0gZS5maXhVcmwgPyBmaXhVcmwobikgOiBlLmZpeFVybChuKSA6IG4KICB9CgogIGZ1bmN0aW9uIHBhcnNlT29VcmwobiwgZSkgewogICAgdmFyIHQsIGksIG8gPSBuLnRyaW0oKS5zcGxpdCgvW1xzQF0rLyksCiAgICAgIHIgPSBvLmZpbHRlcigoZnVuY3Rpb24obikgewogICAgICAgIHJldHVybiAvaHR0cHM\/OlwvXC8vLnRlc3QobikKICAgICAgfSkpOwogICAgbyA9IG8uZmlsdGVyKChmdW5jdGlvbihuKSB7CiAgICAgIHJldHVybiAhL2h0dHBzPzpcL1wvLy50ZXN0KG4pCiAgICB9KSksIHIuZm9yRWFjaCgoZnVuY3Rpb24obikgewogICAgICAvXC9cL21cLnxcL21cL3xcL1wvbXNvdS8udGVzdChuKSA\/IHQgPSBuIDogaSA9IG4KICAgIH0pKTsKICAgIHZhciBhID0gKGlzTW9iaWxlID8gdCA6IGkpIHx8IHJbMF07CiAgICBlICYmIChhID0gdG9TZWFyY2hVcmwoYSwgZSkpOwogICAgdmFyIGwgPSBvLmxlbmd0aCA+IDAgPyBvLmpvaW4oIiAiKSA6IGEubWF0Y2goL1wvXC8oLitcLik\/KFteXC9dKylcLlx3K1wvLylbMl0ucmVwbGFjZSgvXihcdykvLCAoZnVuY3Rpb24obikgewogICAgICByZXR1cm4gbi50b1VwcGVyQ2FzZSgpCiAgICB9KSk7CiAgICByZXR1cm4gewogICAgICB1cmw6IGEsCiAgICAgIG5hbWU6IGwKICAgIH0KICB9CgogIGZ1bmN0aW9uIHRvU2VhcmNoVXJsKG4sIGUpIHsKICAgIHJldHVybiBuLmluY2x1ZGVzKCIqKiIpID8gbi5yZXBsYWNlKCIqKiIsIGUpIDogL21vdmllXC5kb3ViYW5cLmNvbVwvdGFnLy50ZXN0KG4pID8gbiA6IG4gKyBlCiAgfQoKICBmdW5jdGlvbiBlbnN1cmVBcnJheShuKSB7CiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShuKSA\/IG4gOiBuLnRyaW0oKS5zcGxpdCgvW1xuXHNdKlxuK1tcblxzXSovKQogIH0KCiAgZnVuY3Rpb24gdG9VcmxSZWdleChuKSB7CiAgICByZXR1cm4gbmV3IFJlZ0V4cChuLm1hcCgoZnVuY3Rpb24obikgewogICAgICByZXR1cm4gbi5yZXBsYWNlKC8uK1wvXC98XC8uKy9nLCAiIikucmVwbGFjZSgvXC4vZywgIlxcLiIpCiAgICB9KSkuam9pbigifCIpKQogIH0KCiAgZnVuY3Rpb24gcGF1c2VQbGF5KCkgewogICAgdHJ5IHsKICAgICAgJCgidmlkZW8sIGF1ZGlvIikuZWFjaCgoZnVuY3Rpb24obiwgZSkgewogICAgICAgIGUucGF1c2UoKSwgZS5tdXRlZCA9ICJtdXRlZCIsICQoZSkucmVtb3ZlKCkKICAgICAgfSkpCiAgICB9IGNhdGNoIChuKSB7CiAgICAgIGNvbnNvbGUuZXJyb3IoIm9vLm1vdmllIHBsYXk6ICIgKyBuKQogICAgfQogIH0KCiAgZnVuY3Rpb24gc21hcnRDb2xsYXBzZShuKSB7CiAgICBsb2coInNtYXJ0Q29sbGFwc2U6Iiwgbik7CiAgICB2YXIgZSA9IDAsCiAgICAgIHQgPSAhMTsKICAgICQobikuZWFjaCgoZnVuY3Rpb24obiwgaSkgewogICAgICBuIDwgY29sbGFwc2VOdW0gPyBuID49IGNvbGxhcHNlTnVtIC0gMSAmJiAoZSA9ICQoaSkucG9zaXRpb24oKS50b3ApIDogdCB8fCBlICE9PSAkKGkpLnBvc2l0aW9uKCkudG9wID8gKHQgPSAhMCwgJChpKS5wcmV2KCIiKS5hZGRDbGFzcygib28taGlkZSIpKSA6ICF0ICYmICQoaSkuaGFzQ2xhc3MoIm9vLWNvbGxhcHNlIikgJiYgJChpKS5hZGRDbGFzcygib28taGlkZSIpCiAgICB9KSkKICB9CgogIGZ1bmN0aW9uIGdldFZpcFRhcmdldFVybCgpIHsKICAgIHZhciBuID0gSXMoaXNWaXBVcmxSZWdleCkgPyBsb2NhdGlvbi5ocmVmLnJlcGxhY2UoLy4rPWh0dHAvLCAiaHR0cCIpIDogbG9jYXRpb24uaHJlZi5yZXBsYWNlKC8mP1x3Kz1odHRwW14mXSsvLCAiIikucmVwbGFjZSgvLitodHRwLywgImh0dHAiKTsKICAgIHJldHVybiBuID0gZGVjb2RlVVJJKGZpeFZpcFVybChuKSB8fCBuKQogIH0KCiAgZnVuY3Rpb24gaXNWYWxpZFZpZGVvVXJsKG4pIHsKICAgIHJldHVybiBpc1ZpZGVvVXJsUmVnZXgudGVzdChuKSAmJiAhaXNJbnZhbGlkU25pZmZVcmxSZWdleC50ZXN0KG4pICYmICghaXNCYWRWaWRlb1VybFJlZ2V4LnRlc3QobikgfHwgRGF0ZS5ub3coKSAtIHNuaWZmVGltZXN0YW1wID4gOGUzKQogIH0KCiAgZnVuY3Rpb24gc25pZmZTdGFydChuKSB7CiAgICBpc1NuaWZmaW5nID0gITAsIHNuaWZmVGltZXN0YW1wID0gRGF0ZS5ub3coKSwgbiAmJiAoJCgiLm9vLXZpcC1saXN0IikuYWRkQ2xhc3MoImlzLXNuaWZmaW5nIiksICQoIi5vby1ub3RpZmljYXRpb24iKS5yZW1vdmUoKSkKICB9CgogIGZ1bmN0aW9uIHNuaWZmRG9uZSgpIHsKICAgIGlzU25pZmZpbmcgPSAhMSwgJCgiLm9vLXZpcC1saXN0IikucmVtb3ZlQ2xhc3MoImlzLXNuaWZmaW5nIikKICB9CgogIGZ1bmN0aW9uIHNuaWZmU3VjY2VzcyhuKSB7CiAgICBsb2coIuKclCBzbmlmZlN1Y2Nlc3M6IiwgbiksIHNuaWZmRG9uZSgpLCAkKCIub28taWZyYW1lcyIpLmVtcHR5KCksICQoIi5vby1ub3RpZmljYXRpb24iKS5yZW1vdmUoKSwgJCgiLm9vLXZpcC1saXN0IikuYWZ0ZXIoJzxkaXYgY2xhc3M9Im9vLW5vdGlmaWNhdGlvbiBvby1zdWNjZXNzIj7op6PmnpDmiJDlip\/vvIzll4XmjqLliLDmkq3mlL7lnLDlnYDvvJo8YnI+PGNvZGU+Jy5jb25jYXQobiwgIjwvY29kZT48L2Rpdj4iKSkKICB9CgogIGZ1bmN0aW9uIHNuaWZmRmFpbChuKSB7CiAgICBsb2coIsOXIHNuaWZmRmFpbCIpLCBzbmlmZkRvbmUoKSwgJCgiLm9vLW5vdGlmaWNhdGlvbiIpLnJlbW92ZSgpLCAkKCIub28tdmlwLWxpc3QiKS5hZnRlcignPGRpdiBjbGFzcz0ib28tbm90aWZpY2F0aW9uIG9vLXdhcm5pbmciPuino+aekOWksei0pe+8jCcuY29uY2F0KG4gPyAiIiA6ICLlj6\/ku6XlsJ3or5XlhbblroPop6PmnpDmupDvvIzkuZ8iLCAi5Y+v5Lul6ICD6JmR5Zyo5YW25a6D5q2j54mI572R56uZ5LiK6Kej5p6Q77yM5oiW5L2\/55So5pCc57Si5rqQ5pCc57Si5Zyo57q\/6KeC55yLPC9kaXY+IikpCiAgfQoKICBmdW5jdGlvbiBoaWtlclNuaWZmKHNuaWZmVGlja0lkKSB7CiAgICBpZiAoc25pZmZUaWNrSWQgPT09IHNuaWZmVGljaykgewogICAgICBsb2coImhpa2VyU25pZmYiKTsKICAgICAgdmFyIHJlc291cmNlID0gZXZhbCh3aW5kb3cuZnlfYnJpZGdlX2FwcC5nZXROZXR3b3JrUmVjb3JkcygpKTsKICAgICAgaWYgKHJlc291cmNlID0gcmVzb3VyY2UuZmlsdGVyKChmdW5jdGlvbihuKSB7CiAgICAgICAgICByZXR1cm4gbi50aW1lc3RhbXAgPiBzbmlmZlRpbWVzdGFtcCAmJiAvdmlkZW8vaS50ZXN0KG4ubWVkaWFUeXBlLm5hbWUpICYmIGlzVmFsaWRWaWRlb1VybChuLnVybCkKICAgICAgICB9KSksIERFQlVHKSB7CiAgICAgICAgdmFyIGxvZ0luZm8gPSAiQ291bnQ6ICIuY29uY2F0KHJlc291cmNlLmxlbmd0aCwgIiAoIikuY29uY2F0KChuZXcgRGF0ZSkudG9JU09TdHJpbmcoKSwgIik8YnI+IikgKyByZXNvdXJjZS5tYXAoKGZ1bmN0aW9uKG4sIGUpIHsKICAgICAgICAgIHJldHVybiAiIi5jb25jYXQoZSArIDEsICIgLSAiKS5jb25jYXQobi5tZWRpYVR5cGUubmFtZSwgIigiKS5jb25jYXQobi5tZWRpYVR5cGUudHlwZSwgIikgLSAiKS5jb25jYXQobi51cmwpCiAgICAgICAgfSkpLmpvaW4oIjxicj4iKTsKICAgICAgICAkKCIub28tc291cmNlcyIpLmh0bWwobG9nSW5mbykKICAgICAgfQogICAgICBpZiAoMCAhPT0gcmVzb3VyY2UubGVuZ3RoKSB7CiAgICAgICAgaWYgKGlzU25pZmZpbmcpIHsKICAgICAgICAgIHZhciByZXNvdXJjZVVybCA9IHJlc291cmNlWzBdLnVybDsKICAgICAgICAgIHNuaWZmU3VjY2VzcyhyZXNvdXJjZVVybCksIHdpbmRvdy5meV9icmlkZ2VfYXBwLnBsYXlWaWRlbyhyZXNvdXJjZVVybCkKICAgICAgICB9CiAgICAgIH0gZWxzZSBpc1NuaWZmaW5nICYmIHNldFRpbWVvdXQoKGZ1bmN0aW9uKCkgewogICAgICAgIGhpa2VyU25pZmYoc25pZmZUaWNrSWQpCiAgICAgIH0pLCAxMDApCiAgICB9CiAgfQoKICBmdW5jdGlvbiBtaXhpYVNuaWZmKG4pIHsKICAgIGlmIChuID09PSBzbmlmZlRpY2spIHsKICAgICAgbG9nKCJtaXhpYVNuaWZmIik7CiAgICAgIHZhciBlID0gW10sCiAgICAgICAgdCA9IHdpbmRvdy5teF9icm93c2VyX29iai5nZXR3ZWJsb2dzKCJodHRwIik7CiAgICAgIGlmICgiZXJyb3IiICE9PSB0ICYmIChlID0gKGUgPSB0LnRyaW0oKS5zcGxpdCgvXHMqXG5bXG5cc10qLykpLmZpbHRlcigoZnVuY3Rpb24obikgewogICAgICAgICAgcmV0dXJuIGlzVmFsaWRWaWRlb1VybChuKQogICAgICAgIH0pKSksIERFQlVHKSB7CiAgICAgICAgdmFyIGkgPSAiQ291bnQ6ICIuY29uY2F0KGUubGVuZ3RoLCAiICgiKS5jb25jYXQoKG5ldyBEYXRlKS50b0lTT1N0cmluZygpLCAiKTxicj4iKSArIGUubWFwKChmdW5jdGlvbihuLCBlKSB7CiAgICAgICAgICByZXR1cm4gIiIuY29uY2F0KGUgKyAxLCAiIC0gIikuY29uY2F0KG4pCiAgICAgICAgfSkpLmpvaW4oIjxicj4iKTsKICAgICAgICAkKCIub28tc291cmNlcyIpLmh0bWwoaSkKICAgICAgfQogICAgICBpZiAoMCAhPT0gZS5sZW5ndGgpIHsKICAgICAgICBpZiAoaXNTbmlmZmluZykgewogICAgICAgICAgdmFyIG8gPSBlWzBdOwogICAgICAgICAgc25pZmZTdWNjZXNzKG8pLCB3aW5kb3cubXhfYnJvd3Nlcl9vYmoucGxheXZpZGVvKG8sIG8pCiAgICAgICAgfQogICAgICB9IGVsc2UgaXNTbmlmZmluZyAmJiBzZXRUaW1lb3V0KChmdW5jdGlvbigpIHsKICAgICAgICBtaXhpYVNuaWZmKG4pCiAgICAgIH0pLCAxMDApCiAgICB9CiAgfQoKICBmdW5jdGlvbiBzbmlmZihuKSB7CiAgICB2YXIgZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIHZvaWQgMCAhPT0gYXJndW1lbnRzWzFdICYmIGFyZ3VtZW50c1sxXTsKICAgIGlmIChsb2coInNuaWZmOiIsIHBsYXllclRpdGxlKSwgc25pZmZTdGFydChlKSwgaXNBbGxvd0hpa2VyU25pZmYpIGhpa2VyU25pZmYobik7CiAgICBlbHNlIHsKICAgICAgaWYgKCFpc0FsbG93TWl4aWFTbmlmZikgcmV0dXJuIHZvaWQgc25pZmZEb25lKCk7CiAgICAgIG1peGlhU25pZmYobikKICAgIH0KICAgIGUgPyBzbmlmZlZpcCgpIDogc2V0VGltZW91dCgoZnVuY3Rpb24oKSB7CiAgICAgIG4gPT09IHNuaWZmVGljayAmJiBzbmlmZkZhaWwoZSkKICAgIH0pLCAxM2UzKQogIH0KCiAgZnVuY3Rpb24gc25pZmZWaXAoKSB7CiAgICB2YXIgbiA9IGdldFZpcFBsYXllcigpOwogICAgbi5sZW5ndGggPiAwICYmIG4uZW1wdHkoKS5hcHBlbmQoJzxkaXYgY2xhc3M9Im9vLXBsYXllci1ib3giPjxkaXYgY2xhc3M9Im9vLXBsYXllci1iZyI+PC9kaXY+PC9kaXY+JyksIHBhdXNlUGxheSgpLCAwID09PSAkKCIub28taWZyYW1lcyIpLmxlbmd0aCAmJiAkKCJib2R5IikuYXBwZW5kKCc8ZGl2IGNsYXNzPSJvby1pZnJhbWVzIj48L2Rpdj4nKSwgZ29TbmlmZigpCiAgfQoKICBmdW5jdGlvbiBnb1NuaWZmKCkgewogICAgdmFyIG4gPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiB2b2lkIDAgIT09IGFyZ3VtZW50c1swXSA\/IGFyZ3VtZW50c1swXSA6IDA7CiAgICBpZiAoaXNTbmlmZmluZykgewogICAgICB2YXIgZSA9IFZJUF9VUkxTW25dOwogICAgICBpZiAobG9nKCLjgJAiLmNvbmNhdChuLCAi44CRZ29TbmlmZjoiKSwgZSksIGUpIHsKICAgICAgICB2YXIgdCA9IGdldFZpcFRhcmdldFVybCgpLAogICAgICAgICAgaSA9IGUudXJsICsgdDsKICAgICAgICBsb2coInNuaWZmOiAiICsgaSksICQoIi5vby1pZnJhbWVzIikuYXBwZW5kKCc8aWZyYW1lIHNyYz0iJy5jb25jYXQoaSwgJyI+PC9pZnJhbWU+JykpLCBzZXRUaW1lb3V0KChmdW5jdGlvbigpIHsKICAgICAgICAgIGxvZygicmVtb3ZlIGlmcmFtZSIpLCAkKCIub28taWZyYW1lcyA+IGlmcmFtZSIpLmVxKDApLnJlbW92ZSgpLCBuID09PSBWSVBfVVJMUy5sZW5ndGggJiYgc25pZmZGYWlsKCEwKQogICAgICAgIH0pLCAxZTQpLCBzZXRUaW1lb3V0KChmdW5jdGlvbigpIHsKICAgICAgICAgIGdvU25pZmYobiArIDEpCiAgICAgICAgfSksIG4gPCA1ID8gNTAgOiBNYXRoLm1pbigxMDAgKyA1MCAqIG4sIDFlMykpCiAgICAgIH0KICAgIH0KICB9CgogIGZ1bmN0aW9uIGdldFZpcFBsYXllcigpIHsKICAgIHZhciBuID0gJChQbGF5ZXJTZWxlY3RvcikuZXEoMCk7CiAgICByZXR1cm4gMCA9PT0gbi5sZW5ndGggJiYgKG4gPSAkKCIjcGxheWVyLCAucGxheWVyIikuZXEoMCkpLCBuCiAgfQoKICBmdW5jdGlvbiBpbnNlcnRWaXBTb3VyY2UobikgewogICAgdmFyIGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiB2b2lkIDAgIT09IGFyZ3VtZW50c1sxXSA\/IGFyZ3VtZW50c1sxXSA6ICJhZnRlciIsCiAgICAgIHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiB2b2lkIDAgIT09IGFyZ3VtZW50c1syXSA\/IGFyZ3VtZW50c1syXSA6IDA7CiAgICBpZiAoISgkKCIub28tdmlwIikubGVuZ3RoID4gMCB8fCB0ID4gMjApKSB7CiAgICAgIHZhciBpID0gJChuKTsKICAgICAgaWYgKDAgIT09IGkubGVuZ3RoKSB7CiAgICAgICAgbG9nKCJpbnNlcnRWaXBTb3VyY2UiKSwgYWRkU3R5bGUoIlxuLm9vLXZpcCB7XG4gIHBhZGRpbmctYm90dG9tOiAwLjVlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICB3aWR0aDogMTAwJTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLm9vLXZpcCArIC5vby12aXAsIC5vby1pZnJhbWVzIHsiLmNvbmNhdChQdXJpZnlTdHlsZSwgIn1cblxuLm9vLWlmcmFtZXMgPiBpZnJhbWUge1xuICBtYXgtd2lkdGg6IDMzLjMlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5vby12aXAtcGFuZWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDEwcHggMTBweCAwO1xuICBmb250LXNpemU6IDE1cHg7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ub28tdmlwLXBhbmVsLmlzLXNldHRpbmcge1xuICBwYWRkaW5nLWJvdHRvbTogMC41ZW07XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDczLCA4MCwgODcsIDAuMTUpO1xuICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiYSg3MywgODAsIDg3LCAwLjE1KTtcbiAgZm9udC1zaXplOiAwLjk1ZW07XG4gIG9wYWNpdHk6IDAuODtcbn1cblxuLm9vLXZpcC1wYW5lbC5pcy1zZXR0aW5nIGEge1xuICBjb2xvcjogIzFjN2VkNjtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtYXJnaW4tcmlnaHQ6IDFlbTtcbn1cblxuLm9vLXZpcC1wYW5lbC5pcy1zZXR0aW5nIC5vby1uYXYtbGlua3Mge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5vby12aXAtcGFuZWwuaXMtc2V0dGluZzpub3QoLmlzLW9wZW4pIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLm9vLXZpcC10aXRsZSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogIzI1Nzk0MjtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5vby12aXAtc21hbGwge1xuICBmb250LXNpemU6IDAuNzVlbTtcbiAgbWFyZ2luOiAwIDEwcHg7XG4gIGNvbG9yOiAjY2VkNGRhO1xufVxuXG4ub28tdmlwLXRpdGxlLCAub28tdmlwLXNpZ24ge1xuICBwYWRkaW5nOiAwLjVlbTtcbn1cblxuLm9vLXZpcC10aXRsZS10ZXh0LCAub28tdmlwLXNpZ24ge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5vby12aXAtcGFuZWwsIC5vby12aXAtbGlzdCB7XG4gIGhlaWdodDogYXV0byAhaW1wb3J0YW50O1xufVxuXG4ub28tdmlwLXNpZ24ge1xuICBvcGFjaXR5OiAwLjI1O1xuICBtYXJnaW4tcmlnaHQ6IDFlbTtcbiAgbWluLXdpZHRoOiA1ZW07XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICBhbmltYXRpb246IG9vLWNvbG9yLWNoYW5nZS1vcGFjaXR5IDVzIG5vcm1hbCBpbmZpbml0ZSBlYXNlLWluLW91dDtcbn1cblxuQGtleWZyYW1lcyBvby1jb2xvci1jaGFuZ2Utb3BhY2l0eSB7XG4gIDAlICAgeyBvcGFjaXR5OiAwLjI1OyB9XG4gIDUwJSB7IG9wYWNpdHk6IDAuNDU7IH1cbiAgMTAwJSB7IG9wYWNpdHk6IDAuMjU7IH1cbn1cblxuLm9vLXZpcC1saXN0IHtcbiAgcGFkZGluZzogMC41ZW07XG4gIGxldHRlci1zcGFjaW5nOiAxcHg7XG59XG5cbi5vby12aXAtbGlzdCAub28tdmlwLWl0ZW0ge1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VlZjZmYztcbiAgY29sb3I6ICMxZDcyYWE7XG4gIG1hcmdpbjogNHB4O1xuICBwYWRkaW5nOiAwLjVlbSAwLjVlbSAwLjM1ZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBsaW5lLWhlaWdodDogMS4yO1xuICBmb250LXdlaWdodDogNjAwO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMjVzO1xufVxuXG4ub28tdmlwLWxpc3QuaXMtc25pZmZpbmcgLm9vLXZpcC1pdGVtIHtcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgb3BhY2l0eTogMC41O1xufVxuXG4ub28tdmlwLWxpc3QuaXMtc25pZmZpbmcgLm9vLXNuaWZmIHtcbiAgYW5pbWF0aW9uOiBvby1iZWF0IDAuMjVzIGluZmluaXRlIGFsdGVybmF0ZTtcbn1cblxuLm9vLXZpcC1saXN0IC5vby12aXAtaXRlbS5vby1zbmlmZiB7XG4gIGNvbG9yOiAjMDk5MjY4O1xufVxuXG4ub28tdmlwLWxpc3QuaXMtc25pZmZpbmcgLm9vLXNuaWZmIC5vby12aXAtd2VpZ2h0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzA5OTI2ODtcbn1cblxuLm9vLW5vdGlmaWNhdGlvbiB7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgcGFkZGluZzogMWVtIDJlbSAxZW0gMWVtO1xuICBtYXJnaW46IDAuNWVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgZm9udC1zaXplOiAwLjllbTtcbn1cblxuLm9vLW5vdGlmaWNhdGlvbi5vby13YXJuaW5nIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZGQ1NztcbiAgY29sb3I6IHJnYmEoMCwwLDAsMC43KTtcbn1cblxuLm9vLW5vdGlmaWNhdGlvbi5vby1zdWNjZXNzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ4Yzc3NDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbkBrZXlmcmFtZXMgb28tYmVhdHtcblx0dG8geyB0cmFuc2Zvcm06IHNjYWxlKDEuNCk7IH1cbn1cblxuLm9vLWNvbGxhcHNlIHtcbiAgbWluLXdpZHRoOiAyZW07XG59XG5cbi5vby12aXAtd2VpZ2h0LWJnLCAub28tdmlwLXdlaWdodCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICBoZWlnaHQ6IDJweDtcbiAgbGVmdDogLTFweDtcbiAgcmlnaHQ6IC0xcHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjVzO1xufVxuXG4ub28tdmlwLXdlaWdodC1iZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IC0xcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjZWQ0ZGE7XG59XG5cbi5vby12aXAtd2VpZ2h0LWJnLmlzLWZ1bGwge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGNhNjc4O1xufVxuXG4ub28tdmlwLXdlaWdodCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyYjhhM2U7XG4gIGJvcmRlci1yYWRpdXM6IDFweDtcbn1cblxuLm9vLXZpcC1saXN0IC5vby12aXAtaXRlbTpob3ZlciAub28tdmlwLXdlaWdodC1iZywgLm9vLXZpcC1saXN0IC5vby12aXAtaXRlbTpob3ZlciAub28tdmlwLXdlaWdodCwgLm9vLXZpcC1saXN0IC5vby12aXAtaXRlbS5pcy1hY3RpdmUgLm9vLXZpcC13ZWlnaHQtYmcsIC5vby12aXAtbGlzdCAub28tdmlwLWl0ZW0uaXMtYWN0aXZlIC5vby12aXAtd2VpZ2h0IHtcbiAgb3BhY2l0eTogMDtcbn1cblxuLm9vLXZpcC1saXN0IC5vby12aXAtaXRlbTpob3ZlciwgLm9vLXZpcC1saXN0IC5vby12aXAtaXRlbTphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWQ3MmFhO1xuICBjb2xvcjogI2VlZjZmYyAhaW1wb3J0YW50O1xufVxuXG4ub28tdmlwLWxpc3QgLm9vLXZpcC1pdGVtLmlzLWdvb2Qge1xuICBjb2xvcjogcmdiKDE0LCA5NSwgMTQ5KTtcbn1cblxuLm9vLXZpcC1saXN0IC5vby12aXAtaXRlbS5pcy1iYWQge1xuICBvcGFjaXR5OiAwLjg1O1xufVxuXG4ub28tdmlwLWxpc3QgLm9vLXZpcC1pdGVtLmlzLWJhZDpob3ZlciwgLm9vLXZpcC1saXN0IC5vby12aXAtaXRlbS5pcy1iYWQ6YWN0aXZlIHtcbiAgb3BhY2l0eTogMC45NTtcbn1cblxuLm9vLXZpcC1saXN0IC5vby12aXAtaXRlbS5pcy1hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmI4YTNlO1xuICBjb2xvcjogI2VlZjZmYztcbn1cblxuLm9vLXZpcC1saXN0LmlzLW9wZW4gLm9vLWNvbGxhcHNlLFxuLm9vLXNvdXJjZXMuaXMtb3BlbiAub28tY29sbGFwc2Uge1xuICB0cmFuc2Zvcm06c2NhbGVYKC0xKTtcbn1cblxuLm9vLXZpcC1saXN0Om5vdCguaXMtb3BlbikgLm9vLWhpZGUge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi5vby12aXAtdGlwIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYmEoNzMsIDgwLCA4NywgMC4xNSk7XG4gIHBhZGRpbmc6IDFlbSAxZW0gMC41ZW07XG4gIGZvbnQtc2l6ZTogMC44NWVtO1xuICBjb2xvcjogIzM0M2E0MDtcbiAgb3BhY2l0eTogMTtcbiAgYW5pbWF0aW9uOiBvby1jb2xvci1jaGFuZ2UtbGlnaHQgNXMgbm9ybWFsIGZvcndhcmRzIGVhc2UtaW4tb3V0O1xufVxuXG4ub28tdmlwLXRpcC5pcy13YXJuaW5nIHtcbiAgY29sb3I6ICNlODU5MGM7XG4gIGFuaW1hdGlvbjogb28tY29sb3ItY2hhbmdlLWxpZ2h0MiA1cyBub3JtYWwgZm9yd2FyZHMgZWFzZS1pbi1vdXQ7XG59XG5cbkBrZXlmcmFtZXMgb28tY29sb3ItY2hhbmdlLWxpZ2h0IHtcbiAgMCUgICB7IGNvbG9yOiAjMzQzYTQwOyBvcGFjaXR5OiAxOyB9XG4gIDEwMCUgeyBjb2xvcjogIzk3OWFhYjsgb3BhY2l0eTogMC44NTsgfVxufVxuXG5Aa2V5ZnJhbWVzIG9vLWNvbG9yLWNoYW5nZS1saWdodDIge1xuICAwJSAgIHsgY29sb3I6ICNlODU5MGM7IG9wYWNpdHk6IDE7IH1cbiAgMTAwJSB7IGNvbG9yOiAjZmQ3ZTE0OyBvcGFjaXR5OiAwLjg1OyB9XG59XG5cbi5vby12aXAtdGlwIHN0cm9uZyB7XG4gIG1hcmdpbjogMCAwLjVlbTtcbiAgZm9udC1zaXplOiAxLjI1ZW07XG4gIG9wYWNpdHk6IDAuODtcbn1cblxuLm9vLXZpcC10aXAgc3Ryb25nIGEsIC5vby12aXAtdGlwIHN0cm9uZyBhOnZpc2l0ZWR7XG4gIGNvbG9yOiAjMjI4YmU2O1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cblxuLm9vLXZpcC13YXJuaW5nIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2NzcwMDtcbiAgcGFkZGluZzogMC41ZW0gMWVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMC44NWVtO1xufVxuXG4ub28tdmlwLXdhcm5pbmcgYSB7XG4gIGNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7XG59XG5cbi5vby1wbGF5ZXItYmcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoaHR0cHM6Ly9wLnBzdGF0cC5jb20vb3JpZ2luL2ZmNDYwMDAwZjUzMDY4MzA5ZDc3KTtcbiAgei1pbmRleDogMjE0NzQ4MzY0NjtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG4iKSk7CiAgICAgICAgdmFyIG8gPSBERUJVRyB8fCBpc01vYmlsZSA\/ICc8ZGl2IGNsYXNzPSJvby12aXAtcGFuZWwgaXMtc2V0dGluZyI+XG48ZGl2IGNsYXNzPSJvby1uYXYtbGlua3MiPlxuICA8YSBocmVmPSJodHRwczovL2dyZWFzeWZvcmsub3JnL3poLUNOL3NjcmlwdHMvMzkzMjg0IiB0YXJnZXQ9Il9ibGFuayI+5rK554y05Zyw5Z2APC9hPjxhIGhyZWY9Imh0dHBzOi8vZ2l0ZWUuY29tL2VjcnVvcy9vbyIgdGFyZ2V0PSJfYmxhbmsiPuS7o+eggeS7k+W6kzwvYT48YSBocmVmPSJodHRwczovL2VjcnVvcy5naXRlZS5pby9vbmUvIiB0YXJnZXQ9Il9ibGFuayI+T25l5Li76aG1PC9hPlxuPC9kaXY+XG48L2Rpdj4nIDogIiI7CiAgICAgICAgaS5lcSgwKVtlXSgnXG48ZGl2IGNsYXNzPSJvby12aXAiPlxuICA8ZGl2IGNsYXNzPSJvby12aXAtcGFuZWwiPlxuICAgIDxkaXYgY2xhc3M9Im9vLXZpcC10aXRsZSI+PHNwYW4gY2xhc3M9Im9vLXZpcC10aXRsZS10ZXh0Ij5WSVAg6Kej5p6QPHNwYW4gY2xhc3M9Im9vLXZpcC1zbWFsbCI+dicuY29uY2F0KFZFUlNJT04sICc8L3NwYW4+PC9zcGFuPjwvZGl2PlxuICAgIDxkaXYgY2xhc3M9Im9vLXZpcC1zaWduIj4nKS5jb25jYXQoT09fU0lHTiwgIjwvZGl2PlxuICA8L2Rpdj4iKS5jb25jYXQobywgJ1xuICA8ZGl2IGNsYXNzPSJvby12aXAtbGlzdCI+XG4nKS5jb25jYXQoaXNBbGxvd1NuaWZmID8gJzxzcGFuIGNsYXNzPSJvby12aXAtaXRlbSBvby1ub3JtYWwgb28tc25pZmYiPicuY29uY2F0KHNuaWZmTmFtZSwgJzxzcGFuIGNsYXNzPSJvby12aXAtd2VpZ2h0IiBzdHlsZT0id2lkdGg6MTAwJTsiPjwvc3Bhbj48L3NwYW4+JykgOiAiIiwgIlxuIikuY29uY2F0KFZJUF9VUkxTLm1hcCgoZnVuY3Rpb24obiwgZSkgewogICAgICAgICAgcmV0dXJuICc8c3BhbiBjbGFzcz0iJyArICgib28tdmlwLWl0ZW0iICsgKElzKGlzVmlwVXJsUmVnZXgpIHx8ICFpc1VzZURlZmF1bHRWaXBVcmxzID8gIiIgOiBpc01vYmlsZSAmJiBuLmlzTSB8fCAhaXNNb2JpbGUgJiYgbi53ZWlnaHQgPj0gMSA\/ICIgaXMtZ29vZCIgOiAiIGlzLWJhZCIpKSArICciIF9vb0tleT0iJyArIENhZXNhckVuY3J5cHQoU3RyaW5nKGUpKSArICciIF9vb1dlaWdodD0iJyArIG4ud2VpZ2h0LnRvRml4ZWQoMikgKyAnIj4nICsgbi5uYW1lICsgJzxzcGFuIGNsYXNzPSJvby12aXAtd2VpZ2h0LWJnJyArIChuLmlzTSA\/ICIgaXMtZnVsbCIgOiAiIikgKyAnIj48L3NwYW4+PHNwYW4gY2xhc3M9Im9vLXZpcC13ZWlnaHQiIHN0eWxlPSJ3aWR0aDonICsgbi53ZWlnaHQgLyBtYXhWaXBXZWlnaHQgKiAxMDAgKyAnJTsiPjwvc3Bhbj48L3NwYW4+JwogICAgICAgIH0pKS5qb2luKCJcbiIpKS5jb25jYXQoVklQX1VSTFMubGVuZ3RoID4gY29sbGFwc2VOdW0gPyAnPHNwYW4gY2xhc3M9Im9vLXZpcC1pdGVtIG9vLW5vcm1hbCBvby1jb2xsYXBzZSI+4p6iPC9zcGFuPicgOiAiIiwgIlxuICA8L2Rpdj5cbiAgIikuY29uY2F0KGlzTW9iaWxlID8gJzxkaXYgY2xhc3M9Im9vLXZpcC10aXAnLmNvbmNhdChpc0FsbG93U25pZmYgPyAiIiA6ICIgaXMtd2FybmluZyIsICciPumFjeWQiOa1j+iniOWZqOeahDxzdHJvbmc+5bm\/5ZGK5oum5oiqPC9zdHJvbmc+5ZKMPHN0cm9uZz7ll4XmjqLmkq3mlL48L3N0cm9uZz7lip\/og73kvb\/nlKjvvIzkvZPpqozmm7TkvbPjgIInKS5jb25jYXQoaXNIaWtlciA\/ICIiIDogJzxicj7lj6\/oh6rooYzmi6bmiKrop6PmnpDnvZHnq5nnmoTlm77niYflub\/lkYrvvIzmiJborqLpmIUgPHN0cm9uZz48YSBocmVmPSJodHRwczovL2dpdGVlLmNvbS9lY3J1b3Mvb28vcmF3L21hc3Rlci9zY3JpcHRzL29vLm1vdmllLmFkYmxvY2sudHh0IiB0YXJnZXQ9Il9ibGFuayI+b28ubW92aWUgYWRibG9jazwvYT48L3N0cm9uZz4g5oum5oiq6KeE5YiZ44CCJywgIjwvZGl2PiIpIDogIiIsICJcbjwvZGl2PlxuIikpLCBzbWFydENvbGxhcHNlKCIub28tdmlwLWl0ZW0iKTsKICAgICAgICB2YXIgciA9ICExOwogICAgICAgIHUoKTsKICAgICAgICB2YXIgYSA9IDAsCiAgICAgICAgICBsID0gc2V0SW50ZXJ2YWwoKGZ1bmN0aW9uKCkgewogICAgICAgICAgICB1KCksIGErKyA+IDI1ICYmIGNsZWFySW50ZXJ2YWwobCkKICAgICAgICAgIH0pLCA1MDApCiAgICAgIH0gZWxzZSBzZXRUaW1lb3V0KChmdW5jdGlvbigpIHsKICAgICAgICBpbnNlcnRWaXBTb3VyY2UobiwgZSwgdCArIDEpCiAgICAgIH0pLCAyNTApCiAgICB9CgogICAgZnVuY3Rpb24gcyhuKSB7CiAgICAgICQoIi5vby1ub3RpZmljYXRpb24iKS5yZW1vdmUoKTsKICAgICAgdmFyIGUgPSBnZXRWaXBQbGF5ZXIoKTsKICAgICAgaWYgKDAgIT09IGUubGVuZ3RoKSB7CiAgICAgICAgcGF1c2VQbGF5KCksIGUuZW1wdHkoKS5hcHBlbmQoJzxkaXYgY2xhc3M9Im9vLXBsYXllci1ib3giPjxkaXYgY2xhc3M9Im9vLXBsYXllci1iZyI+PC9kaXY+PGlmcmFtZSBpZD0ib28tcGxheWVyIiBzdHlsZT0iJy5jb25jYXQoIndpZHRoOiAxMDAlOyBoZWlnaHQ6IDEwMCU7IGJvcmRlcjogbm9uZTsgb3V0bGluZTogbm9uZTsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyBwb3NpdGlvbjogYWJzb2x1dGU7IHotaW5kZXg6IDIxNDc0ODM2NDc7IGxlZnQ6IDA7IiwgJyIgJykuY29uY2F0KCcgd2lkdGg9IjEwMCUiIGhlaWdodD0iMTAwJSIgYWxsb3dmdWxsc2NyZWVuPSJ0cnVlIiBhbGxvd3RyYW5zcGFyZW5jeT0idHJ1ZSIgZnJhbWVib3JkZXI9IjAiIHNjcm9sbGluZz0ibm8iJywgJyBzcmM9IicpLmNvbmNhdChuLCAnIj48L2lmcmFtZT48L2Rpdj4nKSkKICAgICAgfSBlbHNlIGxvY2F0aW9uLmhyZWYgPSBuCiAgICB9CgogICAgZnVuY3Rpb24gYyhuLCBlKSB7CiAgICAgIHZhciB0ID0gbiArIGdldFZpcFRhcmdldFVybCgpOwogICAgICBsb2coImNsaWNrOiAiICsgdCksICQoIi5vby12aXAtaXRlbSIpLnJlbW92ZUNsYXNzKCJpcy1hY3RpdmUiKSwgJChlKS5hZGRDbGFzcygiaXMtYWN0aXZlIiksIE5vSW5uZXJWaXBVcmxSZWdleC50ZXN0KG4pIHx8IC9odHRwOi8udGVzdChuKSA\/IChwYXVzZVBsYXkoKSwgJCgiI29vLXBsYXllciIpLnJlbW92ZSgpLCBzZXRUaW1lb3V0KChmdW5jdGlvbigpIHsKICAgICAgICB3aW5kb3cub3Blbih0LCAiX2JsYW5rIikKICAgICAgfSksIDEwMCkpIDogcyh0KQogICAgfQoKICAgIGZ1bmN0aW9uIHAobiwgZSkgewogICAgICAkKG4pLmNsaWNrKChmdW5jdGlvbihuKSB7CiAgICAgICAgciB8fCAociA9ICEwLCBuLnByZXZlbnREZWZhdWx0KCksIGUodGhpcyksIHNldFRpbWVvdXQoKGZ1bmN0aW9uKCkgewogICAgICAgICAgciA9ICExCiAgICAgICAgfSksIDUwMCkpCiAgICAgIH0pKQogICAgfQoKICAgIGZ1bmN0aW9uIHUoKSB7CiAgICAgIHAoIi5vby12aXAtaXRlbTpub3QoLm9vLW5vcm1hbCkiLCAoZnVuY3Rpb24obikgewogICAgICAgICQoIi5vby12aXAtbGlzdC5pcy1zbmlmZmluZyIpLmxlbmd0aCA+IDAgfHwgKHNuaWZmRG9uZSgpLCBzbmlmZigrK3NuaWZmVGljayksIGMoVklQX1VSTFNbQ2Flc2FyRGVjcnlwdCgkKG4pLmF0dHIoIl9vb0tleSIpKV0udXJsLCBuKSkKICAgICAgfSkpLCBwKCIub28tdmlwLWxpc3QgLm9vLWNvbGxhcHNlIiwgKGZ1bmN0aW9uKG4pIHsKICAgICAgICAkKG4pLnBhcmVudCgiLm9vLXZpcC1saXN0IikudG9nZ2xlQ2xhc3MoImlzLW9wZW4iKQogICAgICB9KSksIHAoIi5vby12aXAtbGlzdCAub28tc25pZmYiLCAoZnVuY3Rpb24oKSB7CiAgICAgICAgc25pZmYoKytzbmlmZlRpY2ssICEwKQogICAgICB9KSksIHAoIi5vby12aXAtc2lnbiIsIChmdW5jdGlvbihuKSB7CiAgICAgICAgREVCVUcgfHwgaXNNb2JpbGUgPyAkKG4pLnBhcmVudCgiLm9vLXZpcC1wYW5lbCIpLnNpYmxpbmdzKCIuaXMtc2V0dGluZyIpLnRvZ2dsZUNsYXNzKCJpcy1vcGVuIikgOiBsb2NhdGlvbi5ocmVmID0gImh0dHBzOi8vZ2l0ZWUuY29tL2VjcnVvcy9vbyIKICAgICAgfSkpLCBwKCIub28tdmlwLXRpdGxlLXRleHQiLCAoZnVuY3Rpb24obikgewogICAgICAgIGlzTW9iaWxlID8gJChuKS5wYXJlbnQoIi5vby12aXAtcGFuZWwiKS5zaWJsaW5ncygiLmlzLXNldHRpbmciKS50b2dnbGVDbGFzcygiaXMtb3BlbiIpIDogbG9jYXRpb24uaHJlZiA9ICJodHRwczovL2dyZWFzeWZvcmsub3JnL3poLUNOL3NjcmlwdHMvMzkzMjg0IgogICAgICB9KSkKICAgIH0KICB9CgogIGZ1bmN0aW9uIGNhbGxiYWNrV2hlbkRvbmUoKSB7CiAgICBfJCgoZnVuY3Rpb24oKSB7CiAgICAgIEhUTUwuc2V0QXR0cmlidXRlKFBMVUdJTl9BVFRSLCBQTFVHSU5fSUQpLCBzZXRUaW1lb3V0KChmdW5jdGlvbigpIHsKICAgICAgICBIVE1MLnJlbW92ZUF0dHJpYnV0ZShQTFVHSU5fQVRUUikKICAgICAgfSksIDNlMykKICAgIH0pKQogIH0KCiAgZnVuY3Rpb24gZ2V0U2VhcmNoU291cmNlc0h0bWwobikgewogICAgdmFyIGUgPSAhKGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIHZvaWQgMCAhPT0gYXJndW1lbnRzWzFdKSB8fCBhcmd1bWVudHNbMV0sCiAgICAgIHQgPSBIcmVmLm1hdGNoKC9cL1wvKFteXC9dKykvKVsxXTsKICAgIHJldHVybiDmkJzntKLmupAubWFwKChmdW5jdGlvbihlKSB7CiAgICAgIHJldHVybiBlLnVybC5pbmNsdWRlcyh0KSA\/ICIiIDogJzxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSInICsgdG9TZWFyY2hVcmwoZS51cmwsIG4pICsgJyI+JyArIGUubmFtZSArICI8L2E+IgogICAgfSkpLmpvaW4oIlxuIikgKyAoZSAmJiDmkJzntKLmupAubGVuZ3RoID4gY29sbGFwc2VOdW0gPyAnPGEgY2xhc3M9Im9vLWNvbGxhcHNlIj7inqI8L2E+JyA6ICIiKQogIH0KCiAgZnVuY3Rpb24gaW5zZXJ0U2VhcmNoQWRkb24obiwgZSkgewogICAgdmFyIHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiB2b2lkIDAgIT09IGFyZ3VtZW50c1syXSA\/IGFyZ3VtZW50c1syXSA6ICJhZnRlciIsCiAgICAgIGkgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiB2b2lkIDAgIT09IGFyZ3VtZW50c1szXSA\/IGFyZ3VtZW50c1szXSA6IDAsCiAgICAgIG8gPSBIcmVmLmluY2x1ZGVzKCJtLmRvdWJhbi5jb20vc2VhcmNoIik7CiAgICBpZiAoISghbiB8fCAhbyAmJiAkKCIub28tc291cmNlcyIpLmxlbmd0aCA+IDAgfHwgaSA+IDIwKSkgewogICAgICB2YXIgcjsKICAgICAgbG9nKCJpbnNlcnRTZWFyY2hBZGRvbiIpOwogICAgICB2YXIgYSA9ICExOwogICAgICBwbGF5ZXJUaXRsZSA9IG4sICJzdHJpbmciID09IHR5cGVvZiBlICYmIChhID0gZS5zdGFydHNXaXRoKCItIikpICYmIChlID0gZS5zbGljZSgxKSksIDAgIT09IChyID0gJChlKSkubGVuZ3RoID8gKGFkZFN0eWxlKCJcbi5vby1zb3VyY2VzIHtcbiAgbWF4LXdpZHRoOiAxMDAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiAxMHB4O1xufVxuXG4ub28tdmlwIC5vby1zb3VyY2VzIHtcbiAgbWF4LXdpZHRoOiB1bnNldDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYmEoNzMsIDgwLCA4NywgMC4xNSk7XG4gIG1hcmdpbi10b3A6IDVweDtcbn1cblxuLm9vLXNvdXJjZXMgKyAub28tc291cmNlcyB7Ii5jb25jYXQoUHVyaWZ5U3R5bGUsICJ9XG5cbi5vby1zb3VyY2VzIGEge1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleCAhaW1wb3J0YW50O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBmb250LXNpemU6IDEycHggIWltcG9ydGFudDtcbiAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgcGFkZGluZzogNXB4IDEwcHggM3B4O1xuICBtYXJnaW4tdG9wOiA4cHg7XG4gIG1hcmdpbi1yaWdodDogNnB4O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWZmYWYzICFpbXBvcnRhbnQ7XG4gIGNvbG9yOiAjMjU3OTQyICFpbXBvcnRhbnQ7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYm9yZGVyOiAxcHggc29saWQgI2YxZjNmNTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4yNXM7XG59XG5cbi5vby12aXAtbGlzdCArIC5vby1zb3VyY2VzIC5vby1jb2xsYXBzZSB7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4ICFpbXBvcnRhbnQ7XG59XG5cbi5vby1zb3VyY2VzOm5vdCguaXMtb3BlbikgLm9vLWhpZGUge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi5vby1jb2xsYXBzZSB7XG4gIG1pbi13aWR0aDogMmVtO1xufVxuXG4ub28tc291cmNlcyBhOmhvdmVyIHtcbiAgYm9yZGVyOiAxcHggc29saWQgIzA5OTI2ODtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzI1Nzk0MiAhaW1wb3J0YW50O1xuICBjb2xvcjogI2VmZmFmMyAhaW1wb3J0YW50O1xufVxuIikpLCByW2EgPyAibGFzdCIgOiAiZmlyc3QiXSgpW3RdKCc8ZGl2IGNsYXNzPSJvby1zb3VyY2VzIj5cbicuY29uY2F0KGdldFNlYXJjaFNvdXJjZXNIdG1sKHB1cmlmeUtleXdvcmQobiksICFvKSwgIlxuPC9kaXY+IikpLCBvIHx8IHNtYXJ0Q29sbGFwc2UoIi5vby1zb3VyY2VzIGEiKSwgJCgiLm9vLXNvdXJjZXMgLm9vLWNvbGxhcHNlIikuY2xpY2soKGZ1bmN0aW9uKCkgewogICAgICAgICQodGhpcykucGFyZW50KCIub28tc291cmNlcyIpLnRvZ2dsZUNsYXNzKCJpcy1vcGVuIikKICAgICAgfSkpKSA6IHNldFRpbWVvdXQoKGZ1bmN0aW9uKCkgewogICAgICAgIGluc2VydFNlYXJjaEFkZG9uKG4sIGUsIHQsIGkgKyAxKQogICAgICB9KSwgNTAwKQogICAgfQogIH0KCiAgZnVuY3Rpb24gdmlwQWRkb25HbygpIHsKICAgIHZhciBuID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgdm9pZCAwICE9PSBhcmd1bWVudHNbMF0gPyBhcmd1bWVudHNbMF0gOiAiYm9keSI7CgogICAgZnVuY3Rpb24gZShlKSB7CiAgICAgICQobikuYWRkQ2xhc3MoIm9vIikuYXBwZW5kKGUpLCAkKGUpLmF0dHIoewogICAgICAgIGF1dG9wbGF5OiAhMCwKICAgICAgICBjb250cm9sczogITAKICAgICAgfSksIGUucGxheSgpLCBlLm9uY2FucGxheSA9IGZ1bmN0aW9uKCkgewogICAgICAgIGUucGxheSgpCiAgICAgIH0KICAgIH0KICAgIGFkZFN0eWxlKCJcbmJvZHk6YWZ0ZXIsXG4jYTEgfiBzY3JpcHQgfiBkaXYsXG4uZHBsYXllciA+ICpbaWRePWFkXSB7Ii5jb25jYXQoUHVyaWZ5U3R5bGUsICJ9XG5cbiIpLmNvbmNhdChuLCAiID4gdmlkZW8ge1xuICBwb3NpdGlvbjogZml4ZWQgIWltcG9ydGFudDtcbiAgdG9wOiAwcHggIWltcG9ydGFudDtcbiAgbGVmdDogMHB4ICFpbXBvcnRhbnQ7XG4gIG1pbi13aWR0aDogMHB4ICFpbXBvcnRhbnQ7XG4gIG1pbi1oZWlnaHQ6IDBweCAhaW1wb3J0YW50O1xuICBtYXgtd2lkdGg6IDk5Ljk5JSAhaW1wb3J0YW50O1xuICBtYXgtaGVpZ2h0OiA5OS45OSUgIWltcG9ydGFudDtcbiAgbWFyZ2luOiAwcHggIWltcG9ydGFudDtcbiAgdmlzaWJpbGl0eTogdmlzaWJsZSAhaW1wb3J0YW50O1xuICBib3JkZXItd2lkdGg6IDBweCAhaW1wb3J0YW50O1xuICBiYWNrZ3JvdW5kOiBibGFjayAhaW1wb3J0YW50O1xuICB6LWluZGV4OiAyMTQ3NDgzNjQ3ICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xufVxuXG4ub28uaXMtZmFpbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xufVxuXG4ub28uaXMtZmFpbCAudGlwIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAxZW07XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbiAgICAiKSksIF8kKChmdW5jdGlvbigpIHsKICAgICAgdmFyIHQsIGkgPSAhMCwKICAgICAgICBvID0gITEsCiAgICAgICAgciA9ICExLAogICAgICAgIGEgPSBzZXRJbnRlcnZhbCgoZnVuY3Rpb24oKSB7CiAgICAgICAgICBpZiAoIXIpCiAgICAgICAgICAgIGlmIChyID0gITAsICQobikuaGFzQ2xhc3MoIm9vIikpIGNsZWFySW50ZXJ2YWwoYSk7CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICh0ID0gJCgidmlkZW8iKS5nZXQoMCkpICYmIGUodCk7CiAgICAgICAgICAgICAgdmFyIGwgPSAkKCJpZnJhbWUiKTsKICAgICAgICAgICAgICBpZiAoMCAhPT0gbC5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIGZvciAodmFyIHM7IDAgPT09ICh0ID0gbC5jb250ZW50cygpLmZpbmQoInZpZGVvIikpLmxlbmd0aCAmJiAocyA9IGwuY29udGVudHMoKS5maW5kKCJpZnJhbWUiKSkubGVuZ3RoID4gMDspIGwgPSBzOwogICAgICAgICAgICAgICAgdC5sZW5ndGggPiAwICYmIHQuYXR0cigic3JjIikgPyAoY2xlYXJJbnRlcnZhbChhKSwgaSAmJiAoaSA9ICEwLCBlKHQpKSkgOiBvICYmIGNsZWFySW50ZXJ2YWwoYSksIHIgPSAhMSwgJCgidGl0bGUiKS5odG1sKCkgIT09IFBMVUdJTl9JRCAmJiAkKCJ0aXRsZSIpLmh0bWwoUExVR0lOX0lEKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0pLCAyNTApOwogICAgICBzZXRUaW1lb3V0KChmdW5jdGlvbigpIHsKICAgICAgICBvID0gITAKICAgICAgfSksIDE1ZTMpCiAgICB9KSkKICB9CgogIGZ1bmN0aW9uIGV4ZWNRdWlja0FkZG9ucyhuKSB7CiAgICBsb2coImV4ZWNRdWlja0FkZG9uczoiLCBuLm5hbWUgfHwgbi5tYXRjaCk7CiAgICB2YXIgZSA9ICIiOwogICAgbi5oaWRlICYmIChlICs9ICJcbiIuY29uY2F0KG4uaGlkZSwgIiB7IikuY29uY2F0KFB1cmlmeVN0eWxlLCAifVxuIikpLCBuLmNzcyAmJiAoZSArPSBuLmNzcyksIGUgJiYgYWRkU3R5bGUoZSksIF8kKChmdW5jdGlvbigpIHsKICAgICAgaWYgKChuLnNpZ24gJiYgJChuLnNpZ24pLmh0bWwoT09fU0lHTiksIG4udmlwKSAmJiAoKEFycmF5LmlzQXJyYXkobi52aXApID8gbi52aXAgOiBbbi52aXBdKS5mb3JFYWNoKChmdW5jdGlvbihuKSB7CiAgICAgICAgICBpbnNlcnRWaXBTb3VyY2UoKG4gPSBuLnNwbGl0KC9ccypcfFxzKi8pKVswXSwgblsxXSkKICAgICAgICB9KSksIG4udGl0bGUpKSB2YXIgZSA9IDAsCiAgICAgICAgdCA9IHNldEludGVydmFsKChmdW5jdGlvbigpIHsKICAgICAgICAgIHZhciBpID0gJChuLnRpdGxlKS5lcSgwKS50ZXh0KCk7CiAgICAgICAgICBpICYmIChjbGVhckludGVydmFsKHQpLCBpbnNlcnRTZWFyY2hBZGRvbihpLCAiLm9vLXZpcC1saXN0IiwgImFmdGVyIikpLCBlKysgPiA1MCAmJiBjbGVhckludGVydmFsKHQpCiAgICAgICAgfSksIDIwMCk7CiAgICAgIG4uanVtcCAmJiAobG9nKCJzZWFyY2hBZGRvbjoiLCBuKSwgXyQoKGZ1bmN0aW9uKCkgewogICAgICAgIHZhciBlID0gInN0cmluZyIgPT0gdHlwZW9mIG4ua2V5d29yZCA\/ICQobi5rZXl3b3JkKS5lcSgwKS50ZXh0KCkgOiAiZnVuY3Rpb24iID09IHR5cGVvZiBuLmtleXdvcmQgPyBuLmtleXdvcmQoJCkgOiBnZXRLZXl3b3JkRnJvbVVybChuLmtleXdvcmQpOwogICAgICAgIChBcnJheS5pc0FycmF5KG4uanVtcCkgPyBuLmp1bXAgOiBuLmp1bXAuc3BsaXQoL1xzKixccyovKSkuZm9yRWFjaCgoZnVuY3Rpb24obikgewogICAgICAgICAgbiA9IG4uc3BsaXQoL1xzKlx8XHMqLyksIGluc2VydFNlYXJjaEFkZG9uKGUsIG5bMF0sIG5bMV0gfHwgImFmdGVyIikKICAgICAgICB9KSkKICAgICAgfSkpKQogICAgfSkpCiAgfQoKICBmdW5jdGlvbiBtYWtlQmV0dGVyQWRkb25zKCkgewogICAgQkVUVEVSX0FERE9OUy5mb3JFYWNoKChmdW5jdGlvbihuKSB7CiAgICAgICgic3RyaW5nIiA9PSB0eXBlb2Ygbi5tYXRjaCA\/IEhyZWYuaW5jbHVkZXMobi5tYXRjaCkgOiBJcyhuLm1hdGNoKSkgJiYgZXhlY1F1aWNrQWRkb25zKG4pCiAgICB9KSkKICB9CgogIGZ1bmN0aW9uIHVybERldGVjdG9yKG4pIHsKICAgIHNldEludGVydmFsKChmdW5jdGlvbigpIHsKICAgICAgSHJlZiAhPT0gd2luZG93LmxvY2F0aW9uLmhyZWYgJiYgKEhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZiwgbiAmJiBuKCkpCiAgICB9KSwgMjUwKQogIH0KfSgpOw==",
  "info" : "VIP视频解析",
  "name" : "VIP视频解析",
  "match" : 0,
  "version" : "20.3.14",
  "regex" : "*",
  "author" : " (o˘◡˘o)",
  "runat" : 0
}